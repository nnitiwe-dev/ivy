Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[817,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[383,0,0,"-"],creation_functions:[384,0,0,"-"],data_type_functions:[387,0,0,"-"],data_types:[391,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[385,2,1,""],zeros:[386,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[387,1,1,""],finfo:[389,2,1,""],iinfo:[390,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[387,3,1,""],bits:[387,3,1,""],eps:[387,3,1,""],max:[387,3,1,""],min:[387,3,1,""],smallest_normal:[387,3,1,""]},"ivy.functional.backends.numpy.core":{device:[426,0,0,"-"],general:[428,0,0,"-"],gradients:[462,0,0,"-"],image:[467,0,0,"-"],linear_algebra:[471,0,0,"-"],logic:[475,0,0,"-"],math:[476,0,0,"-"],random:[478,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[427,1,1,""],clear_mem_on_dev:[426,2,1,""],dev:[426,2,1,""],dev_from_str:[426,2,1,""],dev_to_str:[426,2,1,""],gpu_is_available:[426,2,1,""],num_gpus:[426,2,1,""],to_dev:[426,2,1,""],tpu_is_available:[426,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[427,3,1,""],start:[427,3,1,""],stop:[427,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[428,2,1,""],arange:[429,2,1,""],argmax:[430,2,1,""],argmin:[431,2,1,""],array:[432,2,1,""],asarray:[428,2,1,""],astype:[428,2,1,""],cast:[433,2,1,""],ceil:[428,2,1,""],clip:[428,2,1,""],compile:[434,2,1,""],concatenate:[435,2,1,""],constant_pad:[428,2,1,""],container_types:[428,2,1,""],copy_array:[428,2,1,""],cumprod:[436,2,1,""],current_framework_str:[428,2,1,""],dtype:[437,2,1,""],dtype_bits:[438,2,1,""],dtype_from_str:[439,2,1,""],dtype_to_str:[440,2,1,""],equal:[428,2,1,""],floor:[428,2,1,""],floormod:[428,2,1,""],full:[441,2,1,""],gather:[442,2,1,""],gather_nd:[443,2,1,""],get_num_dims:[428,2,1,""],identity:[444,2,1,""],indices_where:[445,2,1,""],inplace_arrays_supported:[428,2,1,""],inplace_decrement:[446,2,1,""],inplace_increment:[447,2,1,""],inplace_update:[448,2,1,""],inplace_variables_supported:[428,2,1,""],is_array:[449,2,1,""],linear_resample:[450,2,1,""],linspace:[451,2,1,""],logspace:[452,2,1,""],matmul:[428,2,1,""],meshgrid:[428,2,1,""],multiprocessing:[428,2,1,""],one_hot:[453,2,1,""],ones_like:[454,2,1,""],round:[428,2,1,""],scatter_flat:[455,2,1,""],scatter_nd:[456,2,1,""],shape:[428,2,1,""],split:[457,2,1,""],squeeze:[458,2,1,""],to_list:[428,2,1,""],to_numpy:[428,2,1,""],to_scalar:[428,2,1,""],transpose:[459,2,1,""],unstack:[460,2,1,""],where:[428,2,1,""],zero_pad:[428,2,1,""],zeros_like:[461,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[463,2,1,""],is_variable:[464,2,1,""],stop_gradient:[465,2,1,""],variable:[466,2,1,""],variable_data:[462,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[468,2,1,""],gradient_image:[469,2,1,""],stack_images:[470,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[472,2,1,""],qr:[473,2,1,""],vector_to_skew_symmetric_matrix:[474,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[477,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[479,2,1,""],randint:[478,2,1,""],random_normal:[478,2,1,""],random_uniform:[478,2,1,""],seed:[478,2,1,""],shuffle:[478,2,1,""]},"ivy.functional.ivy":{array_api:[818,0,0,"-"],core:[851,0,0,"-"],nn:[1191,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[819,0,0,"-"],creation_functions:[820,0,0,"-"],data_type_functions:[823,0,0,"-"],data_types:[826,0,0,"-"],elementwise_functions:[827,0,0,"-"],function_and_method_signatures:[837,0,0,"-"],linear_algebra:[838,0,0,"-"],manipulation_functions:[841,0,0,"-"],searching_functions:[843,0,0,"-"],set_functions:[844,0,0,"-"],sorting_functions:[845,0,0,"-"],statistical_functions:[847,0,0,"-"],utility_functions:[848,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[819,4,1,""],nan:[819,4,1,""],pi:[819,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[821,2,1,""],zeros:[822,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[824,2,1,""],iinfo:[825,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[828,2,1,""],bitwise_and:[829,2,1,""],cos:[830,2,1,""],cosh:[831,2,1,""],isfinite:[832,2,1,""],isnan:[833,2,1,""],less:[834,2,1,""],logical_not:[835,2,1,""],sqrt:[836,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{svd:[839,2,1,""],vector_norm:[840,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[842,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[846,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[849,2,1,""],any:[850,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[852,0,0,"-"],compilation:[891,0,0,"-"],device:[893,0,0,"-"],dtype:[943,0,0,"-"],general:[967,0,0,"-"],gradients:[1066,0,0,"-"],image:[1082,0,0,"-"],linalg:[1089,0,0,"-"],logic:[1096,0,0,"-"],math:[1099,0,0,"-"],meta:[1115,0,0,"-"],multi_node:[1119,0,0,"-"],nest:[1163,0,0,"-"],random:[1175,0,0,"-"],reductions:[1182,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[853,2,1,""],builtin_add:[854,2,1,""],builtin_and:[855,2,1,""],builtin_bool:[856,2,1,""],builtin_contains:[857,2,1,""],builtin_deepcopy:[858,2,1,""],builtin_dir:[859,2,1,""],builtin_eq:[860,2,1,""],builtin_float:[861,2,1,""],builtin_floordiv:[862,2,1,""],builtin_ge:[863,2,1,""],builtin_getattr:[864,2,1,""],builtin_getattribute:[865,2,1,""],builtin_getitem:[866,2,1,""],builtin_gt:[867,2,1,""],builtin_int:[868,2,1,""],builtin_invert:[869,2,1,""],builtin_le:[870,2,1,""],builtin_lt:[871,2,1,""],builtin_mul:[872,2,1,""],builtin_ne:[873,2,1,""],builtin_neg:[874,2,1,""],builtin_or:[875,2,1,""],builtin_pos:[876,2,1,""],builtin_pow:[877,2,1,""],builtin_radd:[878,2,1,""],builtin_rand:[879,2,1,""],builtin_rfloordiv:[880,2,1,""],builtin_rmul:[881,2,1,""],builtin_ror:[882,2,1,""],builtin_rpow:[883,2,1,""],builtin_rsub:[884,2,1,""],builtin_rtruediv:[885,2,1,""],builtin_rxor:[886,2,1,""],builtin_setitem:[887,2,1,""],builtin_sub:[888,2,1,""],builtin_truediv:[889,2,1,""],builtin_xor:[890,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[892,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[893,1,1,""],DevClonedItem:[895,1,1,""],DevClonedIter:[896,1,1,""],DevClonedNest:[897,1,1,""],DevDistItem:[898,1,1,""],DevDistIter:[899,1,1,""],DevDistNest:[900,1,1,""],DevManager:[893,1,1,""],DevMapper:[902,1,1,""],DevMapperMultiProc:[903,1,1,""],MultiDev:[893,1,1,""],MultiDevItem:[905,1,1,""],MultiDevIter:[906,1,1,""],MultiDevNest:[907,1,1,""],Profiler:[908,1,1,""],clear_mem_on_dev:[909,2,1,""],default_device:[910,2,1,""],dev:[911,2,1,""],dev_clone:[912,2,1,""],dev_clone_array:[913,2,1,""],dev_clone_iter:[914,2,1,""],dev_clone_nest:[915,2,1,""],dev_dist:[916,2,1,""],dev_dist_array:[917,2,1,""],dev_dist_iter:[918,2,1,""],dev_dist_nest:[919,2,1,""],dev_from_str:[920,2,1,""],dev_to_str:[921,2,1,""],dev_unify:[922,2,1,""],dev_unify_array:[923,2,1,""],dev_unify_iter:[924,2,1,""],dev_unify_nest:[925,2,1,""],dev_util:[926,2,1,""],get_all_arrays_on_dev:[927,2,1,""],gpu_is_available:[928,2,1,""],num_arrays_on_dev:[929,2,1,""],num_cpu_cores:[930,2,1,""],num_gpus:[931,2,1,""],percent_used_mem_on_dev:[932,2,1,""],print_all_arrays_on_dev:[933,2,1,""],set_default_device:[934,2,1,""],set_split_factor:[935,2,1,""],split_factor:[936,2,1,""],split_func_call:[937,2,1,""],to_dev:[938,2,1,""],total_mem_on_dev:[939,2,1,""],tpu_is_available:[940,2,1,""],unset_default_device:[941,2,1,""],used_mem_on_dev:[942,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[893,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[893,3,1,""],da_tune_step:[893,3,1,""],dim_size:[893,3,1,""],ds_tune_step:[893,3,1,""],map:[893,3,1,""],repeated_config_check:[893,3,1,""],tune_step:[893,3,1,""],tuned:[893,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[902,3,1,""],map:[902,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[903,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[893,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[905,3,1,""],items:[905,3,1,""],keys:[905,3,1,""],shape:[905,3,1,""],values:[905,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[906,3,1,""],at_dev:[906,3,1,""],at_devs:[906,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[907,3,1,""],at_dev:[907,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[908,3,1,""],start:[908,3,1,""],stop:[908,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[943,1,1,""],DefaultFloatDtype:[943,1,1,""],DefaultIntDtype:[943,1,1,""],astype:[943,2,1,""],cast:[947,2,1,""],closest_valid_dtype:[948,2,1,""],convert_dtype:[949,2,1,""],default_dtype:[950,2,1,""],default_float_dtype:[951,2,1,""],default_int_dtype:[952,2,1,""],dtype:[953,2,1,""],dtype_bits:[954,2,1,""],dtype_from_str:[955,2,1,""],dtype_to_str:[956,2,1,""],invalid_dtype:[957,2,1,""],is_float_dtype:[958,2,1,""],is_int_dtype:[959,2,1,""],set_default_dtype:[960,2,1,""],set_default_float_dtype:[961,2,1,""],set_default_int_dtype:[962,2,1,""],unset_default_dtype:[963,2,1,""],unset_default_float_dtype:[964,2,1,""],unset_default_int_dtype:[965,2,1,""],valid_dtype:[966,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[943,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[943,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[943,3,1,""]},"ivy.functional.ivy.core.general":{"default":[992,2,1,""],abs:[968,2,1,""],all_equal:[969,2,1,""],arange:[970,2,1,""],arg_names:[971,2,1,""],argmax:[972,2,1,""],argmin:[973,2,1,""],array:[974,2,1,""],array_equal:[975,2,1,""],arrays_equal:[976,2,1,""],asarray:[967,2,1,""],assert_supports_inplace:[977,2,1,""],broadcast_to:[978,2,1,""],cache_fn:[979,2,1,""],ceil:[980,2,1,""],clip:[981,2,1,""],clip_matrix_norm:[982,2,1,""],clip_vector_norm:[983,2,1,""],concatenate:[984,2,1,""],constant_pad:[985,2,1,""],container_types:[986,2,1,""],copy_array:[987,2,1,""],cross:[988,2,1,""],cumprod:[989,2,1,""],cumsum:[990,2,1,""],current_framework_str:[991,2,1,""],einops_rearrange:[993,2,1,""],einops_reduce:[994,2,1,""],einops_repeat:[995,2,1,""],equal:[996,2,1,""],exists:[997,2,1,""],expand_dims:[998,2,1,""],flip:[999,2,1,""],floor:[1000,2,1,""],floormod:[1001,2,1,""],fourier_encode:[1002,2,1,""],full:[1003,2,1,""],gather:[1004,2,1,""],gather_nd:[1005,2,1,""],get_all_arrays_in_memory:[1006,2,1,""],get_min_base:[1007,2,1,""],get_min_denominator:[1008,2,1,""],get_num_dims:[1009,2,1,""],get_referrers_recursive:[1010,2,1,""],has_nans:[1011,2,1,""],identity:[1012,2,1,""],indices_where:[1013,2,1,""],inplace_arrays_supported:[1014,2,1,""],inplace_decrement:[1015,2,1,""],inplace_increment:[1016,2,1,""],inplace_update:[1017,2,1,""],inplace_variables_supported:[1018,2,1,""],is_array:[1019,2,1,""],isinf:[1020,2,1,""],linear_resample:[1021,2,1,""],linspace:[1022,2,1,""],logspace:[1023,2,1,""],match_kwargs:[1024,2,1,""],matmul:[1025,2,1,""],maximum:[1026,2,1,""],meshgrid:[1027,2,1,""],minimum:[1028,2,1,""],multiprocessing:[1029,2,1,""],num_arrays_in_memory:[1030,2,1,""],one_hot:[1031,2,1,""],ones:[1032,2,1,""],ones_like:[1033,2,1,""],print_all_arrays_in_memory:[1034,2,1,""],queue_timeout:[1035,2,1,""],repeat:[1036,2,1,""],reshape:[1037,2,1,""],round:[1038,2,1,""],scatter_flat:[1039,2,1,""],scatter_nd:[1040,2,1,""],set_min_base:[1041,2,1,""],set_min_denominator:[1042,2,1,""],set_queue_timeout:[1043,2,1,""],set_tmp_dir:[1044,2,1,""],shape:[1045,2,1,""],shape_to_tuple:[1046,2,1,""],split:[1047,2,1,""],squeeze:[1048,2,1,""],stable_divide:[1049,2,1,""],stable_pow:[1050,2,1,""],stack:[1051,2,1,""],supports_inplace:[1052,2,1,""],swapaxes:[1053,2,1,""],tile:[1054,2,1,""],tmp_dir:[1055,2,1,""],to_list:[1056,2,1,""],to_numpy:[1057,2,1,""],to_scalar:[1058,2,1,""],transpose:[1059,2,1,""],try_else_none:[1060,2,1,""],unstack:[1061,2,1,""],value_is_nan:[1062,2,1,""],where:[1063,2,1,""],zero_pad:[1064,2,1,""],zeros_like:[1065,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1066,1,1,""],adam_step:[1068,2,1,""],adam_update:[1069,2,1,""],execute_with_gradients:[1070,2,1,""],gradient_descent_update:[1071,2,1,""],is_variable:[1072,2,1,""],lamb_update:[1073,2,1,""],lars_update:[1074,2,1,""],optimizer_update:[1075,2,1,""],set_with_grads:[1076,2,1,""],stop_gradient:[1077,2,1,""],unset_with_grads:[1078,2,1,""],variable:[1079,2,1,""],variable_data:[1080,2,1,""],with_grads:[1081,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1066,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1083,2,1,""],float_img_to_uint8_img:[1084,2,1,""],gradient_image:[1085,2,1,""],random_crop:[1086,2,1,""],stack_images:[1087,2,1,""],uint8_img_to_float_img:[1088,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1090,2,1,""],inv:[1091,2,1,""],matrix_norm:[1092,2,1,""],pinv:[1093,2,1,""],qr:[1094,2,1,""],vector_to_skew_symmetric_matrix:[1095,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1097,2,1,""],logical_or:[1098,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1100,2,1,""],acosh:[1101,2,1,""],asin:[1102,2,1,""],atan2:[1104,2,1,""],atan:[1103,2,1,""],atanh:[1105,2,1,""],cosh:[1106,2,1,""],divide:[1107,2,1,""],erf:[1108,2,1,""],exp:[1109,2,1,""],log:[1110,2,1,""],sin:[1111,2,1,""],sinh:[1112,2,1,""],tan:[1113,2,1,""],tanh:[1114,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1116,2,1,""],maml_step:[1117,2,1,""],reptile_step:[1118,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1119,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1164,2,1,""],copy_nest:[1165,2,1,""],index_nest:[1166,2,1,""],map:[1167,2,1,""],map_nest_at_index:[1168,2,1,""],map_nest_at_indices:[1169,2,1,""],multi_index_nest:[1170,2,1,""],nested_indices_where:[1171,2,1,""],nested_map:[1172,2,1,""],set_nest_at_index:[1173,2,1,""],set_nest_at_indices:[1174,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1176,2,1,""],randint:[1177,2,1,""],random_normal:[1178,2,1,""],random_uniform:[1179,2,1,""],seed:[1180,2,1,""],shuffle:[1181,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1183,2,1,""],reduce_max:[1184,2,1,""],reduce_mean:[1185,2,1,""],reduce_min:[1186,2,1,""],reduce_prod:[1187,2,1,""],reduce_std:[1188,2,1,""],reduce_sum:[1189,2,1,""],reduce_var:[1190,2,1,""]},"ivy.functional.ivy.nn":{activations:[1192,0,0,"-"],layers:[1200,0,0,"-"],losses:[1213,0,0,"-"],norms:[1217,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1193,2,1,""],leaky_relu:[1194,2,1,""],relu:[1195,2,1,""],sigmoid:[1196,2,1,""],softmax:[1197,2,1,""],softplus:[1198,2,1,""],tanh:[1199,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1201,2,1,""],conv1d_transpose:[1202,2,1,""],conv2d:[1203,2,1,""],conv2d_transpose:[1204,2,1,""],conv3d:[1205,2,1,""],conv3d_transpose:[1206,2,1,""],depthwise_conv2d:[1207,2,1,""],dropout:[1208,2,1,""],linear:[1209,2,1,""],lstm_update:[1210,2,1,""],multi_head_attention:[1211,2,1,""],scaled_dot_product_attention:[1212,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1214,2,1,""],cross_entropy:[1215,2,1,""],sparse_cross_entropy:[1216,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1218,2,1,""]},"ivy.graph_compiler":{compiler:[1219,0,0,"-"],globals:[1222,0,0,"-"],graph:[1225,0,0,"-"],helpers:[1227,0,0,"-"],op_logging:[1228,0,0,"-"],param:[1229,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1220,2,1,""],show_graph:[1221,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1223,2,1,""],log_global_inference_rel_times:[1224,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1225,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1225,3,1,""],add_fn_to_dict:[1225,3,1,""],add_param:[1225,3,1,""],compiled:[1225,3,1,""],connect:[1225,3,1,""],debug_info:[1225,3,1,""],get_param:[1225,3,1,""],get_param_recursive:[1225,3,1,""],include_generators:[1225,3,1,""],increment_param_count:[1225,3,1,""],log_all_ops:[1225,3,1,""],params_all_empty:[1225,3,1,""],save_debug_info:[1225,3,1,""],set_param:[1225,3,1,""],show:[1225,3,1,""],show_debug_info:[1225,3,1,""],update_inference_times:[1225,3,1,""],with_array_caching:[1225,3,1,""]},"ivy.graph_compiler.param":{Param:[1229,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1229,3,1,""],count:[1229,3,1,""],depth:[1229,3,1,""],get:[1229,3,1,""],is_var:[1229,3,1,""],ptype:[1229,3,1,""],set:[1229,3,1,""],set_count:[1229,3,1,""],shape:[1229,3,1,""]},"ivy.stateful":{activations:[1234,0,0,"-"],converters:[1237,0,0,"-"],initializers:[1239,0,0,"-"],layers:[1248,0,0,"-"],module:[1260,0,0,"-"],norms:[1262,0,0,"-"],optimizers:[1264,0,0,"-"],sequential:[1270,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1235,1,1,""],GELU:[1236,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1235,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1236,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1238,2,1,""]},"ivy.stateful.initializers":{Constant:[1239,1,1,""],FirstLayerSiren:[1241,1,1,""],GlorotUniform:[1242,1,1,""],KaimingNormal:[1239,1,1,""],Ones:[1244,1,1,""],Siren:[1245,1,1,""],Uniform:[1239,1,1,""],Zeros:[1247,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1239,3,1,""],create_variables:[1239,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1241,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1242,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1239,3,1,""],create_variables:[1239,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1244,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1245,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1239,3,1,""],create_variables:[1239,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1247,3,1,""]},"ivy.stateful.layers":{Conv1D:[1249,1,1,""],Conv1DTranspose:[1250,1,1,""],Conv2D:[1251,1,1,""],Conv2DTranspose:[1252,1,1,""],Conv3D:[1253,1,1,""],Conv3DTranspose:[1254,1,1,""],DepthwiseConv2D:[1255,1,1,""],Dropout:[1256,1,1,""],LSTM:[1257,1,1,""],Linear:[1258,1,1,""],MultiHeadAttention:[1259,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1249,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1250,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1251,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1252,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1253,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1254,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1255,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1256,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1257,3,1,""],get_initial_state:[1257,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1258,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1259,3,1,""]},"ivy.stateful.module":{Module:[1261,1,1,""]},"ivy.stateful.module.Module":{__init__:[1261,3,1,""],build:[1261,3,1,""],build_mode:[1261,3,1,""],built:[1261,3,1,""],check_submod_rets:[1261,3,1,""],compile_graph:[1261,3,1,""],compile_on_next_step:[1261,3,1,""],get_mod_key:[1261,3,1,""],mod_depth:[1261,3,1,""],mod_height:[1261,3,1,""],mod_with_top_mod_key_chain:[1261,3,1,""],save_weights:[1261,3,1,""],show_graph:[1261,3,1,""],show_mod_in_top_mod:[1261,3,1,""],show_structure:[1261,3,1,""],show_v_in_top_v:[1261,3,1,""],sub_mods:[1261,3,1,""],track_submod_call_order:[1261,3,1,""],track_submod_rets:[1261,3,1,""],v_with_top_v_key_chains:[1261,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1263,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1263,3,1,""]},"ivy.stateful.optimizers":{Adam:[1265,1,1,""],LAMB:[1266,1,1,""],LARS:[1267,1,1,""],Optimizer:[1268,1,1,""],SGD:[1269,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1265,3,1,""],set_state:[1265,3,1,""],state:[1265,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1266,3,1,""],set_state:[1266,3,1,""],state:[1266,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1267,3,1,""],set_state:[1267,3,1,""],state:[1267,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1268,3,1,""],compile_graph:[1268,3,1,""],compile_on_next_step:[1268,3,1,""],set_state:[1268,3,1,""],show_graph:[1268,3,1,""],step:[1268,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1269,3,1,""],set_state:[1269,3,1,""],state:[1269,3,1,""]},"ivy.stateful.sequential":{Sequential:[1271,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1271,3,1,""]},"ivy.verbosity":{cprint:[1276,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1275,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1264,1265,1266],"02886":1231,"100":[1119,1231,1273],"141592653589793":819,"2021":1231,"2102":1231,"360":[827,830,1099,1111,1113],"718281828459045":819,"754":[819,823,824,827,836],"999":[1066,1068,1069,1073,1264,1265,1266],"abstract":[893,908,1231,1264,1268],"boolean":[40,41,827,829,833,835,893,928,940,943,957,966,967,969,975,976,1011,1013,1014,1018,1019,1020,1052,1062,1066,1072,1096,1097,1098,1115,1116,1117,1119],"break":43,"case":[15,18,19,40,41,42,43,827,828,893,932,939,942,967,970,1037,1039,1040,1089,1092,1094,1119,1163,1166,1170,1231,1248,1259,1260,1261,1264,1268,1277],"catch":[967,992],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,387,426,427,823,825,893,895,896,897,898,899,900,902,903,905,906,907,908,920,921,943,967,971,1024,1066,1080,1119,1163,1165,1172,1213,1215,1216,1225,1229,1231,1234,1235,1236,1237,1238,1239,1241,1242,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1277],"default":[15,18,19,40,41,42,43,820,821,822,838,840,841,842,845,846,848,849,850,891,892,893,902,903,910,911,915,916,917,918,919,922,923,924,925,932,935,936,937,942,943,950,951,952,953,967,969,970,972,973,982,983,984,985,988,989,990,999,1002,1003,1004,1009,1011,1012,1021,1023,1024,1027,1029,1032,1035,1036,1039,1040,1043,1045,1047,1049,1050,1059,1061,1062,1066,1069,1071,1072,1073,1074,1075,1077,1081,1089,1092,1094,1115,1116,1117,1118,1119,1163,1164,1165,1167,1171,1172,1175,1176,1178,1179,1182,1184,1185,1186,1187,1188,1189,1190,1192,1193,1197,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1237,1238,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271],"final":[40,41,43,967,1002,1022,1023,1119,1248,1259,1274],"float":[40,41,42,43,819,820,821,822,823,824,827,828,836,838,840,852,871,877,893,902,903,926,932,935,939,942,943,951,958,967,970,982,983,985,1002,1003,1007,1008,1023,1041,1042,1043,1049,1050,1066,1068,1069,1071,1073,1074,1075,1082,1084,1088,1099,1107,1115,1116,1117,1118,1119,1175,1178,1179,1192,1194,1200,1208,1211,1212,1213,1214,1215,1216,1217,1218,1248,1256,1259,1262,1263,1264,1265,1266,1267,1268,1269],"function":[15,40,41,43,385,386,389,390,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,819,821,822,824,825,828,829,830,831,832,833,834,835,836,838,839,840,842,846,849,850,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,897,898,899,900,902,903,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1231,1234,1235,1236,1264,1267,1268,1269,1273,1274,1277],"import":[43,1231,1274,1277],"int":[40,41,42,43,384,385,386,478,820,821,822,823,824,825,838,840,841,842,845,846,848,849,850,852,871,877,891,892,893,915,916,917,918,919,922,923,924,925,930,931,937,943,952,954,959,967,972,973,978,984,985,989,990,993,994,995,998,999,1002,1003,1004,1009,1012,1021,1022,1023,1031,1032,1036,1037,1039,1040,1045,1046,1047,1048,1051,1053,1054,1059,1061,1064,1066,1068,1069,1073,1082,1086,1087,1089,1092,1115,1116,1117,1118,1119,1163,1172,1175,1176,1177,1179,1180,1182,1184,1185,1186,1187,1188,1189,1190,1192,1197,1200,1201,1202,1203,1204,1205,1206,1207,1211,1213,1215,1216,1217,1218,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1262,1263],"long":[1200,1210],"new":[40,41,43,478,820,821,822,827,831,943,947,967,968,978,993,994,995,998,1002,1003,1004,1005,1032,1037,1039,1040,1041,1042,1049,1050,1051,1066,1069,1071,1073,1074,1075,1082,1084,1086,1088,1099,1101,1105,1106,1112,1114,1119,1163,1173,1174,1175,1176,1217,1218,1231,1237,1238,1248,1258,1262,1263,1264,1265,1266,1267,1268,1269,1274,1277],"public":[967,986],"return":[15,16,17,18,19,40,41,42,43,478,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,845,846,848,849,850,852,871,877,891,892,893,902,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,928,929,931,932,936,937,938,939,940,942,943,947,948,949,950,951,952,953,954,955,956,957,958,959,966,967,968,969,970,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1009,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1036,1037,1038,1039,1040,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1077,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1163,1164,1165,1167,1171,1172,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1231,1237,1238,1248,1257,1258,1264,1268,1273,1274,1277],"short":[1200,1210,1231,1277],"static":[40,41,891,892],"super":1119,"true":[40,41,42,428,434,462,465,478,479,827,832,838,839,840,845,846,848,849,850,891,892,893,967,969,977,979,997,1002,1011,1013,1062,1063,1066,1069,1071,1072,1073,1074,1075,1077,1089,1092,1115,1116,1117,1118,1119,1163,1164,1171,1175,1176,1182,1184,1185,1186,1187,1188,1189,1190,1192,1193,1200,1208,1213,1214,1215,1216,1219,1220,1221,1225,1248,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269],"try":[40,41,967,1060,1119],"var":[40,41,1115,1116,1117,1277],"while":[40,41,42,1119],AND:[827,829,848,849,1096,1097],But:1277,For:[43,827,828,967,970,981,1051,1066,1072,1080,1089,1094,1099,1100,1231,1237,1238,1274,1277],Its:[1099,1103],NOT:[827,835],Not:819,One:[40,41,43,967,994,1037,1175,1177,1277],Ones:[1231,1239],PRs:43,Such:[967,986],That:1274,The:[15,16,17,18,19,40,41,42,43,827,828,829,830,832,834,836,838,839,840,841,842,845,846,848,849,850,852,871,877,891,892,893,902,903,909,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,932,935,936,937,938,939,942,943,947,948,949,954,955,956,957,966,967,970,974,975,978,979,982,983,984,985,987,988,991,992,996,999,1002,1004,1005,1012,1015,1016,1017,1019,1021,1023,1025,1027,1029,1032,1033,1036,1037,1039,1040,1041,1042,1043,1046,1047,1048,1049,1050,1051,1054,1062,1065,1066,1068,1069,1071,1073,1074,1075,1077,1080,1082,1084,1086,1088,1089,1092,1094,1099,1100,1102,1103,1107,1108,1109,1110,1111,1113,1115,1116,1117,1118,1119,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1178,1179,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1231,1237,1238,1248,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1274,1277],There:[43,1231,1274],These:[43,1231],Used:[1163,1164,1171,1260,1261],Using:[1231,1232,1277],With:[40,41,1089,1092,1182,1184,1185,1186,1187,1188,1189,1190,1231,1273,1277],__array__:[967,974],__call__:[1248,1259,1260,1261],__del__:1119,__dict__:[1119,1274],__enter__:1119,__exit__:1119,__getitem__:1119,__getstate__:1119,__init__:[40,41,42,43,59,60,81,208,387,388,426,427,507,632,893,894,901,902,903,904,905,906,907,908,943,944,945,946,1066,1067,1119,1123,1130,1225,1226,1229,1230,1231,1234,1235,1236,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1277],__iter__:1119,__len__:1119,__next__:1119,__pow__:43,__repr__:1119,_assign_vari:1273,_axi:1119,_base:[1163,1164,1171],_compute_node_da_ratio:1119,_compute_node_strs_da:1119,_concat_unify_arrai:1119,_counter:1119,_cur_framework:[43,1119],_da_direct:1119,_da_directions_flip:1119,_da_step_tim:1119,_da_tim:1119,_da_tune_count:1119,_data:1119,_delta_da_dim_s:1119,_delta_sf:1119,_dict:1119,_dim_siz:1119,_first_da_tune_step:1119,_first_ns_tune_step:1119,_fn:1119,_forward:[1231,1273],_get_kalman_param:1277,_get_prior:1277,_get_some_model:1277,_handle_flat_arrays_in_out:43,_index:[1163,1164,1171],_input_queu:1119,_length:1119,_max_depth:1119,_max_node_dim_step_ratio:1119,_max_node_dim_step_s:1119,_max_split_factor_step_s:1119,_mean_unify_arrai:1119,_min_bas:[967,1050,1217,1218,1262,1263],_min_denomin:[967,1049],_min_node_dim_s:1119,_min_sf_tune_step:1119,_min_unit_node_tune_step:1119,_model:1277,_native_wrapp:43,_node_mapp:1119,_node_percent_mem:1119,_node_str:1119,_node_str_da_ratio:1119,_node_strs_da:1119,_node_strs_kei:1119,_node_strs_n:1119,_node_util:1119,_ns_step_tim:1119,_ns_time:1119,_ns_tune_count:1119,_num_nod:1119,_num_work:1119,_observed_config:1119,_output_queu:1119,_paramet:1273,_percent_mem_inc_per_sf:1119,_percent_mem_inc_per_unit_da_dim:1119,_percent_util_inc_per_unit_da_dim:1119,_ret_fn:1119,_safety_factor:1119,_save_dir:1119,_shift_da_split:1119,_shift_n:1119,_slice:1119,_step:[1264,1268],_sum_unify_arrai:1119,_timeout:1119,_tune:1119,_tune_da:1119,_tune_n:1119,_tune_step:1119,_unit_da_tune_count:1119,_unroll_step:1277,_with_node_mappig:1119,_worker:1119,_worker_class:1119,_worker_fn:1119,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,893,902,908,1119,1260,1261,1264,1268],abil:1231,abl:[40,41],about:[823,824,825],abov:[43,1175,1177],above_height:[40,41],abs:[288,428,553,679,838,840,967,1119],absolut:[40,41,967,968],abstractmethod:1119,accept:[15,43,1231],access:[40,41,43,1274],accord:[40,41,823,824,967,985,1004,1039,1040,1059,1064],accordingli:[838,840,848,849,850],accur:[59,387,426,427,893,905,906,907,908,943,1066,1225,1229,1239,1241,1242,1244,1245,1247],aco:[767,1099],acosh:[767,1099],across:[40,41,893,902,903,912,913,915,916,917,918,919,925,935,936,967,972,973,975,976,1119,1163,1167],activ:[1193,1194,1195,1196,1197,1198,1199,1231,1235,1236],actual:1274,adam:[1066,1068,1069,1073,1231,1264,1266,1273],adam_step:1066,adam_upd:1066,adapt:[1066,1074,1264,1267],add:[40,41,43,1119,1213,1214,1215,1216,1217,1218,1231,1262,1263,1274],add_fn_to_dict:1225,add_param:1225,added:[43,967,1049,1050,1270,1271],adding:[967,978],addit:[40,41,43,967,993,994,995,1217,1218,1248,1258],adher:43,adjac:[967,970],adopt:[967,986],affect:[967,970],affin:[1262,1263],after:[827,836,967,1021,1066,1069,1070,1071,1073,1074,1075,1082,1083,1217,1218,1264,1265,1266,1267,1268,1269,1277],after_1:[967,985,1064],after_n:[967,985,1064],again:43,against:[40,41,1089,1092,1182,1184,1185,1186,1187,1188,1189,1190],agnost:[43,1231,1273,1274],aim:1277,algebra:1089,algorithm:[1200,1201,1202,1203,1204,1205,1206,1207,1248,1249,1250,1251,1252,1253,1254,1255,1277],align:[40,41,43,967,978],aliv:[893,927,929,933,967,1006,1030,1034],all:[15,16,17,18,19,40,41,43,106,230,413,532,657,838,840,841,842,848,891,892,893,902,927,933,967,968,969,975,976,986,999,1006,1012,1034,1048,1089,1094,1115,1116,1117,1118,1119,1163,1164,1165,1171,1172,1175,1176,1179,1182,1184,1185,1186,1187,1188,1189,1190,1200,1210,1231,1274,1277],all_depth:[40,41],all_equ:967,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1163,all_tru:[40,41],alloc:[893,1119],allow:[967,1022,1023,1024,1260,1261],allow_dupl:[967,1024],alon:[893,932,942,1119,1231],along:[40,41,43,478,838,840,841,842,845,846,848,849,850,893,916,917,918,919,922,923,924,925,937,967,984,989,990,999,1004,1021,1022,1023,1036,1047,1051,1054,1061,1089,1092,1115,1116,1117,1118,1119,1175,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190],alongsid:[1273,1274],alpha:[1192,1194],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,893,1119],also:[40,41,43,967,970,1066,1069,1115,1116,1117,1118,1163,1164,1165,1171,1172,1200,1209,1248,1258,1273],altern:1273,alwai:[40,41,43,1066,1072,1077],among:[40,41],amount:[893,939,1119,1231],angl:[1099,1100,1104],ani:[15,16,17,18,19,40,41,43,106,230,413,532,657,848,891,892,893,895,898,902,903,905,914,915,918,919,924,967,969,970,974,992,993,994,995,996,997,1011,1019,1024,1049,1050,1066,1070,1119,1163,1164,1167,1171,1172,1173,1174,1175,1179,1231,1237,1238,1260,1261,1273,1274,1277],anoth:[40,41,43,943,949,1231],another_backend:43,anyth:[43,1277],anywai:43,apart:43,api:[1231,1232],appear:[967,998],append:[40,41,1119],appli:[15,18,19,40,41,827,835,838,839,967,993,994,995,1066,1073,1074,1096,1097,1098,1115,1116,1117,1163,1167,1170,1172,1192,1193,1194,1195,1196,1197,1198,1199,1200,1209,1211,1212,1217,1218,1231,1234,1235,1236,1262,1263],applic:[1163,1167,1172,1200,1211,1212,1231,1277],approxim:[43,827,828,852,877,1192,1193],arang:[126,288,428,478,553,679,967,1022,1023],arbitrari:[40,41,893,922,923,925,1119],arc:[1099,1104],arcco:[1099,1100],arctan:[1099,1103],area:[827,828,1231],arg:[15,16,17,40,41,43,59,63,893,902,915,919,925,937,967,993,994,995,1040,1119,1219,1220,1221,1225,1237,1238,1260,1261],arg_nam:967,arg_stateful_idx:[1219,1220,1221,1225,1260,1261],argmax:[126,428,553,679,967],argmin:[126,428,553,679,967],args_clon:1119,args_dist:1119,args_to_ivi:[15,1231],args_to_n:[15,1231],args_uni:1119,argsort:[103,227,410,529,654,845],argument:[15,16,17,18,19,40,41,42,43,59,63,891,892,893,902,903,915,919,925,967,970,971,979,992,1024,1040,1099,1100,1119,1163,1167,1237,1238,1260,1261],aris:[1231,1277],arithmet:[43,1182,1185,1188,1190],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:478,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,126,288,428,478,553,679,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,845,846,848,849,850,871,877,893,911,912,913,916,917,918,919,922,923,924,925,927,929,933,937,938,943,947,953,958,959,967,968,969,970,972,973,975,976,977,978,980,981,982,983,984,985,987,988,989,990,993,994,995,996,998,999,1000,1001,1002,1003,1004,1005,1006,1009,1011,1012,1013,1014,1015,1016,1017,1019,1020,1021,1022,1023,1025,1026,1027,1028,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1045,1047,1048,1051,1052,1053,1054,1056,1057,1058,1059,1061,1062,1063,1064,1065,1066,1068,1069,1072,1073,1077,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1119,1163,1165,1172,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1231,1232,1248,1256,1257,1259,1264,1268,1273,1274],arrang:[967,993],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,384,385,386,387,389,390,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,845,846,848,849,850],array_api_methods_to_test:43,array_builtin:[43,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890],array_equ:[288,679,967],array_lik:[478,967,974],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,967],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1231],arraywithgener:[22,1231],arraywithgradi:[24,1231],arraywithimag:[26,1231],arraywithlinalg:[28,1231],arraywithlog:[30,1231],arraywithmath:[32,1231],arraywithmeta:[34,1231],arraywithrandom:[36,1231],arraywithreduct:[38,1231],arriv:[40,41,42],articl:1231,arxiv:1231,as_arrai:[40,41,967,1009,1045],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[426,428,437,893,911,943,950,951,952,953],as_tensor:428,as_vari:[40,41],as_zero:[40,41],asarrai:[428,967],asin:[767,1099],asinh:[85,392,511,636,827],aspect:[1082,1087],assert:[40,41,967,977,1119],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:967,associ:[43,1089,1095],assum:[1274,1277],astyp:[428,943],asynchron:[40,41,42],at_dev:[40,42,893,906,907],at_kei:[40,41],at_key_chain:[40,41],at_nod:1119,atan2:[767,1099],atan:[767,1099],atanh:[767,1099],attent:[43,1200,1211,1212,1248,1259],attribut:[0,6,40,41,823,824,825,967,1033,1065],audienc:[1231,1274],author:1231,avail:[40,41,43,893,928,930,931,940,967,994,1119],averag:[1066,1068,1069,1073,1115,1116,1117,1182,1185],average_across_step:[1115,1116,1117],avoid:[893,1119,1274],axes:[40,41,43,428,459,471,472,838,840,841,842,848,849,850,893,937,967,972,973,985,998,999,1053,1059,1064,1089,1092,1119,1182,1184,1185,1186,1187,1188,1189,1190],axes_length:[40,41,967,993,994,995],axi:[40,41,428,430,431,435,436,442,450,451,452,457,458,460,838,840,841,842,845,846,848,849,850,893,895,898,905,916,917,918,919,922,923,924,925,937,967,972,973,984,985,988,989,990,998,999,1004,1021,1022,1023,1036,1047,1048,1051,1053,1054,1061,1064,1119,1175,1181,1182,1184,1185,1186,1187,1188,1189,1190,1192,1197,1213,1215,1216],axis0:[40,41,967,1053],axis1:[40,41,967,1053],back:[43,1260,1261,1264,1268],backend:[15,17,19,40,41,384,385,386,387,389,390,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476,477,478,479,893,928,931,940,943,949,957,966,967,1014,1018,1066,1069,1071,1073,1074,1075,1080,1119,1231,1232,1237,1238,1264,1265,1266,1267,1268,1269,1273,1274,1277],backend_nam:43,background:[1231,1274],backprop:1277,backward:[848,849,850,1273],band:[967,1002],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,387,426,427,428,452,852,877,893,895,896,897,898,899,900,902,903,905,906,907,908,943,967,1007,1023,1041,1050,1066,1119,1182,1183,1225,1229,1231,1234,1235,1236,1239,1241,1242,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1277],batch:[40,41,838,839,840,893,935,936,967,999,1002,1012,1082,1086,1115,1116,1117,1118,1119,1200,1209,1217,1218,1262,1263],batch_shap:[428,444,967,999,1012,1031,1082,1083,1084,1085,1086,1087,1088,1089,1095,1175,1176,1200,1210,1211,1212,1248,1257],batch_siz:[478,479,1119,1175,1176,1200,1201,1202,1203,1204,1205,1206,1207],bayesian:1277,becaus:[43,967,970],becom:[967,981,1099,1104,1277],been:[967,993,994,995,1175,1176],befor:[40,41,43,893,937,1115,1116,1117,1119,1163,1172,1182,1184,1185,1186,1187,1188,1189,1190,1200,1211,1212,1277],before_1:[967,985,1064],before_n:[967,985,1064],begin:[1163,1164,1171,1274],behaviour:[43,1277],behind:[1066,1069,1071,1073,1074,1075,1231],being:[40,41,43,967,970,1035,1043,1119],belong:[40,41],below:[43,1231,1274,1277],below_depth:[40,41],benefit:1231,bernoul:[1200,1208,1248,1256],best:[43,967,1024,1231],beta1:[1066,1068,1069,1073,1264,1265,1266],beta2:[1066,1068,1069,1073,1264,1265,1266],beta:[1217,1218],between:[40,41,42,823,824,967,970,1089,1094,1163,1167,1175,1177,1213,1215,1216,1264,1266],bia:[1200,1209,1210,1248,1249,1250,1251,1252,1253,1254,1255,1258],bias_initi:[1248,1249,1250,1251,1252,1253,1254,1255,1258],bilinear:[1082,1083],bilinear_resampl:[162,343,467,596,753,1082],bilinearli:[1082,1083],binari:[827,829,1213,1214],binary_cross_entropi:1213,bit:[387,823,824,825,943,954,1082,1084,1088,1231],bitwis:[827,829],bitwise_and:[85,212,392,511,636,827],bitwise_oper:[0,7,8],block:[1231,1274],bool:[15,18,19,40,41,42,43,827,832,834,838,839,840,845,846,848,849,850,852,871,891,892,893,911,924,928,932,937,940,942,943,953,967,969,975,976,989,992,996,997,1002,1009,1011,1019,1024,1045,1047,1061,1062,1063,1066,1069,1070,1071,1072,1073,1074,1075,1077,1089,1092,1115,1116,1117,1118,1119,1163,1164,1165,1167,1171,1172,1175,1176,1182,1184,1185,1186,1187,1188,1189,1190,1192,1193,1200,1208,1237,1238,1248,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269],both:[43,967,988],bottom:1231,boundari:[40,41,1175,1179],branch:[43,891,892],brittl:43,broadcast:[40,41,43,827,829,838,840,848,849,850,852,871,877,967,978,996,1026,1027,1028,1036,1089,1092,1099,1104,1107,1182,1184,1185,1186,1187,1188,1189,1190],broadcast_to:[288,679,967],build:[1119,1231,1248,1259,1260,1261],build_mod:[1248,1259,1260,1261],builder:1231,built:[893,967,970,1119,1248,1259,1260,1261],builtin:43,builtin_ab:[243,852],builtin_add:[243,852],builtin_and:[243,852],builtin_bool:[243,852],builtin_contain:[243,852],builtin_deepcopi:[243,852],builtin_dir:[243,852],builtin_eq:[243,852],builtin_float:[243,852],builtin_floordiv:[243,852],builtin_g:[243,852],builtin_getattr:[243,852],builtin_getattribut:[243,852],builtin_getitem:[243,852],builtin_gt:[243,852],builtin_int:[243,852],builtin_invert:[243,852],builtin_l:[243,852],builtin_lt:[243,541,666,852],builtin_mul:[243,852],builtin_n:[243,852],builtin_neg:[243,852],builtin_or:[243,852],builtin_po:[243,852],builtin_pow:[43,243,852],builtin_radd:[243,852],builtin_rand:[243,852],builtin_rfloordiv:[243,852],builtin_rmul:[243,852],builtin_ror:[243,852],builtin_rpow:[243,852],builtin_rsub:[243,852],builtin_rtruediv:[243,852],builtin_rxor:[243,852],builtin_setitem:[243,852],builtin_some_op:43,builtin_sub:[243,852],builtin_truediv:[243,852],builtin_xor:[243,852],bypass:1274,cach:[893,909,967,979],cache_fn:967,calcul:[40,41,42,43,827,828,836,852,877,1099,1107],call:[43,893,937,967,1035,1043,1060,1066,1070,1119,1163,1164,1167,1171,1248,1259,1260,1261,1264,1268,1274,1277],callabl:[40,41,891,892,893,902,903,937,967,979,992,994,1024,1060,1115,1116,1117,1118,1119,1163,1167,1168,1169,1171,1172,1200,1211],can:[43,893,935,936,937,967,1037,1082,1084,1119,1231,1273,1274,1277],cancel_join_thread:1119,captur:1231,cast:[40,41,126,288,428,553,679,943,967,984,1082,1084,1088],catch_except:[967,992],categori:43,caus:43,ceil:[288,428,679,967,970],cell:[1200,1210,1248,1257],certain:[40,41,967,970,1022,1023],chain:[40,41,1115,1116,1117,1270,1271],chang:[43,893,967,1037,1119,1163,1165,1172,1231,1273],channel:[967,1002,1082,1084,1085,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258],check:[15,16,17,18,19,40,41,43,893,932,942,943,948,957,966,967,977,997,1011,1019,1052,1062,1066,1072,1119,1163,1164,1171,1231,1274],check_nest:[1163,1171],check_shap:[40,41],check_submod_ret:[1260,1261],check_typ:[40,41],choic:[1231,1274],choleski:[757,1089],choos:[967,1063,1089,1094,1099,1104,1231],choose_random_framework:59,chosen:[40,41,967,970,1063],chunk:[893,935,936,937,1119],chunk_siz:[893,937,1119],circl:[1099,1100,1102],clark:1231,clear:[893,909,1119],clear_framework_stack:59,clear_mem_on_dev:[426,671,893],click:1231,clip:[40,41,288,428,679,967,982,983,1026,1028,1231],clip_matrix_norm:967,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,967],clipped_delta:1119,clone:[40,41,893,912,913,914,915,1119],clone_arrai:1119,clone_it:1119,clone_nest:1119,clonedit:1119,cloneditem:1119,clonednest:1119,close:[43,1082,1087,1099,1102,1119,1277],closest:[943,948],closest_valid_dtyp:943,code:[40,41,42,43,478,1231,1232,1273,1274],codebas:[893,935,936,1119,1231,1274,1277],codomain:[827,828,836],collect:[15,40,41,426,428,462,467,471,475,476,478,852,891,893,943,967,1066,1082,1089,1096,1099,1119,1163,1175,1182,1192,1200,1213,1217,1234,1248,1262,1264],color:[40,41,42,1275,1276],column:[967,1012],combin:[40,41,42,1082,1087,1231,1277],combined_batch_s:1119,come:1274,command:1231,comment:43,commit:1277,common:[40,41,43,1099,1104],common_key_chain:[40,41],commun:[43,1231,1274],compar:[40,41,967,969,975,976],comparison_oper:[0,9,10],compat:[43,827,829,838,840,848,849,850,852,871,877,967,996,1037,1099,1107,1231,1277],compil:[288,428,679,1220,1221,1225,1231,1260,1261,1264,1265,1266,1267,1268,1269],compile_graph:[1219,1231,1260,1261,1264,1268],compile_on_next_step:[1260,1261,1264,1265,1266,1267,1268,1269],complet:[40,41,1089,1094,1119],complex:[1274,1277],compon:[967,988],composit:43,comput:[40,41,827,829,830,834,835,838,840,852,871,893,937,967,982,983,989,990,996,1025,1066,1068,1069,1070,1071,1073,1074,1075,1077,1079,1082,1085,1089,1090,1091,1092,1093,1094,1096,1097,1098,1099,1100,1102,1103,1104,1108,1109,1110,1111,1113,1163,1167,1182,1183,1184,1185,1186,1187,1188,1189,1190,1200,1201,1202,1203,1204,1205,1206,1207,1209,1211,1213,1214,1215,1216],concat:[40,41,893,922,923,924,925,937,967,1002,1119],concaten:[40,41,126,288,428,553,679,967,1002,1119,1231],concatten:[40,41,893,922,923,924,925,937,1119],condit:[428,891,892,967,1063,1163,1171],conditon:[1163,1171],config:[40,41,1119],config_list:1119,configur:[40,41],conflict:43,conform:43,conjunct:1274,connect:[1225,1248,1258,1259],consid:[40,41,1089,1094,1273,1277],consist:[40,41,893,925,1119,1182,1183,1260,1261,1274],constant:[893,902,903,967,985,1119,1163,1167,1213,1214,1215,1216,1217,1218,1239,1240,1244,1247,1260,1261,1262,1263,1274],constant_kwarg:1119,constant_pad:[288,428,553,679,967],constitu:[40,41],construct:[967,1054,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273],constructor:[40,41,42,967,971,1270,1271],consum:[893,1119],cont_feat_dim:[1200,1211],contaienr:[40,41],contain:[15,18,19,42,43,820,821,822,827,828,829,832,834,836,838,840,845,846,848,849,850,852,871,877,893,912,916,937,943,947,967,968,972,973,981,982,983,986,996,1011,1026,1028,1038,1049,1050,1066,1068,1069,1071,1073,1074,1075,1099,1107,1115,1116,1117,1118,1119,1175,1176,1182,1184,1185,1186,1188,1190,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[428,679,967],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[428,967,1029,1200,1211,1248,1259],context_dim:[1248,1259],contextmanag:[59,60],continu:[43,1119,1274],contract:[40,41,1182,1183],contribut:[1231,1232],contributor:[43,1231],control:1231,conv1d:[193,373,492,809,1200,1231,1248],conv1d_transpos:[193,373,492,809,1200],conv1dtranspos:[1231,1248],conv2d:[193,373,492,621,809,1200,1231,1248],conv2d_transpos:[193,373,492,809,1200],conv2dtranspos:[1231,1248],conv3d:[193,373,492,621,809,1200,1231,1248],conv3d_transpos:[193,373,492,809,1200],conv3dtranspos:[1231,1248],convent:[40,41,1182,1183],conver:[893,909,920,932,939,942,1119],convers:[16,17,18,19,40,41,1119,1231],convert:[15,16,17,18,19,40,41,43,893,920,921,943,949,955,956,967,1046,1057,1058,1082,1084,1088,1089,1095,1119,1163,1165,1172,1231,1238],convert_dtyp:943,convolut:[1200,1201,1202,1203,1204,1205,1206,1207,1248,1249,1250,1251,1252,1253,1254,1255],cool:43,cooler:43,coordin:[967,1027,1099,1100,1102,1104],copi:[40,41,478,967,987,1119,1163,1165],copy_arrai:[428,679,967],copy_nest:1163,core:[426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476,477,478,479,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,897,898,899,900,902,903,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1231],corner:43,correct:[43,1231,1274],correctli:[40,41,1089,1092,1099,1104,1182,1184,1185,1186,1187,1188,1189,1190],correspond:[40,41,43,852,877,967,984,1175,1176],cos:[85,392,511,636,827,967,1002,1099,1100,1113,1274],cosh:[85,392,511,636,767,827,1099],cosin:[827,830,831,1099,1100,1101,1106],cost:[1066,1068,1069,1071,1073,1074,1075,1115,1116,1117,1118],cost_fn:[1115,1118],could:1277,count:[40,41,841,842,848,849,850,1119,1182,1187,1189,1229],cprint:1275,cpu:[40,41,43,893,930,932,938,939,942,967,970,974,1004,1005,1012,1022,1023,1031,1032,1033,1039,1040,1065,1119,1175,1176,1177,1178,1179,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1270,1271,1273,1274],creat:[40,41,820,821,822,893,902,903,967,970,974,1003,1004,1005,1012,1022,1023,1031,1032,1033,1039,1040,1056,1065,1066,1079,1119,1175,1176,1177,1178,1179,1231,1232,1237,1238,1239,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1277],create_if_abs:[40,41],create_vari:1239,creation:[40,41,42,43],creation_funct:[384,385,386,820,821,822],crop:[1082,1086],crop_siz:[1082,1086],cross:[288,679,967,1213,1214,1215,1216],cross_entropi:1213,cuda:[40,41,893,902,921,938,967,970,974,1004,1005,1012,1022,1023,1031,1032,1033,1039,1040,1065,1119,1175,1176,1177,1178,1179,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1270,1271],cumprod:[126,288,428,679,967],cumsum:[679,967],cumul:[967,989,990],current:[40,41,42,43,893,902,926,927,929,933,943,949,957,966,967,991,1006,1014,1018,1030,1034,1119,1163,1164,1171,1231,1277],current_framework:59,current_framework_str:[428,679,967,1119],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1225,d_in:[1200,1201,1202,1203,1204,1205,1206],d_out:[1200,1201,1202,1203,1204,1205,1206],da_can_termin:1119,da_dim_s:[893,1119],da_direct:1119,da_tune_step:[893,1119],dai:1277,daniel:1231,data:[40,41,42,43,820,821,822,824,825,827,828,829,832,834,836,838,840,841,842,848,849,850,852,871,877,893,895,896,897,898,899,900,905,906,907,921,943,947,948,949,953,954,955,956,957,958,959,966,967,970,974,996,1003,1012,1019,1032,1033,1037,1048,1052,1065,1066,1072,1080,1099,1107,1119,1200,1209,1231],data_format:[1200,1201,1202,1203,1204,1205,1206,1207,1248,1249,1250,1251,1252,1253,1254,1255],data_type_funct:[387,389,390,823,824,825],dataset:[40,41],datatyp:[40,41,943,948,958,959],dcdw:[1066,1068,1069,1071,1073,1074],debug_info:1225,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1066,1073,1074,1264,1266,1267],decay_lambda:[1066,1073,1074,1264,1266,1267],decid:[40,41,1277],decompos:[1089,1090,1094],decomposit:[838,839,1089,1090,1094],decor:43,decrement:[967,1015],dedic:[1066,1080,1237,1238],deep:[40,41,1231],deep_copi:[40,41],deeper:[893,915,919,925,1119,1163,1172,1231],deepli:[1163,1165],def:[43,60,81,208,388,507,632,894,901,904,944,945,946,1067,1119,1123,1130,1226,1230,1231,1240,1243,1246,1273,1274,1277],default_dev:43,default_devic:893,default_dtyp:[43,943],default_float_dtyp:943,default_int_dtyp:943,default_key_color:[40,41,42],default_nod:1119,default_rng:478,default_v:[967,992],defaultdevic:[893,894],defaultdtyp:[943,944],defaultfloatdtyp:[943,945],defaultintdtyp:[943,946],defer:43,defin:[43,967,988,1031,1033,1065,1175,1177],degre:[827,830,1099,1111,1113],del:1119,delta:[1066,1068,1119,1225],delta_dim_s:1119,delta_percent_mem:1119,delta_sf:1119,delta_util:1119,demo:1231,denomin:[967,1001,1008,1042,1049,1050,1217,1218,1262,1263],dens:[1248,1258],depend:[43,827,828,838,839,852,877,967,1063,1231],depth:[40,41,428,453,893,915,919,925,967,1010,1031,1119,1163,1172,1225,1229,1260,1261],depth_cutoff:[40,41],depthwis:[1200,1207,1248,1255],depthwise_conv2d:[193,373,492,621,809,1200],depthwiseconv2d:[1231,1248],deriv:[1066,1068,1069,1071,1073,1074,1075,1163,1165,1172,1231,1260,1264,1268,1270],descend:[838,839,845,846],descent:[1066,1071,1264,1269],describ:[40,41,1182,1183],descript:[838,840],design:[1231,1232],desir:[40,41,893,938,943,947,967,970,974,1012,1013,1032,1033,1065,1082,1087,1119,1182,1184,1185,1186,1188,1190],desired_aspect_ratio:[467,470,1082,1087],desired_percent_increas:1119,detail:1277,detect:[40,41,1163,1164,1171],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,827,828,829,832,836,838,840,848,849,850,852,877,893,928,930,931,940,943,947,948,954,957,958,959,966,967,969,970,974,975,976,1011,1014,1018,1019,1052,1062,1066,1072,1099,1107,1115,1116,1117,1118,1119,1200,1211],dev:[40,41,42,43,119,282,426,428,429,432,442,443,444,451,452,453,454,455,456,461,478,479,546,671,893,896,897,899,900,902,903,906,907,909,910,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,929,932,933,934,935,936,937,938,939,942,967,970,974,1004,1005,1012,1022,1023,1031,1032,1033,1039,1040,1065,1066,1081,1175,1176,1177,1178,1179,1237,1238,1239,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1270,1271],dev_clon:[40,41,893],dev_clone_arrai:893,dev_clone_it:893,dev_clone_nest:893,dev_dist:[40,41,893],dev_dist_arrai:893,dev_dist_it:893,dev_dist_nest:893,dev_from_str:[43,119,282,426,546,671,893],dev_mapp:893,dev_str:[40,41],dev_to_str:[119,282,426,546,671,893],dev_unifi:893,dev_unify_arrai:893,dev_unify_it:893,dev_unify_nest:893,dev_util:893,devclonedit:893,devcloneditem:893,devclonednest:893,devdistit:893,devdistitem:893,devdistnest:893,develop:[43,1231,1274,1277],deviat:[40,41,1175,1178,1182,1188,1217,1218,1262,1263],devic:[21,40,41,43,384,385,386,427,428,441,820,821,822,895,896,897,898,899,900,902,903,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,967,970,974,1003,1004,1005,1012,1022,1023,1031,1032,1033,1039,1040,1065,1066,1081,1175,1176,1177,1178,1179,1231,1237,1238,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1270,1271],devmanag:[893,901],devmapp:[893,903],devmappermultiproc:893,diag:[838,839],diagon:[967,1012],dict:[15,16,17,18,19,40,41,42,893,895,898,902,903,905,915,916,917,918,919,967,993,994,995,1024,1115,1116,1117,1119,1163,1165,1166,1167,1170,1172,1237,1238],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,823,824,893,912,913,916,917,1089,1094,1119,1200,1209,1231,1274,1277],differenti:[1231,1274],dilat:[1200,1201,1202,1203,1204,1205,1206,1207,1248,1249,1250,1251,1252,1253,1254,1255],dim:[40,41,43,838,839,967,1031,1082,1083,1087,1119,1248,1259],dim_siz:[40,41,893,1119],dimens:[40,41,42,838,839,840,841,842,848,849,850,893,924,967,978,984,988,993,994,995,998,1002,1009,1021,1031,1036,1037,1047,1048,1051,1059,1061,1082,1086,1089,1092,1115,1116,1117,1118,1119,1175,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1197,1200,1201,1202,1203,1204,1205,1206,1207,1210,1213,1215,1216,1248,1249,1250,1251,1252,1253,1254,1255,1258,1259],dimension:[40,41,478,838,839,840,848,849,850,967,1047,1048],direct:1119,directli:[43,1163,1172,1274,1277],directori:[967,1044,1055],discret:[1213,1215],disk:[40,41,1082,1084],distanc:[967,970],distribut:[40,41,893,912,916,917,918,919,1119,1175,1176,1177,1178,1179,1200,1208,1248,1256,1260,1261],distribute_nest:1119,distributedarrai:[40,41],distrubt:[1213,1215],dive:[1231,1274],divid:[40,41,967,1047,1049,1099],dividend:[1099,1107],divis:[967,1001,1008,1042,1049,1050,1066,1068,1069,1073,1099,1107,1264,1265,1266],divisor:[1066,1068,1069,1073,1099,1107,1264,1265,1266],doc:1231,docstr:43,doe:[40,41,43,967,970,1047,1273],doesn:[1089,1094,1231],doing:43,domain:[827,828,836,1099,1100],don:1231,done:43,door:1277,dot:[1089,1091,1200,1211,1212,1248,1259],down:1273,downscal:[967,982,983],drag:[1231,1277],draw:[1175,1176,1178,1179],drawn:[1175,1176,1177,1178,1179],drop:[1231,1277],dropout:[1200,1231,1248,1259],dropout_r:[1248,1259],ds_tune_step:893,dtype:[40,41,43,126,288,384,385,386,387,389,390,428,429,432,433,441,444,454,461,553,679,820,821,822,823,824,825,947,948,949,950,951,952,954,955,956,957,958,959,960,961,962,963,964,965,966,967,970,974,1003,1012,1031,1032,1033,1065],dtype_bit:[126,288,428,553,679,943],dtype_from_str:[43,126,288,428,553,679,943],dtype_in:[428,438,439,440,943,949,954,955,956,957,958,959,966],dtype_to_str:[126,288,428,553,679,943],duplic:[40,41],dure:[40,41,43,891,892,967,1060,1066,1068,1069,1073,1115,1116,1117,1118,1260,1261,1264,1265,1266,1268],dynam:[428,434,891,892],each:[40,41,42,43,827,828,829,832,834,836,838,839,845,846,852,871,877,893,902,903,912,913,914,915,916,917,918,924,936,937,967,968,969,985,996,1036,1047,1051,1054,1064,1066,1069,1071,1073,1074,1075,1082,1085,1099,1102,1107,1109,1110,1119,1163,1167,1175,1176,1182,1183,1200,1201,1202,1203,1204,1205,1206,1207,1208,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1259,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1274],eager:1274,easi:1277,easili:1231,econom:1277,ecosystem:1231,edg:[967,981,985,1064],effect:[1066,1075],effective_grad:[1066,1075],effici:1277,einop:[40,41,967,993,994,995],einops_rearrang:[40,41,967],einops_reduc:[40,41,967],einops_repeat:[40,41,967],einstein:[40,41,1182,1183],einsum:[40,41,179,361,480,611,789,1182],either:[40,41,43,967,992,1024,1027,1029,1115,1116,1117,1118,1119,1248,1259,1260,1261,1274],eleg:1119,element:[40,41,43,478,827,828,829,830,831,832,834,835,836,841,842,845,846,848,849,850,852,871,877,893,914,918,924,943,947,967,968,970,972,973,975,976,980,981,982,983,989,990,996,999,1000,1001,1012,1013,1026,1028,1036,1038,1047,1058,1063,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1119,1182,1183,1185,1187,1189,1192,1193,1194,1195,1196,1197,1198,1199,1200,1208,1248,1256],elementwis:[40,41],elementwise_affin:[1262,1263],elementwise_funct:[827,828,829,830,831,832,833,834,835,836],elemtn:[1175,1176],elif:1119,els:[967,977,992,997,1119],elsewher:[967,1063],emphas:1231,empti:[40,41,1089,1094,1119],enabl:[40,41,42,43,1231],encapsul:[823,825],encod:[967,1002,1082,1084],end:[967,970,1231,1274],ensur:43,entir:[40,41,848,849,850,893,937,1119,1231,1248,1257],entri:[40,41,967,999,1022,1023,1047,1048],entropi:[1213,1214,1215,1216],enumer:1119,environ:1231,eps:[387,823,824],epsilon:[1066,1068,1069,1073,1213,1214,1215,1216,1217,1218,1262,1263,1264,1265,1266],equal:[40,41,428,553,679,827,830,832,967,969,975,976,985,1047,1064,1099,1111,1113,1175,1179],equality_matrix:[967,969],equat:[40,41,1182,1183],equival:[838,840,967,970,1099,1113],erf:[476,767,1099],error:[40,41,43,893,967,1048,1099,1108,1119,1192,1193,1260,1261,1264,1268],essenti:43,etc:[40,41,43,893,938,967,970,974,1004,1005,1012,1022,1023,1031,1032,1033,1039,1040,1065,1119,1175,1176,1177,1178,1179,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1270,1271,1277],euclidean:[838,840],euler:819,evalu:[40,41,848,849,850,967,1027,1163,1164,1171],even:[43,1277],evenli:[40,41,967,970,1022,1023,1047],everi:[967,969,1277],exact:[40,41],exampl:[43,891,892,967,981,1051,1089,1094,1231,1273,1274,1277],example_input:[428,434,891,892],exc_tb:1119,exc_typ:1119,exc_val:1119,exce:[967,1028],except:[40,41,44,47,848,849,850,967,970,977,984,992,1060,1119],excess_s:1119,excit:[1231,1274],exclud:[59,61,967,970,1175,1179],exclus:[40,41,428,436,449,462,464,967,989,1019,1066,1072,1175,1177],execut:[43,967,1060,1274],execute_with_gradi:[159,338,462,591,747,1066,1231,1273],exist:[40,41,967,992,1119,1231,1264,1268,1277],exp:[767,1099],expand:[40,41,967,998,1002],expand_dim:[40,41,288,679,967,1119],expect:[967,971],explain:[43,1274],explicitli:[43,1248,1257,1259,1260,1261,1274],expon:[43,852,877,967,1050],exponenti:[43,852,877,1099,1108,1109],expos:[967,974,986],express:[967,1027],exsit:[40,41],extend:43,extra:[40,41,42,1066,1070],eye:[1089,1091],fabian:1231,fabio:1231,factor:[838,839,893,902,935,936,937,1066,1068,1069,1073,1074,1119,1200,1201,1202,1203,1204,1205,1206,1207,1248,1249,1250,1251,1252,1253,1254,1255,1264,1265,1266,1267],fail:43,falck:1231,fall:[1260,1261,1264,1268],fallback_to_non_compil:[1260,1261,1264,1268],fals:[15,18,19,40,41,42,59,66,67,68,69,70,426,428,436,437,449,457,460,462,463,464,471,472,827,832,838,840,845,846,848,849,850,893,911,924,932,937,942,943,950,951,952,953,967,969,989,992,997,1002,1009,1019,1024,1045,1047,1061,1063,1066,1069,1070,1071,1072,1073,1074,1075,1089,1092,1115,1116,1117,1118,1119,1163,1164,1165,1167,1171,1172,1182,1184,1185,1186,1187,1188,1189,1190,1219,1220,1221,1225,1229,1237,1238,1260,1261,1264,1265,1266,1267,1268,1269],fan_in:1239,fan_mod:1239,fan_out:1239,far:[1163,1164,1171,1273],faster:[891,892],favourit:[1231,1273],feasibl:1277,feat_dim:[1200,1211,1212],fed:[893,937,1119],feed:[893,937,1119],few:43,field:1277,file:[40,41,43,967,1044,1055,1260,1261],filepath:[40,41],fill:[40,41,820,821,822,967,1003,1032,1175,1177],fill_valu:[428,441,967,1003],filter:[1200,1201,1202,1203,1204,1205,1206,1207,1248,1249,1250,1251,1252,1253,1254,1255,1277],filter_s:[1248,1249,1250],filter_shap:[1248,1251,1252,1253,1254,1255],find:[40,41,1277],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,207,208,387,388,506,507,631,632,823],finish:[1231,1277],finit:[827,832],first:[40,41,43,478,827,829,838,839,891,892,893,924,967,975,984,988,996,1022,1023,1051,1053,1066,1070,1115,1116,1117,1118,1119,1163,1164,1171,1175,1181,1182,1187,1189,1248,1259,1260,1261,1264,1268,1274,1277],firstlayersiren:[1231,1239],firstli:[1274,1277],fist:[893,937,1119],fit:[40,41,426,428,462,467,471,475,476,478,967,1036,1082,1087],fix:43,fkt:1277,flag:[40,41,43,1066,1072],flat:[40,41,43,967,1036,1039],flat_list:[40,41],flatten:[40,41,838,840,967,1002,1036,1182,1184,1185,1186,1188,1190],flatten_key_chain:[40,41,1260,1261],flexibl:[1231,1274],flip:[40,41,99,223,406,525,650,841,967],float32:[43,428,444,943,947,955,956,967,970,974,1012,1032,1033,1065],float_dtyp:[943,951,961],float_img_to_uint8_img:1082,floor:[288,428,679,967,1001,1119],floormod:[288,428,679,967],fluid:1277,fname:[1219,1221,1225,1260,1261],folder:[43,1231],follow:[40,41,43,823,825,838,840,893,937,967,1015,1016,1017,1049,1050,1066,1069,1071,1073,1074,1075,1119,1163,1167,1172,1200,1211,1212,1231,1248,1258,1264,1268],followng:[823,824],fomaml_step:1115,forget:[1066,1068,1069,1073,1264,1265,1266],fork:[967,1029,1231,1232],forkserv:[967,1029,1119],form:[15,16,17,18,19,40,41,967,974,1066,1069,1071,1073,1074,1075,1163,1165,1172,1200],format:[40,41,43,893,911,943,947,949,953,967,970,974,1012,1032,1033,1065,1119,1182,1183,1231,1273,1274],format_fn:[40,41],format_key_chain:[40,41],forward:[1260,1261,1264,1268,1273],found:[40,41,42],fourier:[967,1002],fourier_encod:967,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,97,98,100,104,107,108,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,163,164,165,167,168,169,173,174,175,176,177,178,180,181,182,183,184,185,186,189,191,192,194,195,196,197,198,199,200,205,206,208,209,210,213,214,215,216,217,218,221,222,224,228,231,232,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,341,342,344,345,346,348,349,350,351,353,354,357,358,359,360,362,363,364,365,366,367,368,369,372,374,375,376,377,378,379,380,385,386,388,389,390,393,394,395,396,397,398,399,400,401,404,405,407,411,414,415,427,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,463,464,465,466,468,469,470,472,473,474,477,479,481,482,483,484,485,486,487,490,491,493,494,495,496,497,498,499,504,505,507,508,509,512,513,514,515,516,517,518,519,520,523,524,526,530,533,534,542,547,548,549,550,551,552,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,592,593,594,595,597,598,599,601,602,603,607,608,609,610,612,613,614,615,616,617,618,622,623,624,629,630,632,633,634,637,638,639,640,641,642,643,644,645,648,649,651,655,658,659,667,672,673,674,675,676,677,678,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,748,749,750,751,752,754,755,756,758,759,760,761,762,763,765,766,768,769,770,771,772,773,774,775,776,777,778,779,780,781,783,784,785,786,787,788,790,791,792,793,794,795,796,799,800,801,802,803,804,805,807,808,810,811,812,813,814,815,816,821,822,824,825,827,828,829,830,831,832,833,834,835,836,839,840,842,846,849,850,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1097,1098,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1218,1220,1221,1223,1224,1226,1230,1231,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1276,1277],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1119,framewrk:[967,1029],freeli:43,frequenc:[967,1002],from:[40,41,42,43,827,834,836,841,842,848,849,850,893,902,903,937,943,949,967,992,999,1004,1005,1012,1037,1048,1056,1063,1066,1069,1073,1082,1086,1089,1094,1115,1116,1117,1118,1119,1163,1165,1172,1175,1176,1177,1178,1179,1182,1187,1189,1200,1208,1211,1231,1237,1238,1248,1256,1259,1264,1268,1273,1274],from_cal:[1260,1261],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[126,288,428,553,679,823,824,967,1089,1094,1231],full_matric:[838,839],fulli:[43,1231,1248,1258,1259,1273],func:[40,41,428,434,462,463,891,892,893,937,967,979,1066,1070,1119],further:[43,1277],furthermor:1277,futur:1277,gain:1239,gamma:[1217,1218],gather:[40,41,126,288,428,553,679,967,1005],gather_nd:[40,41,126,288,428,553,679,967],gauss:[1099,1108],gaussian:[1192,1193],geglu:[1231,1234],gelu:[371,489,798,1192,1231,1234],gener:[23,40,41,43,426,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,478,891,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1072,1175,1177,1179,1180,1231,1264,1268],geometr:[967,1002],get:[40,41,43,823,824,825,893,902,903,911,926,927,932,936,939,942,943,953,954,967,971,1006,1007,1008,1035,1119,1229,1231,1248,1257,1277],get_all_arrays_in_memori:967,get_all_arrays_on_dev:893,get_framework:59,get_initial_st:[1248,1257],get_min_bas:967,get_min_denomin:967,get_mod_kei:[1260,1261],get_num_dim:[428,679,967],get_param:1225,get_param_recurs:1225,get_referrers_recurs:967,getfullargspec:1119,gist:1231,give:[43,845,846,967,1037,1274],given:[40,41,43,820,821,822,841,842,845,846,893,926,932,935,936,937,939,942,943,947,967,970,974,981,989,990,999,1005,1022,1023,1032,1033,1036,1039,1040,1047,1054,1059,1061,1065,1066,1068,1069,1071,1073,1074,1075,1089,1091,1095,1099,1100,1119,1163,1168,1169,1175,1178,1179,1181,1182,1185,1187,1188,1189,1190,1200,1201,1202,1203,1204,1205,1206,1207,1237,1238,1277],global:[40,41,42,893,902,903,910,935,936,937,943,950,951,952,967,991,1007,1008,1035,1041,1042,1043,1049,1050,1066,1081,1119,1217,1218,1223,1224,1231,1262,1263],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1231,1239,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258],got:[43,1231],gpu0:43,gpu2:43,gpu:[893,928,931,1119],gpu_is_avail:[426,893,1119],grad:[1231,1264,1268,1273],gradient:[25,40,41,463,464,465,466,893,937,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1085,1115,1116,1117,1118,1231,1264,1265,1266,1267,1268,1269,1273,1277],gradient_descent_upd:[1066,1115,1116,1117,1118],gradient_imag:[162,343,467,596,753,1082],gradienttrack:[1066,1067],graph:[1066,1069,1071,1073,1074,1075,1219,1220,1221,1226,1231,1260,1261],graph_compil:[1219,1220,1221,1222,1223,1224,1225,1229],greater:[40,41,967,970,1000,1048,1175,1179],green:[40,41,42,1275,1276],grid:[967,1027],group:[1082,1087],guid:[1231,1232,1277],gym:1231,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1277,half:[967,970,1119,1175,1179],hand:1231,handl:[40,41,42,43,891,892,893,909,911,920,921,932,939,942,1066,1069,1071,1073,1074,1075,1119,1264,1265,1266,1267,1268,1269],has:[40,41,43,967,1051,1089,1094,1099,1103],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,967],hasattr:1119,have:[40,41,43,823,824,827,828,829,832,834,836,838,839,840,841,842,848,849,850,852,871,877,967,984,988,993,994,995,996,1003,1051,1066,1072,1080,1099,1107,1119,1231,1273,1274],haven:43,hdf5:[40,41,1260,1261],head:[1200,1211,1248,1259],head_dim:[1248,1259],height:[1082,1087],height_cutoff:[40,41],help:[59,387,426,427,893,905,906,907,908,943,1066,1225,1229,1231,1239,1241,1242,1244,1245,1247],helper:1231,here:[43,1231],hidden:[1200,1210,1248,1257],hierarch:[967,986],hierarchi:[40,41],high:[40,41,478,1175,1177,1179],higher:[838,839,1066,1069,1071,1073,1074,1075],highest:[1175,1177],highest_util:1119,highest_util_nod:1119,highli:1231,highlight:1277,highlight_subgraph:[1219,1221,1225],hint:43,hkt:1277,hold:[943,947,967,970,974,1039,1040],host:1231,hot:[967,1031],how:[1231,1248,1259,1260,1261,1274,1277],howev:[43,1274],http:1277,hyperbol:[827,828,831,1099,1101,1105,1106,1112,1114,1192,1199],hypothet:1277,icon:1231,idea:1231,ident:[40,41,43,126,288,428,553,679,967],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[819,823,824,827,836],if_exist:[40,41],ignor:[40,41,1264,1268],ignore_key_error:[40,41],ignore_miss:[1264,1268],ignore_non:[40,41],iinfo:[80,207,387,506,631,823],imag:[27,468,469,470,967,1021,1083,1084,1085,1086,1087,1088,1200,1201,1202,1203,1204,1206,1207,1231,1277],image_dim:[1082,1086],imkkhk:1277,immedi:[1231,1274,1277],implement:[43,827,828,852,877,1231,1274,1277],in_featur:[1200,1209],inadvert:43,includ:[40,41,43,838,840,848,849,850,967,970,1011,1049,1050,1062,1163,1164,1175,1179,1248,1258,1259,1262,1263,1273],include_deriv:[1163,1165,1172],include_empti:[40,41],include_gener:[1219,1220,1221,1225,1260,1261],include_inf:[40,41,967,1011,1062],include_nest:[1163,1164],include_self:[40,41],inclus:[1175,1177],incom:[1200,1209],increas:[893,915,919,925,967,985,998,1064,1119,1163,1172],increasingli:1277,increment:[967,1016,1119],increment_param_count:1225,inde:1231,indent:[40,41,42],independ:[1175,1176],index:[40,41,428,478,967,972,973,1004,1005,1027,1048,1051,1163,1166,1168,1169,1170,1173],index_nest:1163,indic:[40,41,428,442,443,453,455,456,838,840,845,846,967,972,973,1004,1005,1013,1031,1039,1040,1163,1164,1166,1168,1169,1170,1171,1173,1174,1175,1176,1192,1197,1200,1201,1202,1203,1204,1205,1206,1207,1217,1218,1248,1249,1250,1251,1252,1253,1254,1255,1260,1261],indices_wher:[126,288,428,679,967],indistinguish:[827,836],inevit:1277,inf:[40,41,838,840,967,1011,1020,1062,1099,1103],infer:[827,834,891,892,967,999,1009,1012,1037,1045,1082,1086,1089,1094,1274,1277],infin:[827,828,832,836,838,840,967,1020],infinit:[827,836],inform:[823,824,825,1066,1077],init_c:[1200,1210],init_h:[1200,1210],init_on_first_step:[1264,1268],initi:[40,41,42,59,387,426,427,893,905,906,907,908,943,1066,1119,1200,1210,1225,1229,1231,1241,1242,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1264,1268],initialz:[1260,1261],inner:[1115,1116,1117,1118],inner_batch_fn:[1115,1116,1117],inner_batch_shap:[1200,1209],inner_cost_fn:[1115,1116,1117],inner_grad_step:[1115,1116,1117,1118],inner_learning_r:[1115,1116,1117,1118],inner_optimization_step:[1115,1116,1117,1118],inner_v:[1115,1116,1117],inp:1119,inplac:[40,41,967,977,1014,1018,1052,1066,1069,1071,1073,1074,1075,1237,1238,1264,1265,1266,1267,1268,1269],inplace_arrays_support:[428,967],inplace_decr:[126,288,428,553,679,967],inplace_incr:[126,288,428,553,679,967],inplace_oper:[0,11,12],inplace_upd:[40,41,126,288,428,553,679,967,1237,1238],inplace_variables_support:[428,967],input:[15,18,19,40,41,42,43,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,845,846,848,849,850,891,892,893,902,903,910,911,912,915,916,919,925,937,938,943,947,948,950,951,952,953,954,958,959,967,968,969,972,973,975,976,977,978,980,981,982,983,984,985,987,989,990,992,993,994,995,996,997,998,999,1000,1001,1002,1009,1011,1012,1013,1015,1016,1017,1019,1020,1021,1025,1026,1027,1028,1036,1038,1045,1046,1048,1051,1052,1053,1054,1056,1057,1058,1059,1061,1062,1064,1066,1070,1072,1077,1081,1082,1083,1084,1085,1086,1088,1089,1092,1094,1096,1097,1098,1099,1101,1103,1105,1106,1107,1111,1112,1113,1114,1115,1116,1117,1118,1119,1175,1176,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1217,1218,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1262,1263,1274],input_ax:[893,937,1119],input_channel:[1248,1249,1250,1251,1252,1253,1254,1257,1258],input_queu:1119,inputs_split:1119,insert:[967,998],insid:43,inspect:1119,inspir:1277,instal:1231,instanc:[15,16,17,18,19,40,41,43,478,852,871,877,893,902,1119,1237,1238,1270,1271],instead:[40,41,478,1182,1184,1185,1186,1187,1188,1189,1190,1277],int32:43,int64:[943,947,967,970,974,1012,1032,1033,1065],int_dtyp:[943,952,962],integ:[40,41,478,823,825,827,829,838,840,848,849,850,943,959,967,970,980,1000,1038,1047,1175,1177,1180],integr:1231,intend:43,inter:1231,interchang:[40,41,967,1053],interest:1231,interfac:[967,974,1274],intermedi:[40,41],intern:[40,41,893,1066,1080,1119,1163,1164,1171,1172,1239,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1270,1271],interpol:[967,1021],intersect:[1099,1100],interv:[40,41,848,849,850,967,970,981,1022,1023,1099,1102,1175,1179],introduc:1277,inv:[757,1089,1277],invalid:[848,849,850],invalid_dtyp:943,invers:[827,828,1089,1091,1093,1099,1100,1101,1102,1103,1105,1277],invert:[1089,1091,1093],invest:1277,invoc:[891,892],irrespect:1231,is_al:1119,is_arrai:[126,288,428,553,679,967,1119],is_float_dtyp:943,is_int_dtyp:943,is_mean:1119,is_sum:1119,is_var:[1225,1229],is_vari:[159,338,462,591,747,1066],isfinit:[85,212,392,511,636,827],isinf:[288,553,679,967],isinst:1119,isnan:[85,212,392,511,636,827],isnumer:1119,issu:43,item:[15,19,40,41,852,864,865,893,902,903,905,912,914,916,918,924,943,950,967,986,1010,1049,1050,1119,1163,1167,1168,1169,1172,1173,1174,1231,1260,1261,1273],iter:[15,16,17,18,19,40,41,42,891,892,893,896,897,899,900,902,903,906,907,914,916,917,918,919,924,937,967,969,978,984,985,999,1012,1027,1032,1036,1037,1040,1045,1047,1051,1054,1059,1064,1119,1163,1164,1165,1167,1171,1172],iterbal:[893,914,918,924,1119],its:[478,845,846,893,937,967,1012,1037,1053,1059,1119,1231],itself:[43,1163,1172],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,384,385,386,387,389,390,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,845,846,848,849,850,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,897,898,899,900,902,903,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1229,1231,1232,1234,1235,1236,1237,1238,1239,1241,1242,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1275,1276],ivy_backend:[40,41],ivy_bay:1277,ivy_test:43,ivyfcmodel:1273,ivyh:[40,41,42],ivymodul:[190,806],jame:1231,jax:[43,1066,1072,1231,1277],jax_concat:1231,jnp:1231,join:[40,41,967,984,1051,1119],journal:1231,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1231,1248,1257,1277],kaimingnorm:[1239,1243],kalman:1277,kalman_filt:1277,kalman_filter_step:1277,kalman_filter_upd:1277,keep:[40,41,893,938,967,1061,1119,1231,1232,1277],keep_inner_v:[1115,1116,1117],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1115,1116,1117],keepdim:[40,41,428,460,471,472,838,840,848,849,850,967,1061,1089,1092,1182,1184,1185,1186,1187,1188,1189,1190],kei:[15,16,17,40,41,42,43,852,857,893,905,967,986,1115,1116,1117,1119,1163,1166,1170,1200,1211,1212,1231,1237,1238,1248,1259,1264,1268],kept:[40,41,42,1115,1116,1117],kera:1277,kernel:[1200,1210],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,893,902,903,915,919,925,967,971,993,994,995,1024,1119,1163,1167,1260,1261],keyword_color_dict:[40,41,42],kind:[823,824,825,1277],kwarg:[15,16,17,40,41,42,59,63,893,902,915,919,925,967,1024,1119,1219,1220,1221,1225,1237,1238,1260,1261],kwarg_stateful_idx:[1219,1220,1221,1225,1260,1261],kwargs_clon:1119,kwargs_dist:1119,kwargs_uni:1119,label:[43,1213,1214,1215,1216],lamb:[1066,1073,1231,1264],lamb_upd:1066,lambda:[1119,1264,1267,1269,1273],lar:[1066,1073,1074,1231,1264],larger:[823,824,967,981],largest:[40,41,823,824,825,967,972,1000],lars_upd:1066,last:[40,41,838,839,841,842,848,849,850,967,970,988,1021,1047,1051,1089,1092,1182,1187,1189,1192,1197,1200,1210,1248,1258],later:[40,41,967,979],latest:[1248,1257],layer:[1066,1069,1071,1073,1075,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1217,1218,1231,1239,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1270,1271,1277],layer_norm:1217,layernorm:[1231,1262],layerwis:[1066,1074,1264,1267],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1163,1164,1171],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1192,1193,1194],leaky_relu:[798,1192],learn:[827,834,1066,1069,1071,1073,1074,1075,1089,1094,1115,1116,1117,1118,1175,1181,1231,1264,1265,1266,1267,1268,1269,1274,1277],learnabl:[1217,1218,1262,1263],leav:[15,18,19,40,41,1163,1164,1165,1171,1172],left:[40,41,43,1089,1092,1182,1184,1185,1186,1187,1188,1189,1190,1231],leftmost:[40,41],len:1119,length:[40,41,42,967,970,1037,1048,1059],lenton2021ivi:1231,lenton:1231,less:[40,41,43,85,212,392,511,636,827,838,840,967,980,1119,1175,1179],less_util_node_str:1119,let:[1274,1277],level:1231,librari:[1231,1273,1277],lightweight:1231,like:[43,1066,1072,1175,1179,1231,1273,1274,1277],limit:[40,41,42,823,824,825,967,981,982,983],linalg:[29,1090,1091,1092,1093,1094,1095,1231],line:43,linear0:[1231,1273],linear1:1231,linear2:1273,linear:[967,1002,1021,1089,1192,1193,1194,1195,1200,1208,1231,1248,1249,1250,1251,1252,1253,1254,1255,1273],linear_algebra:[471,472,473,474,838,839,840],linear_resampl:[126,288,428,553,679,967],linearli:[967,1002],link:[43,1231],linspac:[126,288,428,553,679,967,970],list:[15,18,19,40,41,43,384,385,386,820,821,822,841,842,848,849,850,893,902,903,912,913,915,916,917,919,922,923,937,967,970,974,976,1027,1046,1047,1056,1061,1115,1116,1117,1119,1163,1164,1165,1167,1171,1172,1200,1201,1202,1203,1204,1205,1206,1207,1231,1237,1238,1248,1249,1250,1251,1252,1253,1254,1255],list_join:[40,41,42],list_stack:[40,41],liter:[838,840],littl:1274,load:[40,41],loaded_kwarg:1119,loader:1231,local:43,local_set:[967,1010],locat:[43,827,833,967,1020,1175,1176],log:[767,967,1023,1099,1119,1213,1214,1215,1216,1231],log_all_op:1225,log_global_inference_abs_tim:[1222,1231],log_global_inference_rel_tim:[1222,1231],logarithm:[1099,1110],logic:[31,827,835,848,849,850,1097,1098,1231],logical_and:[352,764,1096],logical_not:[85,212,392,511,636,827],logical_or:[352,764,1096],logit:[1213,1216],logspac:[126,288,428,553,679,967],look:[43,1274,1277],loop:[1115,1116,1117,1118],loss:[1214,1215,1216,1231,1273],loss_fn:[1231,1273],lot:1274,low:[40,41,478,1175,1177,1179],lower:[40,41,43,967,1026,1175,1179],lower_depth:[1260,1261],lowest:[15,18,19,40,41,1163,1172,1175,1177],lstm:[1200,1210,1231,1248],lstm_updat:[43,1200],machin:[823,824,825,827,834,1089,1094,1175,1181,1231,1274,1277],made:43,mai:[967,970,992,996,1231,1274,1277],main:[967,1012,1231],mainli:1231,maintain:43,make:[43,478,893,1119,1231,1274],maml:[1115,1116,1117],maml_step:1115,manag:[893,1119],manhattan:[838,840],mani:[40,41,43,967,1047,1231],manipulation_funct:[841,842],manner:[15,18,19,40,41,43,1163,1172],manual:[1163,1164,1171,1277],map:[40,41,42,827,833,893,902,967,1020,1119,1163,1168,1169,1172,1248,1259,1273],map_cont:[40,41],map_nest_at_index:1163,map_nest_at_indic:1163,map_sequ:[40,41],mapper:[893,902,903,1119],mask:[1200,1211,1212],master:43,match:[40,41,967,1024],match_kwarg:967,math:[33,477,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1119,1231],mathbb:[1089,1095],mathbf:[1089,1095],mathemat:[819,838,840],matmul:[43,288,428,553,679,967,1277],matplotlib:1274,matric:[1200,1209],matrix:[40,41,967,969,982,1025,1089,1090,1091,1092,1093,1094,1095,1200,1209,1248,1258],matrix_norm:[40,41,166,347,471,600,757,1089],matter:1231,max:[40,41,387,823,824,825,967,982,983,994,1026,1039,1040,1119,1182,1184,1264,1266],max_batch_s:[40,41],max_chunk_s:[893,937,1119],max_depth:[40,41,893,897,900,907,915,919,925,967,1010,1119,1163,1172],max_dev_dim_step_ratio:893,max_freq:[967,1002],max_length:[40,41],max_node_dim_step_ratio:1119,max_norm:[40,41,967,982,983],max_split_factor_step_s:[893,1119],max_trust_ratio:[1066,1073,1264,1266],maxim:[1231,1274,1277],maximis:1231,maximum:[40,41,42,679,893,915,919,925,937,967,972,981,982,983,1002,1066,1073,1119,1163,1172,1182,1184],mayb:[15,18,19],mdi:1119,mean:[40,41,478,893,922,923,924,925,937,967,994,1115,1116,1117,1118,1119,1163,1167,1175,1178,1182,1185,1188,1190,1239,1273,1277],measur:[1200,1211,1248,1259],mech:1231,mechan:[1231,1277],medic:1277,member:43,memori:[893,909,932,937,939,942,1119,1200,1210,1231],merg:43,merge_with_upstream:43,meshgrid:[288,428,679,967],messag:[1275,1276],meta:[35,1116,1117,1118,1231],method:[40,41,42,43,478,967,974,986,1027,1039,1040,1066,1073,1074,1119,1163,1164,1171,1172,1231,1248,1259,1260,1261,1274],might:[967,992,1277],min:[40,41,387,823,824,825,838,840,967,994,1028,1039,1040,1049,1089,1094,1119,1182,1186],min_bas:[967,1050],min_denomin:[967,1049],min_dev_dim_s:893,min_node_dim_s:1119,min_sf_tune_step:[893,1119],min_unit_dev_tune_step:893,min_unit_node_tune_step:1119,mind:1231,mini:[1217,1218,1262,1263],minimum:[40,41,679,893,943,947,967,970,973,974,981,1007,1008,1041,1042,1049,1050,1119,1182,1186],miss:[1264,1268],ml_framework:[827,834,967,970,1089,1094],mod:[967,1001],mod_depth:[1260,1261],mod_height:[1260,1261],mod_with_top_mod_key_chain:[1260,1261],mode:[40,41,471,473,838,839,891,892,893,922,923,924,925,937,1089,1094,1119,1274],model:[1231,1273],modul:[40,41,42,59,967,1029,1119,1231,1232,1234,1235,1236,1237,1238,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1262,1263,1270,1271,1277],moment:[1066,1068,1069,1073,1264,1265,1266],more:[43,841,842,967,1051,1119,1231,1274,1277],more_util_node_str:1119,most:[40,41,43,1089,1094,1231,1277],move:[40,41,43,893,938,1119],much:[43,1231,1277],multi:[478,967,1029,1200,1211,1248,1259],multi_head_attent:1200,multi_index_nest:1163,multi_map:[40,41],multi_nod:1119,multidev:[893,904,905,906,925],multidevcontain:[40,41],multidevic:[893,902],multidevit:[893,896,899,902,903,907],multidevitem:[893,895,898],multidevnest:[893,897,900],multiheadattent:[1231,1248],multinod:[1119,1123],multinodecontain:1119,multinodeit:1119,multinodeitem:1119,multinodenest:1119,multinomi:[172,356,478,606,782,1175],multipl:[40,41,848,849,850,967,1024,1047,1089,1091,1182,1184,1185,1186,1187,1188,1190,1217,1218,1248,1258,1274],multipli:[40,41,967,989,1182,1187],multiprocess:[40,41,42,428,679,893,902,967,1119],must:[40,41,42,43,820,821,822,827,828,829,832,834,836,838,840,841,842,848,849,850,852,871,877,893,922,923,924,925,937,967,970,984,986,988,996,1026,1028,1040,1051,1099,1104,1107,1119,1175,1180,1264,1268],mutabl:[1163,1165,1172],mutlidevic:[893,902],mutlinod:1119,mw_tm1:[1066,1069,1073],mx_concat:1231,mxnet:[43,1231,1277],my_func:43,mymodel:1231,name:[891,892,1219,1220,1221,1225,1273],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1274],nan:[40,41,819,827,828,832,833,967,1011,1062],nativ:[15,17,18,19,40,41,43,893,909,911,920,921,932,939,942,943,948,955,956,1119,1231,1232,1237,1238],native_modul:[1237,1238],native_module_class:[1237,1238],nativearrai:[15,18,19,43,823,824,825,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,845,846,848,849,850,852,871,877,893,911,937,938,943,947,953,958,959,967,968,969,970,972,973,974,975,976,978,980,981,982,983,984,985,987,988,989,990,993,994,995,996,998,999,1000,1001,1002,1004,1005,1009,1011,1012,1013,1020,1021,1022,1023,1025,1026,1027,1028,1031,1032,1033,1036,1037,1038,1039,1040,1045,1047,1048,1051,1053,1054,1056,1057,1058,1059,1061,1062,1063,1064,1065,1119,1163,1165,1172],natur:[1099,1110,1277],ncdhw:[1200,1205,1206,1248,1253,1254],nchw:[1200,1203,1204,1207,1248,1251,1252,1255],ncw:[1200,1201,1202,1248,1249,1250],ndarrai:[43,384,385,386,387,389,390,478,967,1057],ndhwc:[1200,1205,1206,1248,1253,1254],nearest:[967,1038],need:[43,967,982,983,1200,1202,1204,1206,1231,1248,1250,1252,1254,1277],neg:[40,41,827,832,838,840,841,842,848,849,850,1182,1187,1189,1192,1194],negative_slop:1239,neither:1119,nest:[15,16,17,18,19,40,41,42,893,915,919,925,967,974,1056,1115,1116,1117,1119,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1260,1261,1264,1265,1266,1267,1268,1269],nested_indices_wher:1163,nested_map:[1119,1163],network:[1200,1209,1231,1232,1234,1248,1260,1261,1277],neural:[1200,1231,1234,1248,1273],new_node_percent_mem:1119,new_node_util:1119,new_node_utils_kei:1119,new_std:[1217,1218,1262,1263],newli:[43,891,892,967,978,979],newlin:[40,41,42],newshap:[967,978,1037],next:[823,824,1119,1260,1261,1264,1265,1266,1267,1268,1269],nhwc:[1200,1203,1204,1207,1248,1251,1252,1255],node:[40,41,1163,1164,1171],node_clon:1119,node_dist:1119,node_dist_arrai:1119,node_dist_it:1119,node_in:1119,node_mapp:1119,node_str:1119,node_to_str:1119,node_util:1119,nodedistit:1119,nodedistitem:1119,nodedistnest:1119,nodemanag:[1119,1130],nodemapp:1119,nodemappermultiproc:1119,noinspect:[43,894,944,945,946,1067,1119,1226],non:[40,41,838,840,848,849,850,891,892,943,957,1260,1261,1264,1268,1274],none:[40,41,42,43,59,61,64,384,385,386,426,428,429,432,434,441,442,443,444,451,452,453,454,455,456,457,458,459,461,471,472,478,479,820,821,822,823,824,825,827,834,838,840,841,842,848,849,850,891,892,893,902,903,909,910,935,936,937,938,943,950,951,952,967,970,974,991,992,997,999,1003,1004,1005,1010,1012,1014,1015,1016,1017,1018,1022,1023,1029,1031,1032,1033,1036,1039,1040,1041,1042,1047,1048,1049,1050,1059,1060,1065,1066,1069,1071,1073,1074,1075,1081,1082,1086,1089,1092,1094,1115,1116,1117,1118,1119,1163,1164,1167,1171,1172,1175,1176,1177,1178,1179,1182,1184,1185,1186,1187,1188,1189,1190,1200,1202,1204,1206,1209,1210,1211,1212,1217,1218,1219,1220,1221,1225,1229,1237,1238,1239,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271],norm:[40,41,838,840,967,982,983,1089,1092,1218,1231,1263,1264,1266],normal:[1175,1178,1217,1218,1262,1263],normalized_idx:[1217,1218],normalized_shap:[1262,1263],notat:[40,41,1182,1183],note:[43,1089,1094],noth:[40,41,1274],notimplementederror:1119,now:[40,41,893,938,967,968,1119,1231,1248,1259,1260,1261,1273,1274,1277],np_concat:1231,np_finfo:387,ns_tune_step:1119,num:[428,451,452,967,1022,1023],num_arrai:[40,41],num_arrays_in_memori:967,num_arrays_on_dev:893,num_band:[967,1002],num_channel:[1248,1255],num_chunk:1119,num_chunks_floor:1119,num_class:[1175,1176],num_cpu_cor:893,num_gpu:[119,426,893,1119],num_head:[1200,1211,1248,1259],num_kei:[1200,1211,1212],num_lay:[1248,1257],num_or_size_split:[40,41,428,457,967,1047],num_output:1119,num_queri:[1200,1211,1212],num_sampl:[428,450,478,479,967,1021,1082,1083,1175,1176],num_task:[1115,1116,1117,1118],number:[40,41,42,819,823,824,825,827,833,838,839,848,849,850,891,892,893,929,930,931,943,954,958,959,967,970,981,985,998,1002,1009,1012,1021,1022,1023,1026,1030,1036,1047,1054,1058,1062,1064,1115,1116,1117,1118,1119,1175,1176,1180,1182,1184,1185,1186,1188,1190,1200,1211,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1274,1277],numer:[43,827,832,852,871,877,967,1007,1008,1041,1042,1049,1050,1099,1107,1239],numhead:[1200,1211],numpi:[40,41,43,384,385,386,387,389,390,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,838,839,967,1057,1089,1094,1182,1183,1231,1273,1274,1277],nwc:[1200,1201,1202,1248,1249,1250],obj:[40,41],object:[40,41,42,59,387,823,824,825,893,943,947,967,970,974,1066,1163,1166,1168,1169,1170,1173,1174,1175,1181,1225,1229,1239,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1260,1261],object_in:[428,432,967,974],observ:1119,occupi:[823,824,825,967,1039,1040],off:[967,970],offer:1231,offset:[1217,1218],often:1274,old:[40,41],on_init:[1248,1259,1260,1261],onc:[43,893,937,1119,1175,1176,1231],one:[40,41,43,838,840,841,842,893,922,923,924,925,937,943,949,967,1012,1024,1031,1039,1040,1048,1051,1089,1092,1119,1182,1183,1184,1185,1186,1187,1188,1189,1190,1231,1274,1277],one_hot:[126,428,553,679,967],onearrai:[967,998],ones:[40,41,77,204,384,503,628,820,967,1012,1031,1033,1231],ones_lik:[126,288,428,553,679,967],ongo:43,onli:[40,41,43,478,841,842,893,1089,1094,1119,1163,1164,1165,1171,1264,1265,1266,1267,1268,1269,1273,1274],onlin:1231,onto:[893,922,923,938,1119,1163,1167,1172],oom:[893,1119],open:[967,970,1175,1179,1231,1277],opencv:1274,oper:[40,41,827,835,967,977,993,994,995,1022,1023,1052,1066,1069,1071,1073,1074,1075,1096,1097,1098,1200,1201,1202,1203,1204,1205,1206,1207,1209,1231,1232],operand:[40,41,827,828,1182,1183],oppos:[967,1002],optim:[893,1066,1069,1071,1073,1074,1075,1115,1116,1117,1118,1119,1231,1265,1266,1267,1269,1273,1277],optimizer_upd:1066,option:[15,18,19,40,41,42,43,384,385,386,820,821,822,827,834,838,840,841,842,848,849,850,891,892,893,902,903,911,915,916,917,918,919,922,923,924,925,932,935,936,937,938,942,943,948,953,957,966,967,969,970,972,973,974,982,983,984,989,991,992,999,1002,1003,1004,1005,1009,1011,1012,1019,1021,1022,1023,1024,1027,1029,1031,1032,1033,1036,1039,1040,1043,1045,1047,1048,1049,1050,1051,1059,1061,1062,1065,1066,1069,1071,1072,1073,1074,1075,1077,1082,1086,1089,1092,1094,1115,1116,1117,1118,1119,1163,1164,1165,1167,1171,1172,1175,1176,1182,1184,1185,1186,1187,1188,1189,1190,1192,1193,1197,1200,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1237,1238,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1274],ord:[838,839,840,967,999],order:[40,41,42,43,838,840,841,842,845,846,1066,1069,1071,1073,1074,1075,1089,1092,1115,1116,1117,1270,1271],ordered_node_util_kei:1119,org:1277,organ:43,origin:[40,41,42,967,1033,1037,1065,1089,1092],other:[40,41,43,852,854,855,860,862,863,867,869,870,871,872,873,875,877,878,879,880,881,882,884,885,886,888,889,890,891,892,967,969,970,1012,1066,1070,1175,1179,1231,1273,1274,1277],other_i:[43,852,871,877],otherwis:[15,16,17,18,19,40,41,827,832,838,840,848,849,850,893,910,943,950,951,952,967,977,1059,1060,1063,1066,1072,1077,1081,1115,1116,1117,1119,1182,1184,1185,1186,1188,1190],our:[43,1231,1277],out:[478,852,871,967,970,1099,1103,1200,1208,1210,1231,1248,1256],out_feat_dim:[1200,1211],out_featur:[1200,1208,1209],out_i:[827,832],outdat:1277,outer:[1115,1116,1117,1118],outer_batch_fn:[1115,1116,1117],outer_batch_shap:[1200,1209],outer_cost_fn:[1115,1116,1117],outer_v:[1115,1116,1117],outlin:1274,output:[40,41,43,820,821,822,841,842,893,902,903,937,967,970,979,1003,1012,1036,1054,1066,1070,1099,1104,1119,1175,1177,1178,1179,1200,1202,1204,1206,1208,1210,1211,1212,1231,1248,1249,1250,1251,1252,1253,1254,1256,1257,1258,1259],output_ax:[893,937,1119],output_axi:1119,output_channel:[1248,1249,1250,1251,1252,1253,1254,1257,1258],output_connected_onli:[1219,1221,1225,1260,1261],output_queu:1119,output_shap:[1200,1202,1204,1206,1248,1250,1252,1254],outsid:[967,981],over:[40,41,838,840,848,849,850,967,999,1089,1092,1175,1179,1182,1184,1185,1186,1188,1190,1217,1218,1262,1263],overal:1274,overflow:[967,970],overhead:1274,overrid:[967,1031,1033,1065],overriden:[1264,1268],overwrit:[40,41,893,937,1119],overwrite_at_key_chain:[40,41],own:[1231,1274,1277],packag:[43,1274],pad:[967,985,1002,1064,1200,1201,1202,1203,1204,1205,1206,1207,1248,1249,1250,1251,1252,1253,1254,1255],pad_width:[428,967,985,1064],page:1231,pair:[1200,1212],parallel:[893,902,903,1119],parallelis:[893,902,903,1119],param:[40,41,42,43,428,442,443,827,836,893,937,967,968,1004,1005,1031,1032,1119,1230,1231,1260,1261,1273],paramet:[15,16,17,18,19,40,41,42,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,838,839,840,841,842,845,846,848,849,850,852,871,877,891,892,893,902,903,909,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,932,935,936,937,938,939,942,943,947,948,949,953,954,955,956,957,958,959,966,967,969,970,972,973,974,975,976,977,978,979,980,981,982,983,984,985,987,988,989,990,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1009,1011,1012,1013,1015,1016,1017,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1032,1033,1036,1037,1038,1039,1040,1041,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1077,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1237,1238,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273],parameter:[1175,1178,1179],params_all_empti:1225,pardo:1231,pars:[967,986],part:[1066,1069,1071,1073,1074,1075,1099,1103,1231,1260,1261,1274],partial:[40,41,1260,1261],particl:1277,particular:[43,1277],pass:[40,41,42,43,893,902,937,943,948,967,979,1066,1080,1115,1116,1117,1119,1237,1238,1260,1261,1264,1268,1270,1271],pattern:[40,41,967,993,994,995],per:[893,1119,1200,1201,1202,1203,1204,1205,1206,1207,1248,1249,1250,1251,1252,1253,1254,1255],percent_used_mem_on_dev:893,percent_used_mem_on_nod:1119,percentag:[893,932,1119],perf_count:1119,perform:[40,41,43,845,846,848,849,850,893,967,972,973,989,993,994,995,1015,1016,1017,1021,1022,1023,1066,1069,1071,1073,1074,1075,1082,1083,1115,1116,1117,1118,1119,1163,1168,1169,1182,1184,1185,1186,1187,1188,1189,1190,1192,1197,1200,1208,1210],permissable_step:1119,permit:43,permut:[478,967,1053,1059],perpendicular:[967,988],person:1231,physci:1277,pickl:[40,41,1119],pickle_filepath:[40,41],pid:1225,pinv:[347,757,1089],pip:1231,pipelin:1273,pkk:1277,pkkm1:1277,pkm1km1:1277,place:[40,41,43,820,821,822,893,938,967,998,1003,1015,1016,1017,1119,1264,1265,1266,1267,1268,1269],placehold:[1163,1172],pleas:[478,1089,1094],point:[43,819,820,821,822,823,824,827,828,836,838,840,943,958,967,970,1099,1107],popul:[40,41,1175,1176],popular:1277,population_s:[478,479,1175,1176],portabl:[1231,1232],posit:[15,16,17,823,824,827,832,893,915,919,925,967,968,970,998,1002,1119,1175,1180,1237,1238],possibi:[40,41],possibl:[967,1024,1056,1082,1087,1277],post:[1217,1218],post_shap:[40,41],power:[43,852,877,883,967,1007,1041,1050,1239],practic:1231,pre:[893,1119,1231],pre_shap:[40,41],precis:[823,824,827,836],pred:[1213,1214,1215,1216],predict:[1213,1214,1215,1216,1277],preprint:1231,present:[40,41],preserv:[40,41,42,841,842,967,999,1066,1077],preserve_typ:[40,41,462,465,1066,1077],press:1231,prevent:[43,1066,1068,1069,1073,1119,1264,1265,1266],previou:[1066,1069,1073],previous:[967,979],prime:1231,print:[40,41,42,893,933,967,1034,1231,1273],print_all_arrays_in_memori:967,print_all_arrays_on_dev:893,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1264,1268],prob:[478,479,1175,1176,1200,1208,1248,1256],probabl:[1175,1176,1200,1208,1248,1256],problem:[43,1277],process:[43,893,902,903,932,942,967,1029,1119],process_specif:[893,932,942,1119],prod:[40,41,967,994],produc:[893,902,903,1119],product:[40,41,967,988,989,1025,1182,1183,1200,1211,1212,1248,1259],profil:[119,282,426,546,671,893,1119],project:[1231,1273,1274,1277],promot:[43,827,828,829,836,838,840,852,877,1099,1107],prompt:1231,properli:43,properti:[40,41,387,893,905,1119,1225,1229,1260,1261,1264,1265,1266,1267,1269],provid:[40,41,43,841,842,848,849,850,891,892,893,910,943,950,951,952,957,966,967,992,1031,1033,1040,1065,1066,1069,1071,1073,1074,1075,1081,1119,1231,1248,1257,1264,1265,1266,1267,1268,1269,1274],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1089,1093],ptype:[1225,1229],pull:[1231,1232],pure:[40,41,1231,1277],purpos:1277,put:1119,pybroadexcept:1119,pyprotectedmemb:[1119,1226],pyshadowingbuiltin:43,pyshadowingnam:[894,944,945,946,1067,1119],python:[40,41,893,932,942,967,970,1119,1231],pytorch:[1066,1069,1071,1073,1074,1075,1089,1094,1231,1264,1265,1266,1267,1268,1269,1273,1274,1277],pyunresolvedrefer:1119,quadrant:[1099,1104],queri:[40,41,852,866,887,893,926,936,1119,1200,1211,1212,1248,1259],query_dim:[1248,1259],query_kei:[40,41],queue:[40,41,42,893,902,903,967,1035,1043,1119],queue_class:[893,902,903,1119],queue_load_s:[40,41,42],queue_timeout:[40,41,42,967,1119],quick:[478,1231],quickli:[43,1273],radian:[827,830,1099,1100,1102,1104,1111,1113],rai:[1099,1100],rais:[40,41,43,848,849,850,852,877,967,977,1007,1041,1048,1050,1060,1119,1260,1261,1264,1268],ram:[893,932,939,942,1119],randint:[172,356,478,606,782,1175],random:[37,40,41,479,1176,1177,1178,1179,1180,1181,1231],random_crop:1082,random_norm:[172,356,478,606,782,1175],random_uniform:[172,356,478,606,782,1175],randomli:[478,1082,1086,1200,1208,1248,1256],randomness_factor:[1219,1221,1225,1260,1261],rang:[478,967,970,1022,1023,1099,1104,1119,1231,1273,1277],rank:[838,840,848,849,850,967,985,1061,1064],rate:[1066,1069,1071,1073,1074,1075,1115,1116,1117,1118,1248,1259,1264,1265,1266,1267,1268,1269],rather:[40,41,893,937,967,970,1019,1066,1072,1119],ratio:[893,1066,1073,1082,1087,1119,1264,1266],raw:[40,41,1089,1094],raw_delta:1119,reach:[893,915,919,925,1119,1163,1172],read:[40,41],readi:[1119,1273],real:[1099,1100,1103],realiti:1274,rearrang:[40,41,967,993,995],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1115,1117],receiv:[893,902,903,967,971,1024,1119,1248,1258],receivess:[893,1119],receiving_fn:1225,receivng:[1115,1118],recev:[1115,1116,1117],recognit:1277,recommend:1231,rectifi:[1192,1194,1195],recurr:[1200,1210],recurrent_bia:[1200,1210],recurrent_kernel:[1200,1210],recurs:[40,41,1163,1164,1165,1171,1172],redefin:43,reduc:[40,41,848,849,850,893,937,967,994,1089,1094,1119,1182,1184,1185,1186,1187,1188,1189,1190],reduce_max:[40,41,179,361,480,611,789,1182],reduce_mean:[40,41,179,361,480,611,789,1182,1231,1273],reduce_min:[40,41,179,361,480,611,789,1182],reduce_prod:[40,41,179,361,480,611,789,1182],reduce_std:[40,41,361,1182],reduce_sum:[40,41,179,361,480,611,789,1119,1182],reduce_var:[40,41,179,361,480,611,789,1182],reduct:[39,40,41,428,455,456,848,849,850,967,994,1039,1040,1183,1184,1185,1186,1187,1188,1189,1190,1231],refactor:43,refer:[43,848,849,850,1066,1068,1069,1089,1095,1248,1258,1277],reflected_oper:[0,13,14],regard:[893,1119],regardless:[40,41,891,892],register_paramet:1273,reimplement:1277,rel:[841,842,1066,1069,1071,1073,1074,1075],rel_slice_obj:1119,relev:[1264,1265,1266,1267,1268,1269],relu:[798,1192,1193,1194,1231,1273],remain:[43,967,1037,1163,1167],remaind:[40,41,967,1001,1047],remov:[40,41,967,1048,1115,1116,1117],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,841,842,967,999],rep:[967,1054],repeat:[40,41,43,288,679,967,995,1054,1119,1274],repeated_config_check:[893,1119],repeatedli:[1163,1170],repetit:[40,41,967,1036,1054],replac:[40,41,43,478,479,967,981,1039,1040,1175,1176],repo:[43,1231],repres:[43,827,828,943,949,954,1200,1209],represent:[40,41,42,43,819,823,824,825,827,829,893,920,921,943,949,955,956,967,1046,1056,1119],reptil:[1115,1118],reptile_step:1115,request:[1231,1232],requir:[43,827,836,891,892,943,947,967,970,974,1237,1238],resampl:[967,1021],reserv:43,reshap:[40,41,43,478,679,967],reshape_lik:[40,41],respect:[827,829,834,852,871,967,996,1066,1068,1069,1070,1071,1073,1074,1075,1089,1094,1099,1107,1115,1116,1117,1118],respond:43,respons:1119,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,827,828,829,832,834,835,836,838,840,848,849,850,852,871,877,893,902,967,970,996,1039,1040,1051,1089,1092,1096,1097,1098,1099,1107,1119,1182,1184,1185,1186,1187,1188,1189,1190,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1231],ret:1119,ret_dict:1119,ret_fn:[893,902,903,1119],retain:[1066,1070],retain_grad:[462,463,1066,1070],retreiv:1119,retrn:[967,1046],return_cont:[40,41],return_dict:[40,41],return_graph:[1219,1220,1221],return_inner_v:[1115,1116,1117,1118],return_sequ:[1248,1257],return_st:[1248,1257],rev:[967,992],revers:[40,41,841,842,967,992,999,1059],review:43,right:[40,41,43],rk_e:1277,robot:1231,ronald:1231,root:[43,827,836],round:[288,428,679,827,836,967,970,1119],row:[967,1012,1175,1176],rule:[43,827,829,836,852,877,967,970,1099,1107],run:[43,893,902,1066,1068,1069,1073,1115,1116,1117,1118,1119,1231,1232,1248,1259,1260,1261],safe:[893,902,1119],safety_factor:[893,1119],same:[15,16,17,40,41,43,838,839,841,842,893,902,903,937,938,943,947,967,968,980,984,1000,1001,1004,1005,1031,1033,1038,1039,1040,1051,1065,1066,1072,1077,1099,1103,1115,1116,1117,1119,1182,1183,1200,1201,1202,1203,1204,1205,1206,1207,1231,1248,1249,1250,1251,1252,1253,1254,1255,1273,1277],same_arrai:[40,41],sampl:[967,1021,1082,1083,1175,1176,1178,1179,1200,1208,1231,1248,1256],satisfi:[967,974,1089,1091,1095],save:[40,41,967,1044,1055,1082,1084,1260,1261],save_debug_info:1225,save_dir:[426,427,893,908,1119],save_to_disk:[1219,1221,1225,1260,1261],save_weight:[1260,1261],scalar:[838,840,967,981,1031,1058,1062],scale:[893,935,936,1066,1074,1119,1200,1208,1211,1212,1217,1218,1248,1256,1259,1264,1267],scaled_dot_product_attent:1200,scatter:[967,1031,1039,1040],scatter_flat:[126,288,428,553,679,967],scatter_nd:[126,288,428,553,679,967],scene:[1066,1069,1071,1073,1074,1075],schemat:1231,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,827,829,893,924,967,975,988,996,1035,1043,1053,1066,1068,1069,1073,1115,1117,1119,1264,1265,1266],secondli:1277,sector:[827,828],see:[43,59,387,426,427,478,827,829,838,840,848,849,850,852,871,877,893,905,906,907,908,943,967,970,1022,1023,1066,1099,1107,1225,1229,1231,1239,1241,1242,1244,1245,1247],seed:[40,41,172,478,782,1175],seed_valu:[40,41,478,1175,1180],seem:1231,seen_set:[967,1010],select:[967,974,1048,1274,1277],self:[40,41,43,59,387,426,427,852,871,877,893,905,906,907,908,943,1066,1119,1225,1229,1231,1239,1241,1242,1244,1245,1247,1264,1268,1273,1277],self_i:[852,871],sent:1119,seper:[43,967,1002],seq:[40,41,42,1182,1183,1260,1261],sequenc:[15,16,17,40,41,42,43,478,891,892,893,902,903,912,913,914,915,916,917,918,919,922,923,937,943,947,967,970,974,976,978,984,985,999,1012,1024,1027,1032,1036,1037,1040,1047,1051,1054,1059,1064,1066,1070,1082,1086,1087,1089,1092,1119,1163,1174,1175,1177,1179,1182,1184,1185,1186,1187,1188,1189,1190,1200,1201,1202,1203,1204,1205,1206,1207,1217,1218,1237,1238,1248,1249,1250,1251,1252,1253,1254,1255,1257,1260,1261,1262,1263,1264,1268,1270,1271],sequenti:1231,seri:43,set:[15,18,19,40,41,893,922,923,935,936,937,967,969,991,1012,1041,1042,1043,1044,1066,1069,1071,1072,1073,1074,1075,1089,1092,1119,1163,1164,1171,1173,1174,1175,1176,1180,1182,1184,1185,1186,1187,1188,1189,1190,1229,1231,1248,1257,1264,1265,1266,1267,1268,1269,1274,1277],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1229,set_debug_mod:44,set_default_devic:893,set_default_dtyp:943,set_default_float_dtyp:943,set_default_int_dtyp:943,set_default_nod:1119,set_exception_debug_mod:44,set_framework:[40,41,43,59,1119,1231,1273,1274,1277],set_ivy_backend:[40,41],set_min_bas:967,set_min_denomin:967,set_nest_at_index:1163,set_nest_at_indic:1163,set_param:1225,set_queue_timeout:967,set_split_factor:[893,1119],set_stat:[1264,1265,1266,1267,1268,1269],set_tmp_dir:967,set_with_grad:1066,setter:1119,sever:1277,sgd:[1231,1264],shape0:1119,shape:[40,41,43,384,385,386,428,441,456,478,679,820,821,822,841,842,893,905,943,947,967,968,978,980,984,985,998,999,1000,1001,1003,1005,1009,1012,1031,1032,1033,1036,1037,1038,1039,1040,1046,1048,1051,1064,1065,1082,1086,1089,1091,1094,1099,1103,1104,1119,1175,1177,1178,1179,1182,1183,1200,1202,1204,1206,1225,1229,1248,1250,1251,1252,1253,1254,1255,1262,1263],shape_slic:[40,41],shape_to_tupl:967,share:[40,41,1231,1274],shift:1119,should:[40,41,42,43,478,827,828,829,832,836,838,840,852,871,877,891,892,893,967,978,979,986,1031,1037,1066,1069,1071,1073,1074,1075,1099,1107,1119,1182,1183,1231],show:[40,41,1225,1231,1277],show_debug_info:1225,show_graph:[1219,1231,1260,1261,1264,1268],show_mod_in_top_mod:[1260,1261],show_structur:[1260,1261],show_sub_contain:[40,41],show_v:[1260,1261],show_v_in_top_v:[1260,1261],shown:[40,41],shp:1119,shuffl:[40,41,172,478,782,1175],shuffle_h5_fil:[40,41],sigmoid:[798,1192,1231,1273],signatur:[43,59,387,426,427,428,462,467,471,475,476,478,893,905,906,907,908,943,1066,1225,1229,1239,1241,1242,1244,1245,1247],signific:1277,similar:[43,1200,1211,1248,1259],similarli:[1089,1094],simpl:[43,967,997,1231,1274,1277],simpler:43,simplest:1274,simpli:[40,41,43,1231,1274,1277],simultan:1231,sin:[767,967,1002,1099,1113,1274],sinco:1274,sine:[827,828,1099,1102,1111,1112],singl:[40,41,891,892,893,902,903,922,923,924,925,967,1048,1058,1062,1082,1087,1119,1175,1178,1179,1182,1184,1185,1186,1187,1188,1189,1190,1231,1274,1277],singleton:[838,840,848,849,850],singular:[838,839],sinh:[767,1099],siren:[1231,1239],size:[40,41,42,428,455,838,839,893,916,917,918,919,935,936,937,967,970,978,1022,1023,1039,1047,1082,1086,1089,1092,1119,1175,1176,1178,1179,1182,1184,1185,1186,1187,1188,1189,1190,1248,1249,1250],size_ordered_arrai:[40,41],skew:[1089,1095],skinv:1277,skip:[40,41],slice:[40,41,845,846,967,1004,1005,1119,1163,1170],slice_kei:[40,41],slice_obj:[40,41,1119],slice_via_kei:[40,41],slide:[1200,1201,1202,1203,1204,1205,1206,1207,1248,1249,1250,1251,1252,1253,1254,1255],slope:[1192,1194],small:[1213,1214,1215,1216,1217,1218,1231,1262,1263,1274],smaller:[967,981],smallest:[40,41,823,824,825,967,973,980],smallest_norm:[387,823,824],softmax:[188,489,798,1192,1200,1211,1212],softplu:[798,1192],solv:1277,some:[40,41,43,967,970,1066,1068,1069,1071,1073,1074,1075,1080,1200,1208,1231,1248,1256,1274,1277],some_backend:43,some_namespac:43,someth:[43,1277],something_cool:43,somewher:[40,41],sort:[40,41,42,838,839,846,1119],sort_by_kei:[40,41],sorting_funct:[845,846],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,384,385,386,387,389,390,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476,477,478,479,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,845,846,848,849,850,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,897,898,899,900,902,903,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1229,1234,1235,1236,1237,1238,1239,1241,1242,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1275,1276,1277],space:[967,970,1002,1022,1023],spars:[1213,1216],sparse_cross_entropi:1213,spawn:[967,1029],special:[827,828],specif:[40,41,43,893,935,967,986,993,994,995,1029,1115,1116,1117,1118,1119,1175,1181,1231,1260,1261,1273,1274],specifc:[1175,1176],specifi:[40,41,43,838,840,841,842,848,849,850,893,912,913,914,915,916,917,918,919,922,923,927,929,933,936,937,938,943,947,949,967,970,972,973,974,981,984,985,1003,1004,1005,1011,1022,1023,1051,1061,1064,1089,1092,1119,1163,1168,1169,1173,1174,1182,1183,1184,1185,1186,1187,1188,1189,1190],split:[40,41,126,288,428,553,679,893,902,916,917,918,919,935,936,937,967,1024,1119],split_arg:1119,split_factor:[893,902,1119],split_func_cal:[893,1119],split_siz:1119,spread:[893,925,1119],sqrt:[85,212,392,511,636,827,838,840],squar:[827,836,967,1012,1089,1091],squeez:[126,288,428,553,679,967],stabil:[845,846,967,1049,1050],stabl:[845,846,967,1007,1008,1041,1042,1049,1050],stable_divid:967,stable_pow:967,stack:[40,41,288,679,967,1082,1087,1163,1164,1171,1248,1257],stack_imag:[162,343,467,596,753,1082],stacked_dim_s:1119,stage:43,standard:[40,41,823,824,1175,1178,1182,1188,1217,1218,1231,1232,1262,1263],start:[40,41,43,426,427,428,429,451,452,478,893,908,967,970,1022,1023,1119,1231,1274],starting_index:[40,41],starting_split_factor:[893,1119],state:[1119,1200,1210,1219,1220,1221,1225,1231,1234,1235,1236,1237,1238,1239,1241,1242,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273],statement:1274,static_argnam:[428,434,891,892],static_argnum:[428,434,891,892],std:[478,1175,1178],step:[40,41,428,429,893,967,970,1022,1023,1066,1068,1069,1071,1073,1074,1075,1115,1116,1117,1118,1119,1231,1264,1265,1266,1267,1268,1269,1273,1277],stephen:1231,stick:1231,still:[40,41,43],stochast:[1264,1269],stop:[40,41,426,427,428,429,451,452,893,908,937,967,970,1022,1023,1066,1069,1071,1073,1074,1075,1077,1115,1116,1117,1118,1119,1264,1265,1266,1267,1268,1269],stop_gradi:[40,41,338,462,591,747,893,937,1066,1069,1071,1073,1074,1075,1115,1116,1117,1118,1119,1264,1265,1266,1267,1268,1269],stopiter:1119,store:[40,41,967,1002,1047,1066,1080,1260,1261],store_var:[1260,1261],str:[15,16,17,40,41,42,43,384,385,386,387,389,390,823,824,825,891,892,893,902,903,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,937,943,948,949,954,955,956,957,958,959,966,967,974,991,993,994,995,1027,1029,1032,1039,1040,1089,1092,1094,1115,1116,1117,1118,1119,1163,1167,1182,1183,1237,1238,1248,1259,1260,1261],str_to_nod:1119,straight:1274,strength:[1231,1277],stride:[1200,1201,1202,1203,1204,1205,1206,1207,1248,1249,1250,1251,1252,1253,1254,1255],string:[40,41,43,893,909,911,920,921,926,932,938,939,942,943,947,953,955,956,957,966,967,970,974,991,1012,1032,1033,1065,1119,1200,1201,1202,1203,1204,1205,1206,1207,1248,1249,1250,1251,1252,1253,1254,1255,1260,1261],structur:[40,41,42,43,967,986],structural_diff:[40,41],sub:[40,41,893,916,917,922,923,924,925,967,1047,1115,1116,1117,1118,1119],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1119,sub_mod:[1260,1261],sub_modul:[1270,1271],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1231,1232,1262,1263,1270,1271],subsequ:43,subset:43,substr:[40,41],suffici:[1089,1094],suggest:1231,suitabl:[1082,1087],sum:[40,41,428,455,456,838,840,893,922,923,924,925,937,967,990,994,1039,1040,1119,1182,1183,1189],summat:[40,41,1182,1183],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,97,98,100,104,107,108,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,163,164,165,167,168,169,173,174,175,176,177,178,180,181,182,183,184,185,186,189,191,192,194,195,196,197,198,199,200,205,206,208,209,210,213,214,215,216,217,218,221,222,224,228,231,232,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,341,342,344,345,346,348,349,350,351,353,354,357,358,359,360,362,363,364,365,366,367,368,369,372,374,375,376,377,378,379,380,385,386,388,389,390,393,394,395,396,397,398,399,400,401,404,405,407,411,414,415,427,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,463,464,465,466,468,469,470,472,473,474,477,479,481,482,483,484,485,486,487,490,491,493,494,495,496,497,498,499,504,505,507,508,509,512,513,514,515,516,517,518,519,520,523,524,526,530,533,534,542,547,548,549,550,551,552,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,592,593,594,595,597,598,599,601,602,603,607,608,609,610,612,613,614,615,616,617,618,622,623,624,629,630,632,633,634,637,638,639,640,641,642,643,644,645,648,649,651,655,658,659,667,672,673,674,675,676,677,678,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,748,749,750,751,752,754,755,756,758,759,760,761,762,763,765,766,768,769,770,771,772,773,774,775,776,777,778,779,780,781,783,784,785,786,787,788,790,791,792,793,794,795,796,799,800,801,802,803,804,805,807,808,810,811,812,813,814,815,816,821,822,824,825,828,829,830,831,832,833,834,835,836,838,839,840,842,846,849,850,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,892,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1097,1098,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1176,1177,1178,1179,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1218,1220,1221,1223,1224,1226,1230,1231,1235,1236,1238,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1276,1277],supports_inplac:967,suppos:1277,sure:43,svd:[96,220,403,522,647,838],swap:[40,41,967,1053],swapax:[40,41,553,679,967,1277],symmetr:[1089,1095],syntax:[426,428,462,467,471,475,476,478],tab:1231,take:[43,967,1021],taken:[1182,1184,1185,1186,1188,1190],tan:[767,1099,1103],tangent:[1099,1103,1104,1105,1113,1114,1192,1199],tanh:[767,798,1099,1192],target:[40,41,893,909,912,913,914,915,916,917,918,919,922,923,924,925,938,1119,1231],target_dict:[40,41],task:[43,1115,1116,1117,1118],team:[43,1277],templat:1231,temporari:[967,1044,1055],tensor:[40,41,43,428,455,456,845,846,893,911,943,953,967,970,972,973,978,1022,1023,1026,1028,1031,1032,1033,1037,1039,1040,1047,1065,1119,1175,1176,1177,1200,1208,1210,1231,1248,1256,1258,1264,1265,1266,1267,1268,1269,1273,1274],tensorflow:[43,1089,1094,1200,1202,1204,1206,1231,1248,1250,1252,1254,1274,1277],term:[40,41,1200,1210,1231,1248,1258],termcolor:[40,41,42],termin:[40,41,42,1119],test:[43,827,832,848,849,850,943,958,959],test_array_api:43,tf_concat:1231,than:[40,41,823,824,838,840,841,842,893,937,967,970,980,981,1000,1019,1026,1048,1051,1066,1072,1119,1175,1179,1231,1274],thei:[40,41,43,1099,1104,1115,1116,1117,1175,1176,1231,1270,1271,1274],them:[1231,1277],themselv:[1163,1164],therefor:43,thi:[40,41,42,43,893,915,919,925,932,937,942,967,970,1002,1035,1037,1043,1066,1069,1071,1072,1073,1074,1075,1080,1089,1092,1119,1163,1167,1172,1182,1184,1185,1186,1187,1188,1189,1190,1200,1209,1231,1260,1261,1264,1265,1266,1267,1268,1269,1273,1274,1277],thing:[43,1231],those:[40,41,838,839,967,981,1066,1080,1119],though:43,threshold:[967,1026,1028],through:[40,41],tickbox:43,tile:[288,553,679,967],time:[967,1054,1066,1069,1073,1115,1116,1117,1118,1119,1175,1176,1200,1210,1248,1259,1260,1261,1277],time_chronolog:[1219,1220,1225],time_infer:[1219,1220],timeout:[40,41,42,893,902,903,967,1035,1043,1119],timestep:[1200,1210,1248,1257],timing_fnam:[1219,1220],titl:1231,tmp_dir:967,tmp_dr:[967,1044],to_appli:[40,41],to_clon:[893,1119],to_dev:[40,41,119,282,426,546,671,893],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[893,1119],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1231],to_ivy_modul:[190,806,1231,1237],to_json:[40,41],to_kv_fn:[1200,1211],to_kv_v:[1200,1211],to_list:[40,41,428,679,967],to_multi_dev:[40,41],to_mut:[1163,1165,1172],to_n:[15,40,41,1231],to_nod:1119,to_numpi:[40,41,428,679,967,1231,1273],to_out_fn:[1200,1211],to_out_v:[1200,1211],to_q_fn:[1200,1211],to_q_v:[1200,1211],to_raw:[40,41],to_scalar:[428,679,967],todo:[43,1119],togeth:[40,41,1270,1271],tool:[1231,1274],top_mod:[1260,1261],topic:1277,torch:[43,891,892,1231,1273,1274,1277],torch_concat:1231,torchfcmodel:1273,total:[40,41,42,893,939,1119],total_mem_on_dev:893,total_mem_on_nod:1119,tpu:[893,940,1119],tpu_is_avail:[426,546,671,893,1119],tpye:[943,954],trace:[40,41,967,1019],track:[43,893,1119,1163,1172,1260,1261],track_submod_call_ord:[1260,1261],track_submod_ret:[1260,1261],trail:[1262,1263],train:[1066,1068,1069,1073,1231,1232],trainabl:[1066,1072,1231,1232,1237,1238,1260,1261,1270],trainer:1231,tran:1277,transform:[1200,1208,1209],transpos:[40,41,126,288,428,679,893,924,967,1119,1200,1202,1204,1206,1248,1250,1252,1254],travers:[15,18,19,40,41,1163,1172],treat:[40,41,891,892],tree_depth:1229,tree_height:1225,tri:[40,41],trigonometr:[827,830,1099,1100,1103,1111],trim_kei:[40,41],trust:[1066,1073,1264,1266],truth:[827,834,835,852,871,967,996,1096,1097,1098],try_else_non:967,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[893,1119],tune_dev_alloc:893,tune_dev_split:893,tune_node_alloc:1119,tune_node_split:1119,tune_step:[893,1119],tupl:[15,16,17,18,19,40,41,43,384,385,386,820,821,822,838,839,840,841,842,848,849,850,891,892,967,985,1002,1003,1046,1064,1119,1163,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1177,1182,1184,1185,1186,1187,1188,1189,1190],tutori:43,two:[40,41,838,839,967,970,975,988,1025,1053,1089,1092],type:[15,18,40,41,42,43,59,389,390,426,427,820,821,822,824,825,827,828,829,832,834,836,838,840,841,842,848,849,850,852,871,877,893,905,906,907,908,920,921,925,937,943,947,948,949,953,954,955,956,957,958,959,966,967,968,970,974,980,984,986,996,1000,1001,1003,1012,1019,1031,1032,1033,1038,1052,1062,1065,1066,1072,1077,1099,1107,1119,1225,1229,1231,1239,1241,1242,1244,1245,1247,1260,1261,1274],types_to_iteratively_nest:[40,41,42],uint8:[1082,1084,1088],uint8_img_to_float_img:1082,unchang:[15,16,17,18,19],uncom:43,underli:[827,829],underwai:43,unif:1119,unifi:[40,41,893,922,923,924,925,937,1119,1231],uniform:[40,41,1175,1176,1178,1179,1239,1241,1242,1245,1246],uniformli:[1175,1177,1179],unify_arrai:1119,unify_it:1119,unify_nest:1119,union:[15,18,19,40,41,43,384,385,386,387,389,390,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,845,846,848,849,850,852,871,877,891,892,893,911,916,917,918,919,937,938,943,947,948,949,953,954,955,956,957,958,959,966,967,968,969,970,972,973,974,975,976,978,980,981,982,983,984,985,987,988,989,990,993,994,995,996,998,999,1000,1001,1002,1003,1004,1005,1009,1011,1012,1013,1020,1021,1022,1023,1025,1026,1027,1028,1031,1032,1033,1036,1037,1038,1039,1040,1045,1046,1047,1048,1051,1053,1054,1056,1057,1058,1059,1061,1062,1063,1064,1065,1119,1163,1164,1165,1171,1172],uniqu:[893,902,903,1115,1116,1117,1118,1119,1163,1167],unique_kwarg:1119,unit:[43,893,1099,1100,1102,1119,1192,1193,1194,1195],unitari:[838,839],unless:[967,1031,1033,1065],unlik:[893,1119],unnorm:[1175,1176],unpack:[967,1061],unrol:[1200,1210],unset:1274,unset_debug_mod:44,unset_default_devic:893,unset_default_dtyp:943,unset_default_float_dtyp:943,unset_default_int_dtyp:943,unset_framework:[59,1274],unset_with_grad:1066,unstack:[40,41,126,288,428,553,679,967],until:43,unus:[891,892],updat:[40,41,428,455,456,893,902,967,1017,1039,1040,1066,1068,1069,1071,1073,1074,1075,1115,1116,1117,1119,1163,1168,1169,1173,1174,1200,1210,1231,1232,1237,1238,1264,1265,1266,1267,1268,1269,1274,1277],update_backend:[40,41],update_config:[40,41],update_inference_tim:1225,upper:[40,41,1175,1179],upper_depth:[1260,1261],upstream:43,usabl:[1231,1277],usag:[893,937,1119],use:[40,41,42,43,478,893,902,903,928,940,967,1036,1049,1050,1089,1094,1119,1200,1211,1217,1218,1231,1262,1263,1274,1277],used:[40,41,43,478,893,902,932,935,936,942,943,954,967,1007,1008,1024,1033,1039,1040,1041,1042,1065,1066,1073,1074,1089,1092,1115,1116,1117,1118,1119,1163,1172,1248,1259,1264,1266,1267,1273,1274],used_dev:[893,902],used_mem_on_dev:893,used_mem_on_nod:1119,used_node_str:1119,used_node_strs_dict:1119,useful:[40,41,893,937,1119,1200,1209,1231,1274],user:[1231,1248,1259,1260,1261,1274,1277],uses:1231,using:[40,41,1066,1068,1069,1163,1166,1170,1182,1183,1200,1208,1212,1231,1248,1256,1273,1274,1277],util:[893,926,1119],utility_funct:[848,849,850],v_with_top_v_key_chain:[1260,1261],val:[40,41,428,446,447,448,852,887,967,1015,1016,1017,1041,1042,1229],valid:[848,849,850,943,948,967,1049,1050,1200,1201,1202,1203,1204,1205,1206,1207,1248,1249,1250,1251,1252,1253,1254,1255],valid_dtyp:943,valu:[40,41,428,827,833,834,835,838,839,840,845,846,852,871,893,905,936,937,967,968,970,972,973,981,982,983,985,986,992,996,1002,1003,1004,1005,1020,1022,1023,1026,1028,1035,1036,1037,1038,1039,1040,1041,1042,1043,1059,1062,1063,1064,1066,1070,1073,1082,1088,1096,1097,1098,1099,1108,1109,1110,1115,1116,1117,1119,1163,1167,1168,1169,1173,1174,1175,1178,1179,1182,1184,1186,1200,1211,1212,1217,1218,1225,1248,1259,1262,1263,1264,1266],value_is_nan:967,vanilla:[1115,1117],var_shap:1239,variabl:[15,16,17,18,19,40,41,338,462,591,747,967,977,1015,1016,1017,1018,1019,1052,1066,1069,1070,1071,1072,1073,1074,1075,1077,1080,1115,1116,1117,1118,1200,1211,1217,1218,1237,1238,1239,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271],variable_data:[462,747,1066],varianc:[40,41,1182,1190,1277],varieti:1274,variou:[43,1231],vector:[40,41,471,474,838,839,840,967,983,988,1089,1095,1200,1209,1248,1258],vector_norm:[40,41,96,220,403,522,647,838],vector_to_skew_symmetric_matrix:[166,347,471,600,757,1089],verbos:1276,veri:[43,1231],verifi:43,version:43,via:[1163,1164,1171,1274],view:[1082,1087],vision:1231,visual:1274,volum:[1200,1205],vw_tm1:[1066,1069,1073],wai:[1274,1277],wait:[40,41,42],want:[1231,1274,1277],warn:[59,66,67,68,69,70],warp:[467,468,1082,1083],watch:1273,weight:[1066,1068,1069,1071,1073,1074,1075,1200,1209,1210,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1260,1261,1264,1266,1267],weight_initi:[1248,1249,1250,1251,1252,1253,1254,1255,1257,1258],weights_path:[1260,1261],well:[40,41,967,1011],were:[40,41,1119],what:[43,1231],when:[40,41,42,43,838,839,893,967,979,1050,1063,1119,1231,1260,1261,1274,1277],where:[40,41,43,288,428,679,827,833,838,839,848,849,850,852,877,967,970,978,981,985,998,1013,1020,1031,1064,1163,1164,1171,1175,1176],wherea:43,wherebi:[1163,1172],whether:[15,18,19,40,41,42,848,849,850,891,892,893,911,924,928,932,937,940,942,943,953,957,958,959,966,967,969,975,976,989,992,997,1002,1009,1011,1014,1018,1019,1024,1045,1052,1061,1062,1066,1069,1070,1071,1072,1073,1074,1075,1077,1115,1116,1117,1118,1119,1163,1164,1165,1167,1171,1172,1175,1176,1192,1193,1200,1208,1231,1237,1238,1248,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269],which:[40,41,42,43,478,820,821,822,823,824,825,838,840,841,842,848,849,850,891,892,893,902,903,911,916,917,918,919,922,923,924,925,927,929,933,935,936,937,943,948,953,957,966,967,970,974,984,986,988,989,990,992,999,1003,1004,1005,1006,1012,1013,1021,1022,1023,1030,1031,1032,1033,1034,1036,1039,1040,1047,1051,1061,1063,1065,1066,1069,1070,1071,1073,1074,1075,1077,1079,1080,1082,1084,1089,1092,1099,1104,1119,1163,1167,1168,1169,1173,1174,1175,1176,1177,1178,1179,1182,1184,1185,1186,1187,1188,1189,1190,1192,1197,1200,1211,1212,1231,1237,1238,1248,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1270,1271,1273,1274],whitespac:[40,41,42],whose:[43,827,828,841,842,852,877,967,974,979,1182,1183,1184,1185,1186,1188,1190],why:[1231,1232],width:[1082,1087],wiki:1277,wikipedia:1277,window:[1082,1087,1200,1201,1202,1203,1204,1205,1206,1207,1248,1249,1250,1251,1252,1253,1254,1255],wise:[40,41,43,827,829,830,834,835,852,871,877,967,980,981,996,1000,1001,1026,1028,1038,1066,1069,1071,1073,1075,1096,1097,1098,1099,1100,1102,1103,1104,1107,1108,1109,1110,1111,1113,1192,1193,1194,1195,1196,1197,1198,1199],wish:1274,with_arg_label:[1219,1221,1225,1260,1261],with_array_cach:[1219,1220,1221,1225],with_bia:[1248,1258],with_cal:[967,992],with_default_key_color:[40,41],with_edge_label:[1219,1221,1225,1260,1261],with_entries_as_list:[40,41],with_grad:[1066,1076,1260,1261],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1119,with_output_label:[1219,1221,1225,1260,1261],with_partial_v:[1260,1261],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,428,457,967,1047,1119],with_to_kv_fn:[1248,1259],with_to_out_fn:[1248,1259],with_to_q_fn:[1248,1259],within:[15,18,19,838,839,967,970,1175,1179],without:[40,41,43,967,1035,1037,1043,1163,1165,1274],wonder:1231,word:[15,16,17,967,970,1175,1179,1237,1238],work:[43,1273],worker:[893,902,903,1119],worker_class:[893,902,903,1119],worker_kwarg:1119,would:[43,845,846,1192,1197,1231,1274,1277],wrap:[15,40,41,42,43,426,428,462,467,471,475,476,478,967,979,1066,1080,1231],wrapper:43,write:[40,41,43,1231,1232,1277],written:[43,1231,1277],ws_new:[1066,1069,1071,1073,1074,1075],x1_i:[827,829,834,967,996,1099,1107],x2_i:[827,829,834,967,996,1099,1107],x_feat_dim:[1200,1211],x_i:[827,828,832,836],x_in:[1231,1273],x_inv:[1089,1091],x_max:[428,967,981],x_min:[428,967,981],x_sub:1119,xkk:1277,xkkm1:1277,xkm1km1:1277,xs0:1119,xs_t:1119,year:[1231,1277],yet:[1163,1172,1277],yield:[967,1063],you:[43,1231,1273,1274,1277],your:[1231,1232,1273,1274,1277],your_awesome_project:1274,yourself:[43,1231],yourslef:43,youtub:43,zero:[40,41,77,204,384,503,628,820,838,840,848,849,850,967,985,1031,1033,1039,1040,1064,1065,1066,1068,1069,1073,1074,1200,1208,1231,1239,1248,1249,1250,1251,1252,1253,1254,1255,1256,1258,1264,1265,1266,1267],zero_pad:[288,428,553,679,967],zeros_lik:[126,288,428,553,679,967],zip:1119,zk_e:1277},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","svd","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","svd","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","svd","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","svd","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","svd","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","svd","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":992,"function":[77,80,85,95,99,101,102,103,105,106,204,207,212,219,223,225,226,227,229,230,384,387,392,402,406,408,409,410,412,413,503,506,511,521,525,527,528,529,531,532,628,631,636,646,650,652,653,654,656,657,820,823,827,837,841,843,844,845,847,848],Ones:1244,Using:1274,abs:[289,554,680,968],aco:[768,1100],acosh:[769,1101],activ:[188,371,489,620,798,1192,1234],adam:1265,adam_step:1068,adam_upd:1069,algebra:[96,166,220,347,403,471,522,600,647,757,838],all:[107,231,414,533,658,849],all_equ:969,all_nested_indic:1164,ani:[108,232,415,534,659,850],api:[0,43,75,110,202,234,382,417,501,536,626,661,818],arang:[127,290,429,555,681,970],arg_nam:971,argmax:[128,430,556,682,972],argmin:[129,431,557,683,973],args_to_ivi:16,args_to_n:17,argsort:[104,228,411,530,655,846],arithmet:[1,111,235,418,537,662],arrai:[0,3,43,75,109,110,112,130,202,233,234,236,243,291,382,416,417,419,432,501,535,536,538,558,626,660,661,663,684,818,852,974],array_equ:[292,685,975],arrays_equ:976,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[770,1102],asinh:[86,393,512,637,828],assert_supports_inplac:977,atan2:[772,1104],atan:[771,1103],atanh:[773,1105],attribut:[5,113,237,420,539,664],backend:[43,73],bilinear_resampl:[163,344,468,597,754,1083],binary_cross_entropi:1214,bitwis:[7,114,238,421,540,665],bitwise_and:[87,213,394,513,638,829],broadcast_to:[293,686,978],builder:51,builtin:[109,233,243,416,535,660,852],builtin_ab:[244,853],builtin_add:[245,854],builtin_and:[246,855],builtin_bool:[247,856],builtin_contain:[248,857],builtin_deepcopi:[249,858],builtin_dir:[250,859],builtin_eq:[251,860],builtin_float:[252,861],builtin_floordiv:[253,862],builtin_g:[254,863],builtin_getattr:[255,864],builtin_getattribut:[256,865],builtin_getitem:[257,866],builtin_gt:[258,867],builtin_int:[259,868],builtin_invert:[260,869],builtin_l:[261,870],builtin_lt:[262,542,667,871],builtin_mul:[263,872],builtin_n:[264,873],builtin_neg:[265,874],builtin_or:[266,875],builtin_po:[267,876],builtin_pow:[268,877],builtin_radd:[269,878],builtin_rand:[270,879],builtin_rfloordiv:[271,880],builtin_rmul:[272,881],builtin_ror:[273,882],builtin_rpow:[274,883],builtin_rsub:[275,884],builtin_rtruediv:[276,885],builtin_rxor:[277,886],builtin_setitem:[278,887],builtin_sub:[279,888],builtin_truediv:[280,889],builtin_xor:[281,890],cache_fn:979,cast:[131,294,433,559,687,947],ceil:[295,688,980],choleski:[758,1090],choose_random_framework:61,citat:1231,clear_framework_stack:62,clear_mem_on_dev:[673,909],clip:[296,689,981],clip_matrix_norm:982,clip_vector_norm:983,clone:1134,clone_arrai:1135,clone_it:1136,clone_nest:1137,clonedit:1121,cloneditem:1120,clonednest:1122,closest_valid_dtyp:948,code:1277,comparison:[9,115,239,422,541,666],compil:[297,434,690,891,892,1219],compile_graph:1220,concaten:[132,298,435,560,691,984],constant:[76,203,383,502,627,819],constant_pad:[299,561,692,985],contain:[40,41],container_typ:[693,986],content:1231,contribut:43,conv1d:[194,374,493,810,1201,1249],conv1d_transpos:[195,375,494,811,1202],conv1dtranspos:1250,conv2d:[196,376,495,622,812,1203,1251],conv2d_transpos:[197,377,496,813,1204],conv2dtranspos:1252,conv3d:[198,378,497,623,814,1205,1253],conv3d_transpos:[199,379,498,815,1206],conv3dtranspos:1254,convers:15,convert:[190,806,1237],convert_dtyp:949,copy_arrai:[694,987],copy_nest:1165,core:[118,242,425,545,670,851],cos:[88,395,514,639,830],cosh:[89,396,515,640,774,831,1106],cprint:1276,creat:43,creation:[77,204,384,503,628,820],cross:[300,695,988],cross_entropi:1215,cumprod:[133,301,436,696,989],cumsum:[697,990],current_framework:63,current_framework_str:[698,991],data:[80,84,207,211,387,391,506,510,631,635,823,826],debug_mod:45,debugg:44,default_devic:910,default_dtyp:950,default_float_dtyp:951,default_int_dtyp:952,default_nod:1138,depthwise_conv2d:[200,380,499,624,816,1207],depthwiseconv2d:1255,design:43,dev:[121,284,548,674,911],dev_clon:912,dev_clone_arrai:913,dev_clone_it:914,dev_clone_nest:915,dev_dist:916,dev_dist_arrai:917,dev_dist_it:918,dev_dist_nest:919,dev_from_str:[122,285,549,675,920],dev_to_str:[123,286,550,676,921],dev_unifi:922,dev_unify_arrai:923,dev_unify_it:924,dev_unify_nest:925,dev_util:926,devclonedit:896,devcloneditem:895,devclonednest:897,devdistit:899,devdistitem:898,devdistnest:900,devic:[20,119,282,426,546,671,893],devmapp:902,devmappermultiproc:903,distribute_nest:1139,divid:1107,document:1231,dropout:[1208,1256],dtype:[134,302,437,562,699,943,953],dtype_bit:[135,303,438,563,700,954],dtype_from_str:[136,304,439,564,701,955],dtype_to_str:[137,305,440,565,702,956],ecosystem:52,einops_rearrang:993,einops_reduc:994,einops_repeat:995,einsum:[180,362,481,612,790,1183],elementwis:[85,212,392,511,636,827],equal:[566,703,996],erf:[477,775,1108],execute_with_gradi:[160,339,463,592,748,1070],exist:997,exp:[776,1109],expand_dim:[306,704,998],finfo:[82,209,389,508,633,824],firstlayersiren:1241,flip:[100,224,407,526,651,842,999],float_img_to_uint8_img:1084,floor:[307,705,1000],floormod:[308,706,1001],fomaml_step:1116,fork:43,fourier_encod:1002,framework:59,full:[138,309,441,567,707,1003],func:72,gather:[139,310,442,568,708,1004],gather_nd:[140,311,443,569,709,1005],geglu:1235,gelu:[372,490,799,1193,1236],gener:[22,126,288,428,553,679,967],get_all_arrays_in_memori:1006,get_all_arrays_on_dev:927,get_framework:64,get_min_bas:1007,get_min_denomin:1008,get_num_dim:[710,1009],get_referrers_recurs:1010,global:1222,glorotuniform:1242,gpu_is_avail:[928,1140],gradient:[24,159,338,462,591,747,1066],gradient_descent_upd:1071,gradient_imag:[164,345,469,598,755,1085],graph:1225,gym:53,handler:59,has_nan:1011,helper:1227,ident:[141,312,444,570,711,1012],iinfo:[83,210,390,509,634,825],imag:[26,162,343,467,596,753,1082],index_nest:1166,indices_wher:[142,313,445,712,1013],initi:1239,inplac:[11,116,240,423,543,668],inplace_arrays_support:1014,inplace_decr:[143,314,446,571,713,1015],inplace_incr:[144,315,447,572,714,1016],inplace_upd:[145,316,448,573,715,1017],inplace_variables_support:1018,inv:[759,1091],invalid_dtyp:957,is_arrai:[146,317,449,574,716,1019],is_float_dtyp:958,is_int_dtyp:959,is_vari:[161,340,464,593,749,1072],isfinit:[90,214,397,516,641,832],isinf:[318,575,717,1020],isnan:[91,215,398,517,642,833],ivi:[43,50,51,52,53,54,55,56,57,58,817,1273,1274,1277],ivymodul:[191,807],jax:74,keep:43,lamb:1266,lamb_upd:1073,lar:1267,lars_upd:1074,layer:[193,373,492,621,809,1200,1248],layer_norm:1218,layernorm:1263,leaky_relu:[800,1194],less:[92,216,399,518,643,834],linalg:[28,1089],linear:[96,166,220,347,403,471,522,600,647,757,838,1209,1258],linear_resampl:[147,319,450,576,718,1021],linspac:[148,320,451,577,719,1022],log:[777,1110,1228],log_global_inference_abs_tim:1223,log_global_inference_rel_tim:1224,logic:[30,170,352,475,604,764,1096],logical_and:[353,765,1097],logical_not:[93,217,400,519,644,835],logical_or:[354,766,1098],logspac:[149,321,452,578,720,1023],loss:1213,lstm:1257,lstm_updat:1210,maml_step:1117,manipul:[99,223,406,525,650,841],map:1167,map_nest_at_index:1168,map_nest_at_indic:1169,match_kwarg:1024,math:[32,171,355,476,605,767,1099],matmul:[322,579,721,1025],matrix_norm:[167,348,472,601,760,1092],maximum:[722,1026],mech:54,memori:55,meshgrid:[323,723,1027],meta:[34,1115],method:[95,219,402,521,646,837],minimum:[724,1028],model:56,modul:[1260,1261,1273],multi:1119,multi_head_attent:1211,multi_index_nest:1170,multidevcontain:42,multidevit:906,multidevitem:905,multidevnest:907,multiheadattent:1259,multinodeit:1125,multinodeitem:1124,multinodenest:1126,multinomi:[173,357,479,607,783,1176],multiprocess:[725,1029],mxnet:201,nativ:1273,nest:1163,nested_indices_wher:1171,nested_map:1172,network:1273,next:1231,node:[1119,1141],node_dist:1142,node_dist_arrai:1143,node_dist_it:1144,node_str:1145,node_to_str:1146,node_util:1147,nodedistit:1128,nodedistitem:1127,nodedistnest:1129,nodemapp:1131,nodemappermultiproc:1132,norm:[1217,1262],num_arrays_in_memori:1030,num_arrays_on_dev:929,num_cpu_cor:930,num_gpu:[124,931,1148],numpi:381,nutshel:1231,one_hot:[150,453,580,726,1031],ones:[78,205,385,504,629,821,1032],ones_lik:[151,324,454,581,727,1033],oper:[1,3,7,9,11,13,43,111,112,114,115,116,117,235,236,238,239,240,241,418,419,421,422,423,424,537,538,540,541,543,544,662,663,665,666,668,669],optim:[1264,1268],optimizer_upd:1075,overview:1231,param:1229,percent_used_mem_on_dev:932,percent_used_mem_on_nod:1149,pinv:[349,761,1093],portabl:1277,print_all_arrays_in_memori:1034,print_all_arrays_on_dev:933,profil:[120,283,427,547,672,908,1133],pull:43,queue_timeout:1035,randint:[174,358,608,784,1177],random:[36,172,356,478,606,782,1175],random_crop:1086,random_norm:[175,359,609,785,1178],random_uniform:[176,360,610,786,1179],reduce_max:[181,363,482,613,791,1184],reduce_mean:[182,364,483,614,792,1185],reduce_min:[183,365,484,615,793,1186],reduce_prod:[184,366,485,616,794,1187],reduce_std:[367,1188],reduce_sum:[185,368,486,617,795,1189],reduce_var:[186,369,487,618,796,1190],reduct:[38,179,361,480,611,789,1182],reflect:[13,117,241,424,544,669],relu:[801,1195],repeat:[325,728,1036],reptile_step:1118,request:43,reshap:[729,1037],robot:57,round:[326,730,1038],run:1274,scaled_dot_product_attent:1212,scatter_flat:[152,327,455,582,731,1039],scatter_nd:[153,328,456,583,732,1040],search:[101,225,408,527,652,843],seed:[177,787,1180],sequenti:[1270,1271],set:[102,226,409,528,653,844],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:934,set_default_dtyp:960,set_default_float_dtyp:961,set_default_int_dtyp:962,set_default_nod:1150,set_exception_debug_mod:48,set_framework:65,set_min_bas:1041,set_min_denomin:1042,set_nest_at_index:1173,set_nest_at_indic:1174,set_queue_timeout:1043,set_split_factor:[935,1151],set_tmp_dir:1044,set_with_grad:1076,sgd:1269,shape:[733,1045],shape_to_tupl:1046,show_graph:1221,shuffl:[178,788,1181],sigmoid:[802,1196],signatur:[95,219,402,521,646,837],sin:[778,1111],sinh:[779,1112],siren:1245,softmax:[189,491,803,1197],softplu:[804,1198],sort:[103,227,410,529,654,845],sparse_cross_entropi:1216,split:[154,329,457,584,734,1047],split_factor:[936,1152],split_func_cal:[937,1153],sqrt:[94,218,401,520,645,836],squeez:[155,330,458,585,735,1048],stable_divid:1049,stable_pow:1050,stack:[331,736,1051],stack_imag:[165,346,470,599,756,1087],standard:43,statist:[105,229,412,531,656,847],stop_gradi:[341,465,594,750,1077],str_to_nod:1154,submodul:43,supports_inplac:1052,svd:[97,221,404,523,648,839],swapax:[586,737,1053],tan:[780,1113],tanh:[781,805,1114,1199],tensorflow:500,tile:[332,587,738,1054],tmp_dir:1055,to_dev:[125,287,551,677,938],to_ivi:18,to_ivy_modul:[192,808,1238],to_list:[739,1056],to_n:19,to_nod:1155,to_numpi:[740,1057],to_scalar:[741,1058],torch:625,total_mem_on_dev:939,total_mem_on_nod:1156,tpu_is_avail:[552,678,940,1157],train:1273,trainabl:1273,transpos:[156,333,459,742,1059],tree:1231,try_else_non:1060,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,207,211,387,391,506,510,631,635,823,826],uint8_img_to_float_img:1088,unifi:1158,unify_arrai:1159,unify_it:1160,unify_nest:1161,unset_debug_mod:49,unset_default_devic:941,unset_default_dtyp:963,unset_default_float_dtyp:964,unset_default_int_dtyp:965,unset_framework:71,unset_with_grad:1078,unstack:[157,334,460,588,743,1061],updat:43,used_mem_on_dev:942,used_mem_on_nod:1162,util:[106,230,413,532,657,848],valid_dtyp:966,value_is_nan:1062,variabl:[342,466,595,751,1079],variable_data:[752,1080],vector_norm:[98,222,405,524,649,840],vector_to_skew_symmetric_matrix:[169,351,474,603,763,1095],verbos:1275,vision:58,where:[335,744,1063,1231],why:1277,with_grad:1081,wrapper:72,write:1274,your:43,zero:[79,206,386,505,630,822,1247],zero_pad:[336,589,745,1064],zeros_lik:[158,337,461,590,746,1065]}})