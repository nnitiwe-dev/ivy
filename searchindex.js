Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/svd","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/svd","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/argsort","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/argsort","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/svd.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/svd.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/argsort.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/argsort.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[771,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[366,0,0,"-"],creation_functions:[367,0,0,"-"],data_type_functions:[368,0,0,"-"],data_types:[372,0,0,"-"],elementwise_functions:[373,0,0,"-"],function_and_method_signatures:[375,0,0,"-"],linear_algebra_extension:[376,0,0,"-"],linear_algebra_functions:[377,0,0,"-"],manipulation_functions:[378,0,0,"-"],searching_functions:[379,0,0,"-"],set_functions:[380,0,0,"-"],sorting_functions:[381,0,0,"-"],statistical_functions:[382,0,0,"-"]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[368,1,1,""],finfo:[370,2,1,""],iinfo:[371,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[368,3,1,""],bits:[368,3,1,""],eps:[368,3,1,""],max:[368,3,1,""],min:[368,3,1,""],smallest_normal:[368,3,1,""]},"ivy.functional.backends.numpy.array_api.elementwise_functions":{isfinite:[374,2,1,""]},"ivy.functional.ivy":{array_api:[772,0,0,"-"],core:[791,0,0,"-"],nn:[1138,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[773,0,0,"-"],creation_functions:[774,0,0,"-"],data_type_functions:[775,0,0,"-"],data_types:[778,0,0,"-"],elementwise_functions:[779,0,0,"-"],function_and_method_signatures:[781,0,0,"-"],linear_algebra_extension:[782,0,0,"-"],linear_algebra_functions:[783,0,0,"-"],manipulation_functions:[784,0,0,"-"],searching_functions:[785,0,0,"-"],set_functions:[786,0,0,"-"],sorting_functions:[787,0,0,"-"],statistical_functions:[788,0,0,"-"],utility_functions:[789,0,0,"-"]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[776,2,1,""],iinfo:[777,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{isfinite:[780,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[790,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[792,0,0,"-"],compilation:[831,0,0,"-"],device:[833,0,0,"-"],dtype:[883,0,0,"-"],general:[907,0,0,"-"],gradients:[1009,0,0,"-"],image:[1025,0,0,"-"],linalg:[1032,0,0,"-"],logic:[1040,0,0,"-"],math:[1044,0,0,"-"],meta:[1062,0,0,"-"],multi_node:[1066,0,0,"-"],nest:[1110,0,0,"-"],random:[1122,0,0,"-"],reductions:[1129,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[793,2,1,""],builtin_add:[794,2,1,""],builtin_and:[795,2,1,""],builtin_bool:[796,2,1,""],builtin_contains:[797,2,1,""],builtin_deepcopy:[798,2,1,""],builtin_dir:[799,2,1,""],builtin_eq:[800,2,1,""],builtin_float:[801,2,1,""],builtin_floordiv:[802,2,1,""],builtin_ge:[803,2,1,""],builtin_getattr:[804,2,1,""],builtin_getattribute:[805,2,1,""],builtin_getitem:[806,2,1,""],builtin_gt:[807,2,1,""],builtin_int:[808,2,1,""],builtin_invert:[809,2,1,""],builtin_le:[810,2,1,""],builtin_lt:[811,2,1,""],builtin_mul:[812,2,1,""],builtin_ne:[813,2,1,""],builtin_neg:[814,2,1,""],builtin_or:[815,2,1,""],builtin_pos:[816,2,1,""],builtin_pow:[817,2,1,""],builtin_radd:[818,2,1,""],builtin_rand:[819,2,1,""],builtin_rfloordiv:[820,2,1,""],builtin_rmul:[821,2,1,""],builtin_ror:[822,2,1,""],builtin_rpow:[823,2,1,""],builtin_rsub:[824,2,1,""],builtin_rtruediv:[825,2,1,""],builtin_rxor:[826,2,1,""],builtin_setitem:[827,2,1,""],builtin_sub:[828,2,1,""],builtin_truediv:[829,2,1,""],builtin_xor:[830,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[832,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[833,1,1,""],DevClonedItem:[835,1,1,""],DevClonedIter:[836,1,1,""],DevClonedNest:[837,1,1,""],DevDistItem:[838,1,1,""],DevDistIter:[839,1,1,""],DevDistNest:[840,1,1,""],DevManager:[833,1,1,""],DevMapper:[842,1,1,""],DevMapperMultiProc:[843,1,1,""],MultiDev:[833,1,1,""],MultiDevItem:[845,1,1,""],MultiDevIter:[846,1,1,""],MultiDevNest:[847,1,1,""],Profiler:[848,1,1,""],clear_mem_on_dev:[849,2,1,""],default_device:[850,2,1,""],dev:[851,2,1,""],dev_clone:[852,2,1,""],dev_clone_array:[853,2,1,""],dev_clone_iter:[854,2,1,""],dev_clone_nest:[855,2,1,""],dev_dist:[856,2,1,""],dev_dist_array:[857,2,1,""],dev_dist_iter:[858,2,1,""],dev_dist_nest:[859,2,1,""],dev_from_str:[860,2,1,""],dev_to_str:[861,2,1,""],dev_unify:[862,2,1,""],dev_unify_array:[863,2,1,""],dev_unify_iter:[864,2,1,""],dev_unify_nest:[865,2,1,""],dev_util:[866,2,1,""],get_all_arrays_on_dev:[867,2,1,""],gpu_is_available:[868,2,1,""],num_arrays_on_dev:[869,2,1,""],num_cpu_cores:[870,2,1,""],num_gpus:[871,2,1,""],percent_used_mem_on_dev:[872,2,1,""],print_all_arrays_on_dev:[873,2,1,""],set_default_device:[874,2,1,""],set_split_factor:[875,2,1,""],split_factor:[876,2,1,""],split_func_call:[877,2,1,""],to_dev:[878,2,1,""],total_mem_on_dev:[879,2,1,""],tpu_is_available:[880,2,1,""],unset_default_device:[881,2,1,""],used_mem_on_dev:[882,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[833,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[833,3,1,""],da_tune_step:[833,3,1,""],dim_size:[833,3,1,""],ds_tune_step:[833,3,1,""],map:[833,3,1,""],repeated_config_check:[833,3,1,""],tune_step:[833,3,1,""],tuned:[833,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[842,3,1,""],map:[842,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[843,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[833,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[845,3,1,""],items:[845,3,1,""],keys:[845,3,1,""],shape:[845,3,1,""],values:[845,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[846,3,1,""],at_dev:[846,3,1,""],at_devs:[846,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[847,3,1,""],at_dev:[847,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[848,3,1,""],start:[848,3,1,""],stop:[848,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[883,1,1,""],DefaultFloatDtype:[883,1,1,""],DefaultIntDtype:[883,1,1,""],astype:[883,2,1,""],cast:[887,2,1,""],closest_valid_dtype:[888,2,1,""],convert_dtype:[889,2,1,""],default_dtype:[890,2,1,""],default_float_dtype:[891,2,1,""],default_int_dtype:[892,2,1,""],dtype:[893,2,1,""],dtype_bits:[894,2,1,""],dtype_from_str:[895,2,1,""],dtype_to_str:[896,2,1,""],invalid_dtype:[897,2,1,""],is_float_dtype:[898,2,1,""],is_int_dtype:[899,2,1,""],set_default_dtype:[900,2,1,""],set_default_float_dtype:[901,2,1,""],set_default_int_dtype:[902,2,1,""],unset_default_dtype:[903,2,1,""],unset_default_float_dtype:[904,2,1,""],unset_default_int_dtype:[905,2,1,""],valid_dtype:[906,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[883,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[883,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[883,3,1,""]},"ivy.functional.ivy.core.general":{"default":[933,2,1,""],abs:[908,2,1,""],all_equal:[909,2,1,""],arange:[910,2,1,""],arg_names:[911,2,1,""],argmax:[912,2,1,""],argmin:[913,2,1,""],argsort:[914,2,1,""],array:[915,2,1,""],array_equal:[916,2,1,""],arrays_equal:[917,2,1,""],asarray:[907,2,1,""],assert_supports_inplace:[918,2,1,""],broadcast_to:[919,2,1,""],cache_fn:[920,2,1,""],ceil:[921,2,1,""],clip:[922,2,1,""],clip_matrix_norm:[923,2,1,""],clip_vector_norm:[924,2,1,""],concatenate:[925,2,1,""],constant_pad:[926,2,1,""],container_types:[927,2,1,""],copy_array:[928,2,1,""],cross:[929,2,1,""],cumprod:[930,2,1,""],cumsum:[931,2,1,""],current_framework_str:[932,2,1,""],einops_rearrange:[934,2,1,""],einops_reduce:[935,2,1,""],einops_repeat:[936,2,1,""],equal:[937,2,1,""],exists:[938,2,1,""],expand_dims:[939,2,1,""],flip:[940,2,1,""],floor:[941,2,1,""],floormod:[942,2,1,""],fourier_encode:[943,2,1,""],full:[944,2,1,""],gather:[945,2,1,""],gather_nd:[946,2,1,""],get_all_arrays_in_memory:[947,2,1,""],get_min_base:[948,2,1,""],get_min_denominator:[949,2,1,""],get_num_dims:[950,2,1,""],get_referrers_recursive:[951,2,1,""],has_nans:[952,2,1,""],identity:[953,2,1,""],indices_where:[954,2,1,""],inplace_arrays_supported:[955,2,1,""],inplace_decrement:[956,2,1,""],inplace_increment:[957,2,1,""],inplace_update:[958,2,1,""],inplace_variables_supported:[959,2,1,""],is_array:[960,2,1,""],isinf:[961,2,1,""],isnan:[962,2,1,""],linear_resample:[963,2,1,""],linspace:[964,2,1,""],logspace:[965,2,1,""],match_kwargs:[966,2,1,""],matmul:[967,2,1,""],maximum:[968,2,1,""],meshgrid:[969,2,1,""],minimum:[970,2,1,""],multiprocessing:[971,2,1,""],num_arrays_in_memory:[972,2,1,""],one_hot:[973,2,1,""],ones:[974,2,1,""],ones_like:[975,2,1,""],print_all_arrays_in_memory:[976,2,1,""],queue_timeout:[977,2,1,""],repeat:[978,2,1,""],reshape:[979,2,1,""],round:[980,2,1,""],scatter_flat:[981,2,1,""],scatter_nd:[982,2,1,""],set_min_base:[983,2,1,""],set_min_denominator:[984,2,1,""],set_queue_timeout:[985,2,1,""],set_tmp_dir:[986,2,1,""],shape:[987,2,1,""],shape_to_tuple:[988,2,1,""],split:[989,2,1,""],squeeze:[990,2,1,""],stable_divide:[991,2,1,""],stable_pow:[992,2,1,""],stack:[993,2,1,""],supports_inplace:[994,2,1,""],swapaxes:[995,2,1,""],tile:[996,2,1,""],tmp_dir:[997,2,1,""],to_list:[998,2,1,""],to_numpy:[999,2,1,""],to_scalar:[1000,2,1,""],transpose:[1001,2,1,""],try_else_none:[1002,2,1,""],unstack:[1003,2,1,""],value_is_nan:[1004,2,1,""],where:[1005,2,1,""],zero_pad:[1006,2,1,""],zeros:[1007,2,1,""],zeros_like:[1008,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1009,1,1,""],adam_step:[1011,2,1,""],adam_update:[1012,2,1,""],execute_with_gradients:[1013,2,1,""],gradient_descent_update:[1014,2,1,""],is_variable:[1015,2,1,""],lamb_update:[1016,2,1,""],lars_update:[1017,2,1,""],optimizer_update:[1018,2,1,""],set_with_grads:[1019,2,1,""],stop_gradient:[1020,2,1,""],unset_with_grads:[1021,2,1,""],variable:[1022,2,1,""],variable_data:[1023,2,1,""],with_grads:[1024,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1009,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1026,2,1,""],float_img_to_uint8_img:[1027,2,1,""],gradient_image:[1028,2,1,""],random_crop:[1029,2,1,""],stack_images:[1030,2,1,""],uint8_img_to_float_img:[1031,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1033,2,1,""],inv:[1034,2,1,""],matrix_norm:[1035,2,1,""],pinv:[1036,2,1,""],svd:[1037,2,1,""],vector_norm:[1038,2,1,""],vector_to_skew_symmetric_matrix:[1039,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1041,2,1,""],logical_not:[1042,2,1,""],logical_or:[1043,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1045,2,1,""],acosh:[1046,2,1,""],asin:[1047,2,1,""],asinh:[1048,2,1,""],atan2:[1050,2,1,""],atan:[1049,2,1,""],atanh:[1051,2,1,""],cos:[1052,2,1,""],cosh:[1053,2,1,""],divide:[1054,2,1,""],erf:[1055,2,1,""],exp:[1056,2,1,""],log:[1057,2,1,""],sin:[1058,2,1,""],sinh:[1059,2,1,""],tan:[1060,2,1,""],tanh:[1061,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1063,2,1,""],maml_step:[1064,2,1,""],reptile_step:[1065,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1066,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1111,2,1,""],copy_nest:[1112,2,1,""],index_nest:[1113,2,1,""],map:[1114,2,1,""],map_nest_at_index:[1115,2,1,""],map_nest_at_indices:[1116,2,1,""],multi_index_nest:[1117,2,1,""],nested_indices_where:[1118,2,1,""],nested_map:[1119,2,1,""],set_nest_at_index:[1120,2,1,""],set_nest_at_indices:[1121,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1123,2,1,""],randint:[1124,2,1,""],random_normal:[1125,2,1,""],random_uniform:[1126,2,1,""],seed:[1127,2,1,""],shuffle:[1128,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1130,2,1,""],reduce_max:[1131,2,1,""],reduce_mean:[1132,2,1,""],reduce_min:[1133,2,1,""],reduce_prod:[1134,2,1,""],reduce_std:[1135,2,1,""],reduce_sum:[1136,2,1,""],reduce_var:[1137,2,1,""]},"ivy.functional.ivy.nn":{activations:[1139,0,0,"-"],layers:[1147,0,0,"-"],losses:[1160,0,0,"-"],norms:[1164,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1140,2,1,""],leaky_relu:[1141,2,1,""],relu:[1142,2,1,""],sigmoid:[1143,2,1,""],softmax:[1144,2,1,""],softplus:[1145,2,1,""],tanh:[1146,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1148,2,1,""],conv1d_transpose:[1149,2,1,""],conv2d:[1150,2,1,""],conv2d_transpose:[1151,2,1,""],conv3d:[1152,2,1,""],conv3d_transpose:[1153,2,1,""],depthwise_conv2d:[1154,2,1,""],dropout:[1155,2,1,""],linear:[1156,2,1,""],lstm_update:[1157,2,1,""],multi_head_attention:[1158,2,1,""],scaled_dot_product_attention:[1159,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1161,2,1,""],cross_entropy:[1162,2,1,""],sparse_cross_entropy:[1163,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1165,2,1,""]},"ivy.graph_compiler":{compiler:[1166,0,0,"-"],globals:[1169,0,0,"-"],graph:[1172,0,0,"-"],helpers:[1174,0,0,"-"],op_logging:[1175,0,0,"-"],param:[1176,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1167,2,1,""],show_graph:[1168,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1170,2,1,""],log_global_inference_rel_times:[1171,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1172,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1172,3,1,""],add_fn_to_dict:[1172,3,1,""],add_param:[1172,3,1,""],compiled:[1172,3,1,""],connect:[1172,3,1,""],debug_info:[1172,3,1,""],get_param:[1172,3,1,""],get_param_recursive:[1172,3,1,""],include_generators:[1172,3,1,""],increment_param_count:[1172,3,1,""],log_all_ops:[1172,3,1,""],params_all_empty:[1172,3,1,""],save_debug_info:[1172,3,1,""],set_param:[1172,3,1,""],show:[1172,3,1,""],show_debug_info:[1172,3,1,""],update_inference_times:[1172,3,1,""],with_array_caching:[1172,3,1,""]},"ivy.graph_compiler.param":{Param:[1176,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1176,3,1,""],count:[1176,3,1,""],depth:[1176,3,1,""],get:[1176,3,1,""],is_var:[1176,3,1,""],ptype:[1176,3,1,""],set:[1176,3,1,""],set_count:[1176,3,1,""],shape:[1176,3,1,""]},"ivy.stateful":{activations:[1181,0,0,"-"],converters:[1184,0,0,"-"],initializers:[1186,0,0,"-"],layers:[1195,0,0,"-"],module:[1207,0,0,"-"],norms:[1209,0,0,"-"],optimizers:[1211,0,0,"-"],sequential:[1217,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1182,1,1,""],GELU:[1183,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1182,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1183,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1185,2,1,""]},"ivy.stateful.initializers":{Constant:[1186,1,1,""],FirstLayerSiren:[1188,1,1,""],GlorotUniform:[1189,1,1,""],KaimingNormal:[1186,1,1,""],Ones:[1191,1,1,""],Siren:[1192,1,1,""],Uniform:[1186,1,1,""],Zeros:[1194,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1186,3,1,""],create_variables:[1186,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1188,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1189,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1186,3,1,""],create_variables:[1186,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1191,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1192,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1186,3,1,""],create_variables:[1186,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1194,3,1,""]},"ivy.stateful.layers":{Conv1D:[1196,1,1,""],Conv1DTranspose:[1197,1,1,""],Conv2D:[1198,1,1,""],Conv2DTranspose:[1199,1,1,""],Conv3D:[1200,1,1,""],Conv3DTranspose:[1201,1,1,""],DepthwiseConv2D:[1202,1,1,""],Dropout:[1203,1,1,""],LSTM:[1204,1,1,""],Linear:[1205,1,1,""],MultiHeadAttention:[1206,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1196,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1197,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1198,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1199,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1200,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1201,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1202,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1203,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1204,3,1,""],get_initial_state:[1204,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1205,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1206,3,1,""]},"ivy.stateful.module":{Module:[1208,1,1,""]},"ivy.stateful.module.Module":{__init__:[1208,3,1,""],build:[1208,3,1,""],build_mode:[1208,3,1,""],built:[1208,3,1,""],check_submod_rets:[1208,3,1,""],compile_graph:[1208,3,1,""],compile_on_next_step:[1208,3,1,""],get_mod_key:[1208,3,1,""],mod_depth:[1208,3,1,""],mod_height:[1208,3,1,""],mod_with_top_mod_key_chain:[1208,3,1,""],save_weights:[1208,3,1,""],show_graph:[1208,3,1,""],show_mod_in_top_mod:[1208,3,1,""],show_structure:[1208,3,1,""],show_v_in_top_v:[1208,3,1,""],sub_mods:[1208,3,1,""],track_submod_call_order:[1208,3,1,""],track_submod_rets:[1208,3,1,""],v_with_top_v_key_chains:[1208,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1210,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1210,3,1,""]},"ivy.stateful.optimizers":{Adam:[1212,1,1,""],LAMB:[1213,1,1,""],LARS:[1214,1,1,""],Optimizer:[1215,1,1,""],SGD:[1216,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1212,3,1,""],set_state:[1212,3,1,""],state:[1212,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1213,3,1,""],set_state:[1213,3,1,""],state:[1213,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1214,3,1,""],set_state:[1214,3,1,""],state:[1214,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1215,3,1,""],compile_graph:[1215,3,1,""],compile_on_next_step:[1215,3,1,""],set_state:[1215,3,1,""],show_graph:[1215,3,1,""],step:[1215,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1216,3,1,""],set_state:[1216,3,1,""],state:[1216,3,1,""]},"ivy.stateful.sequential":{Sequential:[1218,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1218,3,1,""]},"ivy.verbosity":{cprint:[1223,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1222,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1211,1212,1213],"02886":1178,"100":[1066,1178,1220],"2021":1178,"2102":1178,"360":[1044,1052,1058,1060],"754":[775,776],"999":[1009,1011,1012,1016,1211,1212,1213],"abstract":[833,848,1178,1211,1215],"boolean":[40,41,833,868,880,883,897,906,907,909,916,917,952,954,955,959,960,961,962,994,1004,1009,1015,1040,1041,1042,1043,1062,1063,1064,1066],"break":43,"case":[15,18,19,40,41,42,43,833,872,879,882,907,910,979,981,982,1032,1035,1038,1066,1110,1113,1117,1178,1195,1206,1207,1208,1211,1215,1224],"catch":[907,933],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,368,775,777,833,835,836,837,838,839,840,842,843,845,846,847,848,860,861,883,907,911,966,974,1009,1023,1066,1110,1112,1119,1160,1162,1163,1172,1176,1178,1181,1182,1183,1184,1185,1186,1188,1189,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1224],"default":[15,18,19,40,41,42,43,789,790,831,832,833,842,843,850,851,855,856,857,858,859,862,863,864,865,872,875,876,877,882,883,890,891,892,893,907,909,910,912,913,914,923,924,925,926,929,930,931,940,943,944,945,950,952,953,963,965,966,969,971,974,977,978,981,982,985,987,989,991,992,1001,1003,1004,1007,1009,1012,1014,1015,1016,1017,1018,1020,1024,1032,1035,1038,1062,1063,1064,1065,1066,1110,1111,1112,1114,1118,1119,1122,1123,1125,1126,1129,1131,1132,1133,1134,1135,1136,1137,1139,1140,1144,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218],"final":[40,41,907,943,964,965,1066,1195,1206,1221],"float":[40,41,42,43,775,776,792,817,833,842,843,866,872,875,879,882,883,891,898,907,910,923,924,926,943,944,948,949,965,983,984,985,991,992,1009,1011,1012,1014,1016,1017,1018,1025,1027,1031,1044,1054,1062,1063,1064,1065,1066,1122,1125,1126,1139,1141,1147,1155,1158,1159,1160,1161,1162,1163,1164,1165,1195,1203,1206,1209,1210,1211,1212,1213,1214,1215,1216],"function":[15,40,41,43,370,371,374,776,777,780,790,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,838,839,840,842,843,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1178,1181,1182,1183,1211,1214,1215,1216,1220,1221,1224],"import":[43,1178,1221,1224],"int":[40,41,42,43,775,776,777,789,790,792,817,831,832,833,855,856,857,858,859,862,863,864,865,870,871,877,883,892,894,899,907,912,913,914,919,925,926,930,931,934,935,936,939,940,943,944,945,950,953,963,964,965,973,974,978,979,981,982,987,988,989,990,993,995,996,1001,1003,1006,1007,1009,1011,1012,1016,1025,1029,1030,1032,1035,1038,1062,1063,1064,1065,1066,1110,1119,1122,1123,1124,1126,1127,1129,1131,1132,1133,1134,1135,1136,1137,1139,1144,1147,1148,1149,1150,1151,1152,1153,1154,1158,1160,1162,1163,1164,1165,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1209,1210],"long":[1147,1157],"new":[40,41,43,883,887,907,908,919,934,935,936,939,943,944,945,946,974,979,981,982,983,984,991,992,993,1007,1009,1012,1014,1016,1017,1018,1025,1027,1029,1031,1044,1046,1048,1051,1053,1059,1061,1066,1110,1120,1121,1122,1123,1164,1165,1178,1184,1185,1195,1205,1209,1210,1211,1212,1213,1214,1215,1216,1221,1224],"public":[907,927],"return":[15,16,17,18,19,40,41,42,43,775,776,777,779,780,789,790,792,817,831,832,833,842,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,868,869,871,872,876,877,878,879,880,882,883,887,888,889,890,891,892,893,894,895,896,897,898,899,906,907,908,909,910,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,950,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,978,979,980,981,982,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1011,1012,1013,1014,1015,1016,1017,1018,1020,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1110,1111,1112,1114,1118,1119,1122,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1178,1184,1185,1195,1204,1205,1211,1215,1220,1221,1224],"short":[1147,1157,1178,1224],"static":[40,41,831,832],"super":1066,"true":[40,41,42,779,780,789,790,831,832,833,907,909,918,920,938,943,952,954,1004,1005,1009,1012,1014,1015,1016,1017,1018,1020,1032,1035,1038,1062,1063,1064,1065,1066,1110,1111,1118,1122,1123,1129,1131,1132,1133,1134,1135,1136,1137,1139,1140,1147,1155,1160,1161,1162,1163,1166,1167,1168,1172,1195,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],"try":[40,41,907,1002,1066],"var":[40,41,1062,1063,1064,1224],"while":[40,41,42,1066],AND:[789,790,1040,1041],But:1224,For:[43,907,910,922,993,1009,1015,1023,1044,1045,1178,1184,1185,1221,1224],Its:[1044,1049],NOT:[1040,1042],One:[40,41,907,935,979,1122,1124,1224],Ones:[1178,1186],Such:[907,927],That:1221,The:[15,16,17,18,19,40,41,42,43,779,780,789,790,792,817,831,832,833,842,843,849,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,872,875,876,877,878,879,882,883,887,888,889,894,895,896,897,906,907,910,914,915,916,919,920,923,924,925,926,928,929,932,933,937,940,943,945,946,953,956,957,958,960,963,965,967,969,971,974,975,978,979,981,982,983,984,985,988,989,990,991,992,993,996,1004,1007,1008,1009,1011,1012,1014,1016,1017,1018,1020,1023,1025,1027,1029,1031,1032,1035,1037,1044,1045,1047,1049,1052,1054,1055,1056,1057,1058,1060,1062,1063,1064,1065,1066,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1125,1126,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1178,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1221,1224],There:[43,1178,1221],These:[43,1178],Used:[1110,1111,1118,1207,1208],Using:[1178,1179,1224],With:[40,41,1032,1035,1038,1129,1131,1132,1133,1134,1135,1136,1137,1178,1220,1224],__array__:[907,915],__call__:[1195,1206,1207,1208],__del__:1066,__dict__:[1066,1221],__enter__:1066,__exit__:1066,__getitem__:1066,__getstate__:1066,__init__:[40,41,42,43,59,60,79,195,368,369,477,591,833,834,841,842,843,844,845,846,847,848,883,884,885,886,1009,1010,1066,1070,1077,1172,1173,1176,1177,1178,1181,1182,1183,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1224],__iter__:1066,__len__:1066,__next__:1066,__pow__:43,__repr__:1066,_assign_vari:1220,_axi:1066,_base:[1110,1111,1118],_compute_node_da_ratio:1066,_compute_node_strs_da:1066,_concat_unify_arrai:1066,_counter:1066,_cur_framework:[43,1066],_da_direct:1066,_da_directions_flip:1066,_da_step_tim:1066,_da_tim:1066,_da_tune_count:1066,_data:1066,_delta_da_dim_s:1066,_delta_sf:1066,_dict:1066,_dim_siz:1066,_first_da_tune_step:1066,_first_ns_tune_step:1066,_fn:1066,_forward:[1178,1220],_get_kalman_param:1224,_get_prior:1224,_get_some_model:1224,_handle_flat_arrays_in_out:43,_index:[1110,1111,1118],_input_queu:1066,_length:1066,_max_depth:1066,_max_node_dim_step_ratio:1066,_max_node_dim_step_s:1066,_max_split_factor_step_s:1066,_mean_unify_arrai:1066,_min_bas:[907,992,1164,1165,1209,1210],_min_denomin:[907,991],_min_node_dim_s:1066,_min_sf_tune_step:1066,_min_unit_node_tune_step:1066,_model:1224,_native_wrapp:43,_node_mapp:1066,_node_percent_mem:1066,_node_str:1066,_node_str_da_ratio:1066,_node_strs_da:1066,_node_strs_kei:1066,_node_strs_n:1066,_node_util:1066,_ns_step_tim:1066,_ns_time:1066,_ns_tune_count:1066,_num_nod:1066,_num_work:1066,_observed_config:1066,_output_queu:1066,_paramet:1220,_percent_mem_inc_per_sf:1066,_percent_mem_inc_per_unit_da_dim:1066,_percent_util_inc_per_unit_da_dim:1066,_ret_fn:1066,_safety_factor:1066,_save_dir:1066,_shift_da_split:1066,_shift_n:1066,_slice:1066,_step:[1211,1215],_sum_unify_arrai:1066,_timeout:1066,_tune:1066,_tune_da:1066,_tune_n:1066,_tune_step:1066,_unit_da_tune_count:1066,_unroll_step:1224,_with_node_mappig:1066,_worker:1066,_worker_class:1066,_worker_fn:1066,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,833,842,848,1066,1207,1208,1211,1215],abil:1178,abl:[40,41],about:[775,776,777],abov:[43,1122,1124],above_height:[40,41],abs:[266,510,625,907,1066],absolut:[40,41,907,908],abstractmethod:1066,accept:[15,43,1178],access:[40,41,1221],accord:[40,41,775,776,907,926,945,981,982,1001,1006],accordingli:[789,790],accur:[59,368,833,845,846,847,848,883,1009,1172,1176,1186,1188,1189,1191,1192,1194],aco:[719,1044],acosh:[719,1044],across:[40,41,833,842,843,852,853,855,856,857,858,859,865,875,876,907,912,913,916,917,1066,1110,1114],activ:[1140,1141,1142,1143,1144,1145,1146,1178,1182,1183],actual:1221,adam:[1009,1011,1012,1016,1178,1211,1213,1220],adam_step:1009,adam_upd:1009,adapt:[1009,1017,1211,1214],add:[40,41,43,1066,1160,1161,1162,1163,1164,1165,1178,1209,1210,1221],add_fn_to_dict:1172,add_param:1172,added:[43,907,991,992,1217,1218],adding:[907,919],addit:[40,41,43,907,934,935,936,1164,1165,1195,1205],adher:43,adjac:[907,910],adopt:[907,927],affect:[907,910],affin:[1209,1210],after:[907,963,1009,1012,1013,1014,1016,1017,1018,1025,1026,1164,1165,1211,1212,1213,1214,1215,1216,1224],after_1:[907,926,1006],after_n:[907,926,1006],again:43,against:[40,41,1032,1035,1038,1129,1131,1132,1133,1134,1135,1136,1137],agnost:[43,1178,1220,1221],aim:1224,algebra:1032,algorithm:[1147,1148,1149,1150,1151,1152,1153,1154,1195,1196,1197,1198,1199,1200,1201,1202,1224],align:[40,41,43,907,919],aliv:[833,867,869,873,907,947,972,976],all:[15,16,17,18,19,40,41,43,93,209,383,491,605,789,831,832,833,842,867,873,907,908,909,916,917,927,940,947,953,976,990,1062,1063,1064,1065,1066,1110,1111,1112,1118,1119,1122,1123,1126,1129,1131,1132,1133,1134,1135,1136,1137,1147,1157,1178,1221,1224],all_depth:[40,41],all_equ:907,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1110,all_tru:[40,41],alloc:[833,1066],allow:[907,964,965,966,1207,1208],allow_dupl:[907,966],alon:[833,872,882,1066,1178],along:[40,41,43,789,790,833,856,857,858,859,862,863,864,865,877,907,914,925,930,931,940,945,963,964,965,978,989,993,996,1003,1032,1035,1038,1062,1063,1064,1065,1066,1122,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137],alongsid:[1220,1221],alpha:[1139,1141],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,833,1066],also:[40,41,43,907,910,1009,1012,1062,1063,1064,1065,1110,1111,1112,1118,1119,1147,1156,1195,1205,1220],altern:1220,alwai:[40,41,43,1009,1015,1020],among:[40,41],amount:[833,879,1066,1178],angl:[1044,1045,1050],ani:[15,16,17,18,19,40,41,43,831,832,833,835,838,842,843,845,854,855,858,859,864,907,909,910,915,933,934,935,936,937,938,952,960,966,991,992,1009,1013,1066,1110,1111,1114,1118,1119,1120,1121,1122,1126,1178,1184,1185,1207,1208,1220,1221,1224],anoth:[40,41,883,889,1178],another_backend:43,anyth:[43,1224],anywai:43,apart:43,api:[1178,1179],appear:[907,939],append:[40,41,1066],appli:[15,18,19,40,41,907,934,935,936,1009,1016,1017,1032,1037,1040,1041,1042,1043,1062,1063,1064,1110,1114,1117,1119,1139,1140,1141,1142,1143,1144,1145,1146,1147,1156,1158,1159,1164,1165,1178,1181,1182,1183,1209,1210],applic:[1110,1114,1119,1147,1158,1159,1178,1224],approxim:[43,792,817,1139,1140],arang:[112,266,397,510,625,907,964,965],arbitrari:[40,41,833,862,863,865,1066],arc:[1044,1050],arcco:[1044,1045],arctan:[1044,1049],area:1178,arg:[15,16,17,40,41,43,59,63,833,842,855,859,865,877,907,934,935,936,982,1066,1166,1167,1168,1172,1184,1185,1207,1208],arg_nam:907,arg_stateful_idx:[1166,1167,1168,1172,1207,1208],argmax:[112,397,510,625,907],argmin:[112,397,510,625,907],args_clon:1066,args_dist:1066,args_to_ivi:[15,1178],args_to_n:[15,1178],args_uni:1066,argsort:[625,907],argument:[15,16,17,18,19,40,41,42,43,59,63,831,832,833,842,843,855,859,865,907,910,911,920,933,966,982,1044,1045,1066,1110,1114,1184,1185,1207,1208],aris:[1178,1224],arithmet:[43,1129,1132,1135,1137],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,112,266,397,510,625,775,776,777,779,780,789,790,817,833,851,852,853,856,857,858,859,862,863,864,865,867,869,873,877,878,883,887,893,898,899,907,908,909,910,912,913,914,916,917,918,919,921,922,923,924,925,926,928,929,930,931,934,935,936,937,939,940,941,942,943,944,945,946,947,950,952,953,954,955,956,957,958,960,961,962,963,964,965,967,968,969,970,972,973,974,975,976,978,979,980,981,982,987,989,990,993,994,995,996,998,999,1000,1001,1003,1004,1005,1006,1007,1008,1009,1011,1012,1015,1016,1020,1022,1023,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1066,1110,1112,1119,1122,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1178,1179,1195,1203,1204,1206,1211,1215,1220,1221],arrang:[907,934],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,368,370,371,373,374,775,776,777,779,780,789,790],array_builtin:[43,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830],array_equ:[266,625,907],array_lik:[907,915],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,907],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1178],arraywithgener:[22,1178],arraywithgradi:[24,1178],arraywithimag:[26,1178],arraywithlinalg:[28,1178],arraywithlog:[30,1178],arraywithmath:[32,1178],arraywithmeta:[34,1178],arraywithrandom:[36,1178],arraywithreduct:[38,1178],arriv:[40,41,42],articl:1178,arxiv:1178,as_arrai:[40,41,907,950,987],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[833,851,883,890,891,892,893],as_vari:[40,41],as_zero:[40,41],asarrai:907,asin:[719,1044],asinh:[719,1044],aspect:[1025,1030],assert:[40,41,907,918,1066],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:907,associ:[43,1032,1039],assum:[1221,1224],astyp:883,asynchron:[40,41,42],at_dev:[40,42,833,846,847],at_kei:[40,41],at_key_chain:[40,41],at_nod:1066,atan2:[719,1044],atan:[719,1044],atanh:[719,1044],attent:[1147,1158,1159,1195,1206],attribut:[0,6,40,41,775,776,777,907,975,1008],audienc:[1178,1221],author:1178,avail:[40,41,833,868,870,871,880,907,935,1066],averag:[1009,1011,1012,1016,1062,1063,1064,1129,1132],average_across_step:[1062,1063,1064],avoid:[833,1066,1221],axes:[40,41,43,789,790,833,877,907,912,913,926,939,940,995,1001,1006,1032,1035,1038,1066,1129,1131,1132,1133,1134,1135,1136,1137],axes_length:[40,41,907,934,935,936],axi:[40,41,789,790,833,835,838,845,856,857,858,859,862,863,864,865,877,907,912,913,914,925,926,929,930,931,939,940,945,963,964,965,978,989,990,993,995,996,1003,1006,1032,1038,1066,1122,1128,1129,1131,1132,1133,1134,1135,1136,1137,1139,1144,1160,1162,1163],axis0:[40,41,907,995],axis1:[40,41,907,995],back:[1207,1208,1211,1215],backend:[15,17,19,40,41,368,370,371,373,374,833,868,871,880,883,889,897,906,907,955,959,1009,1012,1014,1016,1017,1018,1023,1066,1178,1179,1184,1185,1211,1212,1213,1214,1215,1216,1220,1221,1224],background:[1178,1221],backprop:1224,backward:[789,790,1220],band:[907,943],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,368,792,817,833,835,836,837,838,839,840,842,843,845,846,847,848,883,907,948,965,983,992,1009,1066,1129,1130,1172,1176,1178,1181,1182,1183,1186,1188,1189,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1224],batch:[40,41,833,875,876,907,940,943,953,1025,1029,1032,1037,1062,1063,1064,1065,1066,1147,1156,1164,1165,1209,1210],batch_shap:[907,940,953,973,1025,1026,1027,1028,1029,1030,1031,1032,1039,1122,1123,1147,1157,1158,1159,1195,1204],batch_siz:[1066,1122,1123,1147,1148,1149,1150,1151,1152,1153,1154],bayesian:1224,becaus:[43,907,910],becom:[907,922,1044,1050,1224],been:[907,934,935,936,1122,1123],befor:[40,41,43,833,877,1062,1063,1064,1066,1110,1119,1129,1131,1132,1133,1134,1135,1136,1137,1147,1158,1159,1224],before_1:[907,926,1006],before_n:[907,926,1006],begin:[1110,1111,1118,1221],behaviour:[43,1224],behind:[1009,1012,1014,1016,1017,1018,1178],being:[40,41,43,907,910,977,985,1066],belong:[40,41],below:[43,1178,1221,1224],below_depth:[40,41],benefit:1178,bernoul:[1147,1155,1195,1203],best:[907,966,1178],beta1:[1009,1011,1012,1016,1211,1212,1213],beta2:[1009,1011,1012,1016,1211,1212,1213],beta:[1164,1165],between:[40,41,42,775,776,907,910,1110,1114,1122,1124,1160,1162,1163,1211,1213],bia:[1147,1156,1157,1195,1196,1197,1198,1199,1200,1201,1202,1205],bias_initi:[1195,1196,1197,1198,1199,1200,1201,1202,1205],bilinear:[1025,1026],bilinear_resampl:[151,325,439,557,704,1025],bilinearli:[1025,1026],binari:[1160,1161],binary_cross_entropi:1160,bit:[368,775,776,777,883,894,1025,1027,1031,1178],bitwise_oper:[0,7,8],block:[1178,1221],bool:[15,18,19,40,41,42,43,779,780,789,790,831,832,833,851,864,868,872,877,880,882,883,893,907,909,916,917,930,933,937,938,943,950,952,960,966,987,989,1003,1004,1005,1009,1012,1013,1014,1015,1016,1017,1018,1020,1032,1035,1038,1062,1063,1064,1065,1066,1110,1111,1112,1114,1118,1119,1122,1123,1129,1131,1132,1133,1134,1135,1136,1137,1139,1140,1147,1155,1184,1185,1195,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],both:[43,907,929],bottom:1178,boundari:[40,41,1122,1126],branch:[831,832],brittl:43,broadcast:[40,41,43,789,790,792,817,907,919,937,968,969,970,978,1032,1035,1038,1044,1050,1054,1129,1131,1132,1133,1134,1135,1136,1137],broadcast_to:[266,625,907],build:[1066,1178,1195,1206,1207,1208],build_mod:[1195,1206,1207,1208],builder:1178,built:[833,907,910,1066,1195,1206,1207,1208],builtin:43,builtin_ab:[221,792],builtin_add:[221,792],builtin_and:[221,792],builtin_bool:[221,792],builtin_contain:[221,792],builtin_deepcopi:[221,792],builtin_dir:[221,792],builtin_eq:[221,792],builtin_float:[221,792],builtin_floordiv:[221,792],builtin_g:[221,792],builtin_getattr:[221,792],builtin_getattribut:[221,792],builtin_getitem:[221,792],builtin_gt:[221,792],builtin_int:[221,792],builtin_invert:[221,792],builtin_l:[221,792],builtin_lt:[221,792],builtin_mul:[221,792],builtin_n:[221,792],builtin_neg:[221,792],builtin_or:[221,792],builtin_po:[221,792],builtin_pow:[43,221,792],builtin_radd:[221,792],builtin_rand:[221,792],builtin_rfloordiv:[221,792],builtin_rmul:[221,792],builtin_ror:[221,792],builtin_rpow:[221,792],builtin_rsub:[221,792],builtin_rtruediv:[221,792],builtin_rxor:[221,792],builtin_setitem:[221,792],builtin_some_op:43,builtin_sub:[221,792],builtin_truediv:[221,792],builtin_xor:[221,792],bypass:1221,cach:[833,849,907,920],cache_fn:907,calcul:[40,41,42,43,792,817,1044,1054],call:[43,833,877,907,977,985,1002,1009,1013,1066,1110,1111,1114,1118,1195,1206,1207,1208,1211,1215,1221,1224],callabl:[40,41,831,832,833,842,843,877,907,920,933,935,966,1002,1062,1063,1064,1065,1066,1110,1114,1115,1116,1118,1119,1147,1158],can:[43,833,875,876,877,907,979,1025,1027,1066,1178,1220,1221,1224],cancel_join_thread:1066,captur:1178,cast:[40,41,112,266,397,510,625,883,907,925,1025,1027,1031],catch_except:[907,933],categori:43,ceil:[266,625,907,910],cell:[1147,1157,1195,1204],certain:[40,41,907,910,964,965],chain:[40,41,1062,1063,1064,1217,1218],chang:[833,907,979,1066,1110,1112,1119,1178,1220],channel:[907,943,1025,1027,1028,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205],check:[15,16,17,18,19,40,41,833,872,882,883,888,897,906,907,918,938,952,960,994,1004,1009,1015,1066,1110,1111,1118,1178,1221],check_nest:[1110,1118],check_shap:[40,41],check_submod_ret:[1207,1208],check_typ:[40,41],choic:[1178,1221],choleski:[708,1032],choos:[907,1005,1044,1050,1178],choose_random_framework:59,chosen:[40,41,907,910,1005],chunk:[833,875,876,877,1066],chunk_siz:[833,877,1066],circl:[1044,1045,1047],clark:1178,clear:[833,849,1066],clear_framework_stack:59,clear_mem_on_dev:[617,833],click:1178,clip:[40,41,266,625,907,923,924,968,970,1178],clip_matrix_norm:907,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,907],clipped_delta:1066,clone:[40,41,833,852,853,854,855,1066],clone_arrai:1066,clone_it:1066,clone_nest:1066,clonedit:1066,cloneditem:1066,clonednest:1066,close:[43,1025,1030,1044,1047,1066,1224],closest:[883,888],closest_valid_dtyp:883,code:[40,41,42,43,1178,1179,1220,1221],codebas:[833,875,876,1066,1178,1221,1224],collect:[15,40,41,792,831,833,883,907,1009,1025,1032,1040,1044,1066,1110,1122,1129,1139,1147,1160,1164,1181,1195,1209,1211],color:[40,41,42,1222,1223],column:[907,953],combin:[40,41,42,1025,1030,1178,1224],combined_batch_s:1066,come:1221,command:1178,commit:1224,common:[40,41,1044,1050],common_key_chain:[40,41],commun:[1178,1221],compar:[40,41,907,909,916,917],comparison_oper:[0,9,10],compat:[43,789,790,792,817,907,937,979,1044,1054,1178,1224],compil:[266,397,625,1167,1168,1172,1178,1207,1208,1211,1212,1213,1214,1215,1216],compile_graph:[1166,1178,1207,1208,1211,1215],compile_on_next_step:[1207,1208,1211,1212,1213,1214,1215,1216],complet:[40,41,1066],complex:[1221,1224],compon:[907,929],composit:43,comput:[40,41,833,877,907,923,924,930,931,937,967,1009,1011,1012,1013,1014,1016,1017,1018,1020,1022,1025,1028,1032,1033,1034,1035,1036,1038,1040,1041,1042,1043,1044,1045,1047,1049,1050,1052,1055,1056,1057,1058,1060,1110,1114,1129,1130,1131,1132,1133,1134,1135,1136,1137,1147,1148,1149,1150,1151,1152,1153,1154,1156,1158,1160,1161,1162,1163],concat:[40,41,833,862,863,864,865,877,907,943,1066],concaten:[40,41,112,266,397,510,625,907,943,1066,1178],concatten:[40,41,833,862,863,864,865,877,1066],condit:[831,832,907,1005,1110,1118],conditon:[1110,1118],config:[40,41,1066],config_list:1066,configur:[40,41],conjunct:1221,connect:[1172,1195,1205,1206],consid:[40,41,1032,1038,1220,1224],consist:[40,41,833,865,1066,1129,1130,1207,1208,1221],constant:[833,842,843,907,926,1066,1110,1114,1160,1161,1162,1163,1164,1165,1186,1187,1191,1194,1207,1208,1209,1210,1221],constant_kwarg:1066,constant_pad:[266,510,625,907],constitu:[40,41],construct:[907,996,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220],constructor:[40,41,42,907,911,1217,1218],consum:[833,1066],cont_feat_dim:[1147,1158],contaienr:[40,41],contain:[15,18,19,42,43,779,780,789,790,792,817,833,852,856,877,883,887,907,908,912,913,914,922,923,924,927,937,952,968,970,980,991,992,1009,1011,1012,1014,1016,1017,1018,1044,1054,1062,1063,1064,1065,1066,1122,1123,1129,1131,1132,1133,1135,1137,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[625,907],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[907,971,1147,1158,1195,1206],context_dim:[1195,1206],contextmanag:[59,60],continu:[43,1066,1221],contract:[40,41,1129,1130],contribut:[1178,1179],contributor:1178,control:1178,conv1d:[182,356,464,763,1147,1178,1195],conv1d_transpos:[182,356,464,763,1147],conv1dtranspos:[1178,1195],conv2d:[182,356,464,582,763,1147,1178,1195],conv2d_transpos:[182,356,464,763,1147],conv2dtranspos:[1178,1195],conv3d:[182,356,464,582,763,1147,1178,1195],conv3d_transpos:[182,356,464,763,1147],conv3dtranspos:[1178,1195],convent:[40,41,1129,1130],conver:[833,849,860,872,879,882,1066],convers:[16,17,18,19,40,41,1066,1178],convert:[15,16,17,18,19,40,41,43,833,860,861,883,889,895,896,907,988,999,1000,1025,1027,1031,1032,1039,1066,1110,1112,1119,1178,1185],convert_dtyp:883,convolut:[1147,1148,1149,1150,1151,1152,1153,1154,1195,1196,1197,1198,1199,1200,1201,1202],cool:43,cooler:43,coordin:[907,969,1044,1045,1047,1050],copi:[40,41,907,928,1066,1110,1112],copy_arrai:[625,907],copy_nest:1110,core:[792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,838,839,840,842,843,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1178],correct:[43,1178,1221],correctli:[40,41,1032,1035,1038,1044,1050,1129,1131,1132,1133,1134,1135,1136,1137],correspond:[40,41,43,792,817,907,925,1122,1123],cos:[719,907,943,1044,1045,1060,1221],cosh:[719,1044],cosin:[1044,1045,1046,1052,1053],cost:[1009,1011,1012,1014,1016,1017,1018,1062,1063,1064,1065],cost_fn:[1062,1065],could:1224,count:[40,41,789,790,1066,1129,1134,1136,1176],cprint:1222,cpu:[40,41,43,833,870,872,878,879,882,907,910,915,945,946,953,964,965,973,974,975,981,982,1007,1008,1066,1122,1123,1124,1125,1126,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218,1220,1221],creat:[40,41,833,842,843,907,910,915,944,945,946,953,964,965,973,974,975,981,982,998,1007,1008,1009,1022,1066,1122,1123,1124,1125,1126,1178,1184,1185,1186,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1224],create_if_abs:[40,41],create_vari:1186,creation:[40,41,42,43],crop:[1025,1029],crop_siz:[1025,1029],cross:[266,625,907,1160,1161,1162,1163],cross_entropi:1160,cuda:[40,41,833,842,861,878,907,910,915,945,946,953,964,965,973,974,975,981,982,1007,1008,1066,1122,1123,1124,1125,1126,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218],cumprod:[112,266,397,625,907],cumsum:[625,907],cumul:[907,930,931],current:[40,41,42,43,833,842,866,867,869,873,883,889,897,906,907,932,947,955,959,972,976,1066,1110,1111,1118,1178,1224],current_framework:59,current_framework_str:[625,907,1066],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1172,d_in:[1147,1148,1149,1150,1151,1152,1153],d_out:[1147,1148,1149,1150,1151,1152,1153],da_can_termin:1066,da_dim_s:[833,1066],da_direct:1066,da_tune_step:[833,1066],dai:1224,daniel:1178,data:[40,41,42,43,776,777,779,780,789,790,792,817,833,835,836,837,838,839,840,845,846,847,861,883,887,888,889,893,894,895,896,897,898,899,906,907,910,915,937,944,953,960,974,975,979,990,994,1007,1008,1009,1015,1023,1044,1054,1066,1147,1156,1178],data_format:[1147,1148,1149,1150,1151,1152,1153,1154,1195,1196,1197,1198,1199,1200,1201,1202],data_type_funct:[368,370,371,775,776,777],dataset:[40,41],datatyp:[40,41,883,888,898,899],dcdw:[1009,1011,1012,1014,1016,1017],debug_info:1172,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1009,1016,1017,1211,1213,1214],decay_lambda:[1009,1016,1017,1211,1213,1214],decid:[40,41,1224],decompos:[1032,1033],decomposit:[1032,1033,1037],decor:43,decrement:[907,956],dedic:[1009,1023,1184,1185],deep:[40,41,1178],deep_copi:[40,41],deeper:[833,855,859,865,1066,1110,1119,1178],deepli:[1110,1112],def:[43,60,79,195,369,477,591,834,841,844,884,885,886,1010,1066,1070,1077,1173,1177,1178,1187,1190,1193,1220,1221,1224],default_dev:43,default_devic:833,default_dtyp:[43,883],default_float_dtyp:883,default_int_dtyp:883,default_key_color:[40,41,42],default_nod:1066,default_v:[907,933],defaultdevic:[833,834],defaultdtyp:[883,884],defaultfloatdtyp:[883,885],defaultintdtyp:[883,886],defer:43,defin:[43,907,929,973,975,1008,1122,1124],degre:[1044,1052,1058,1060],del:1066,delta:[1009,1011,1066,1172],delta_dim_s:1066,delta_percent_mem:1066,delta_sf:1066,delta_util:1066,demo:1178,denomin:[907,942,949,984,991,992,1164,1165,1209,1210],dens:[1195,1205],depend:[43,792,817,907,1005,1032,1037,1178],depth:[40,41,833,855,859,865,907,951,973,1066,1110,1119,1172,1176,1207,1208],depth_cutoff:[40,41],depthwis:[1147,1154,1195,1202],depthwise_conv2d:[182,356,464,582,763,1147],depthwiseconv2d:[1178,1195],deriv:[1009,1011,1012,1014,1016,1017,1018,1110,1112,1119,1178,1207,1211,1215,1217],descend:[1032,1037],descent:[1009,1014,1211,1216],describ:[40,41,1129,1130],design:[1178,1179],desir:[40,41,833,878,883,887,907,910,915,953,954,974,975,1007,1008,1025,1030,1066,1129,1131,1132,1133,1135,1137],desired_aspect_ratio:[1025,1030],desired_percent_increas:1066,detail:1224,detect:[40,41,1110,1111,1118],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,779,780,789,790,792,817,833,868,870,871,880,883,887,888,894,897,898,899,906,907,909,910,915,916,917,952,955,959,960,994,1004,1009,1015,1044,1054,1062,1063,1064,1065,1066,1147,1158],dev:[40,41,42,43,105,260,503,617,833,836,837,839,840,842,843,846,847,849,850,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,869,872,873,874,875,876,877,878,879,882,907,910,915,945,946,953,964,965,973,974,975,981,982,1007,1008,1009,1024,1122,1123,1124,1125,1126,1184,1185,1186,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218],dev_clon:[40,41,833],dev_clone_arrai:833,dev_clone_it:833,dev_clone_nest:833,dev_dist:[40,41,833],dev_dist_arrai:833,dev_dist_it:833,dev_dist_nest:833,dev_from_str:[43,105,260,503,617,833],dev_mapp:833,dev_str:[40,41],dev_to_str:[105,260,503,617,833],dev_unifi:833,dev_unify_arrai:833,dev_unify_it:833,dev_unify_nest:833,dev_util:833,devclonedit:833,devcloneditem:833,devclonednest:833,devdistit:833,devdistitem:833,devdistnest:833,develop:[1178,1221,1224],deviat:[40,41,1122,1125,1129,1135,1164,1165,1209,1210],devic:[21,40,41,43,835,836,837,838,839,840,842,843,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,907,910,915,944,945,946,953,964,965,973,974,975,981,982,1007,1008,1009,1024,1122,1123,1124,1125,1126,1178,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218],devmanag:[833,841],devmapp:[833,843],devmappermultiproc:833,diag:[1032,1037],diagon:[907,953],dict:[15,16,17,18,19,40,41,42,833,835,838,842,843,845,855,856,857,858,859,907,934,935,936,966,1062,1063,1064,1066,1110,1112,1113,1114,1117,1119,1184,1185],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,775,776,833,852,853,856,857,1066,1147,1156,1178,1221,1224],differenti:[1178,1221],dilat:[1147,1148,1149,1150,1151,1152,1153,1154,1195,1196,1197,1198,1199,1200,1201,1202],dim:[40,41,43,907,973,1025,1026,1030,1032,1037,1066,1195,1206],dim_siz:[40,41,833,1066],dimens:[40,41,42,789,790,833,864,907,919,925,929,934,935,936,939,943,950,963,973,978,979,989,990,993,1001,1003,1025,1029,1032,1035,1037,1038,1062,1063,1064,1065,1066,1122,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1144,1147,1148,1149,1150,1151,1152,1153,1154,1157,1160,1162,1163,1195,1196,1197,1198,1199,1200,1201,1202,1205,1206],dimension:[40,41,789,790,907,989,990,1032,1037],direct:1066,directli:[43,1110,1119,1221,1224],directori:[907,986,997],discret:[1160,1162],disk:[40,41,1025,1027],distanc:[907,910],distribut:[40,41,833,852,856,857,858,859,1066,1122,1123,1124,1125,1126,1147,1155,1195,1203,1207,1208],distribute_nest:1066,distributedarrai:[40,41],distrubt:[1160,1162],dive:[1178,1221],divid:[40,41,907,989,991,1044],dividend:[1044,1054],divis:[907,942,949,984,991,992,1009,1011,1012,1016,1044,1054,1211,1212,1213],divisor:[1009,1011,1012,1016,1044,1054,1211,1212,1213],doc:1178,docstr:43,doe:[40,41,43,907,910,989,1220],doesn:1178,doing:43,domain:[1044,1045],don:1178,door:1224,dot:[1032,1034,1147,1158,1159,1195,1206],down:1220,downscal:[907,923,924],drag:[1178,1224],draw:[1122,1123,1125,1126],drawn:[1122,1123,1124,1125,1126],drop:[1178,1224],dropout:[1147,1178,1195,1206],dropout_r:[1195,1206],ds_tune_step:833,dtype:[40,41,43,112,266,368,370,371,397,510,625,775,776,777,887,888,889,890,891,892,894,895,896,897,898,899,900,901,902,903,904,905,906,907,910,915,944,953,973,974,975,1007,1008],dtype_bit:[112,266,397,510,625,883],dtype_from_str:[43,112,266,397,510,625,883],dtype_in:[883,889,894,895,896,897,898,899,906],dtype_to_str:[112,266,397,510,625,883],duplic:[40,41],dure:[40,41,43,831,832,907,1002,1009,1011,1012,1016,1062,1063,1064,1065,1207,1208,1211,1212,1213,1215],dynam:[831,832],each:[40,41,42,43,779,780,792,817,833,842,843,852,853,854,855,856,857,858,864,876,877,907,908,909,914,926,937,978,989,993,996,1006,1009,1012,1014,1016,1017,1018,1025,1028,1032,1037,1044,1047,1054,1056,1057,1066,1110,1114,1122,1123,1129,1130,1147,1148,1149,1150,1151,1152,1153,1154,1155,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1221],eager:1221,easi:1224,easili:1178,econom:1224,ecosystem:1178,edg:[907,922,926,1006],effect:[1009,1018],effective_grad:[1009,1018],effici:1224,einop:[40,41,907,934,935,936],einops_rearrang:[40,41,907],einops_reduc:[40,41,907],einops_repeat:[40,41,907],einstein:[40,41,1129,1130],einsum:[40,41,168,344,452,572,743,1129],either:[40,41,907,933,966,969,971,1062,1063,1064,1065,1066,1195,1206,1207,1208,1221],eleg:1066,element:[40,41,43,779,780,789,790,792,817,833,854,858,864,883,887,907,908,910,912,913,914,916,917,921,922,923,924,930,931,937,940,941,942,953,954,968,970,978,980,989,1000,1005,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1066,1129,1130,1132,1134,1136,1139,1140,1141,1142,1143,1144,1145,1146,1147,1155,1195,1203],elementwis:[40,41],elementwise_affin:[1209,1210],elementwise_funct:[373,374,779,780],elemtn:[1122,1123],elif:1066,els:[907,918,933,938,1066],elsewher:[907,1005],emphas:1178,empti:[40,41,1066],enabl:[40,41,42,1178],encapsul:[775,777],encod:[907,943,1025,1027],end:[907,910,1178,1221],ensur:43,entir:[40,41,789,790,833,877,1066,1178,1195,1204],entri:[40,41,907,940,964,965,989,990],entropi:[1160,1161,1162,1163],enumer:1066,environ:1178,eps:[368,775,776],epsilon:[1009,1011,1012,1016,1160,1161,1162,1163,1164,1165,1209,1210,1211,1212,1213],equal:[40,41,510,625,779,780,907,909,916,917,926,989,1006,1044,1052,1058,1060,1122,1126],equality_matrix:[907,909],equat:[40,41,1129,1130],equival:[907,910,1044,1060],erf:[448,719,1044],error:[40,41,833,907,990,1044,1055,1066,1139,1140,1207,1208,1211,1215],essenti:43,etc:[40,41,43,833,878,907,910,915,945,946,953,964,965,973,974,975,981,982,1007,1008,1066,1122,1123,1124,1125,1126,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218,1224],evalu:[40,41,789,790,907,969,1110,1111,1118],even:1224,evenli:[40,41,907,910,964,965,989],everi:[907,909,1224],exact:[40,41],exampl:[43,831,832,907,922,993,1178,1220,1221,1224],example_input:[831,832],exc_tb:1066,exc_typ:1066,exc_val:1066,exce:[907,970],except:[40,41,44,47,789,790,907,910,918,925,933,1002,1066],excess_s:1066,excit:[1178,1221],exclud:[59,61,907,910,1122,1126],exclus:[40,41,907,930,960,1009,1015,1122,1124],execut:[43,907,1002,1221],execute_with_gradi:[148,320,434,552,698,1009,1178,1220],exist:[40,41,907,933,1066,1178,1211,1215,1224],exp:[719,1044],expand:[40,41,907,939,943],expand_dim:[40,41,266,625,907,1066],expect:[907,911],explain:1221,explicitli:[1195,1204,1206,1207,1208,1221],expon:[43,792,817,907,992],exponenti:[43,792,817,1044,1055,1056],expos:[907,915,927],express:[907,969],exsit:[40,41],extend:43,extra:[40,41,42,1009,1013],eye:[1032,1034],fabian:1178,fabio:1178,factor:[833,842,875,876,877,1009,1011,1012,1016,1017,1032,1037,1066,1147,1148,1149,1150,1151,1152,1153,1154,1195,1196,1197,1198,1199,1200,1201,1202,1211,1212,1213,1214],falck:1178,fall:[1207,1208,1211,1215],fallback_to_non_compil:[1207,1208,1211,1215],fals:[15,18,19,40,41,42,59,66,67,68,69,70,779,780,789,790,833,851,864,872,877,882,883,890,891,892,893,907,909,930,933,938,943,950,960,966,987,989,1003,1005,1009,1012,1013,1014,1015,1016,1017,1018,1032,1035,1038,1062,1063,1064,1065,1066,1110,1111,1112,1114,1118,1119,1129,1131,1132,1133,1134,1135,1136,1137,1166,1167,1168,1172,1176,1184,1185,1207,1208,1211,1212,1213,1214,1215,1216],fan_in:1186,fan_mod:1186,fan_out:1186,far:[1110,1111,1118,1220],faster:[831,832],favourit:[1178,1220],feasibl:1224,feat_dim:[1147,1158,1159],fed:[833,877,1066],feed:[833,877,1066],field:1224,file:[40,41,43,907,986,997,1207,1208],filepath:[40,41],fill:[40,41,907,944,974,1007,1122,1124],fill_valu:[907,944],filter:[1147,1148,1149,1150,1151,1152,1153,1154,1195,1196,1197,1198,1199,1200,1201,1202,1224],filter_s:[1195,1196,1197],filter_shap:[1195,1198,1199,1200,1201,1202],find:[40,41,1224],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[78,79,194,195,368,369,476,477,590,591,775],finish:[1178,1224],finit:[779,780],first:[40,41,831,832,833,864,907,916,925,929,937,964,965,993,995,1009,1013,1032,1037,1062,1063,1064,1065,1066,1110,1111,1118,1122,1128,1129,1134,1136,1195,1206,1207,1208,1211,1215,1221,1224],firstlayersiren:[1178,1186],firstli:[1221,1224],fist:[833,877,1066],fit:[40,41,907,978,1025,1030],fkt:1224,flag:[40,41,1009,1015],flat:[40,41,43,907,978,981],flat_list:[40,41],flatten:[40,41,907,943,978,1032,1038,1129,1131,1132,1133,1135,1137],flatten_key_chain:[40,41,1207,1208],flexibl:[1178,1221],flip:[40,41,112,266,397,510,625,907],float32:[43,883,887,895,896,907,910,915,953,974,975,1007,1008],float_dtyp:[883,891,901],float_img_to_uint8_img:1025,floor:[266,625,907,942,1066],floormod:[266,625,907],fluid:1224,fname:[1166,1168,1172,1207,1208],folder:[43,1178],follow:[40,41,43,775,777,833,877,907,956,957,958,991,992,1009,1012,1014,1016,1017,1018,1066,1110,1114,1119,1147,1158,1159,1178,1195,1205,1211,1215],followng:[775,776],fomaml_step:1062,forget:[1009,1011,1012,1016,1211,1212,1213],fork:[907,971],forkserv:[907,971,1066],form:[15,16,17,18,19,40,41,907,915,1009,1012,1014,1016,1017,1018,1110,1112,1119,1147],format:[40,41,43,833,851,883,887,889,893,907,910,915,953,974,975,1007,1008,1066,1129,1130,1178,1220,1221],format_fn:[40,41],format_key_chain:[40,41],forward:[1207,1208,1211,1215,1220],found:[40,41,42],fourier:[907,943],fourier_encod:907,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,94,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,154,156,157,158,162,163,164,165,166,167,169,170,171,172,173,174,175,178,180,181,183,184,185,186,187,188,189,195,196,197,200,210,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,326,327,328,330,331,332,333,335,336,337,340,341,342,343,345,346,347,348,349,350,351,352,355,357,358,359,360,361,362,363,369,370,371,374,384,396,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,435,436,437,438,440,441,442,444,445,446,449,451,453,454,455,456,457,458,459,462,463,465,466,467,468,469,470,471,477,478,479,482,492,504,505,506,507,508,509,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,553,554,555,556,558,559,560,562,563,564,568,569,570,571,573,574,575,576,577,578,579,583,584,585,591,592,593,596,606,618,619,620,621,622,623,624,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,699,700,701,702,703,705,706,707,709,710,711,712,713,714,716,717,718,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,737,738,739,740,741,742,744,745,746,747,748,749,750,753,754,755,756,757,758,759,761,762,764,765,766,767,768,769,770,776,777,780,790,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1041,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1161,1162,1163,1165,1167,1168,1170,1171,1173,1177,1178,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1223,1224],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1066,framewrk:[907,971],freeli:43,frequenc:[907,943],from:[40,41,42,43,789,790,833,842,843,877,883,889,907,933,940,945,946,953,979,990,998,1005,1009,1012,1016,1025,1029,1062,1063,1064,1065,1066,1110,1112,1119,1122,1123,1124,1125,1126,1129,1134,1136,1147,1155,1158,1178,1184,1185,1195,1203,1206,1211,1215,1220,1221],from_cal:[1207,1208],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[112,266,397,510,625,775,776,907,1178],full_matric:[1032,1037],fulli:[43,1178,1195,1205,1206,1220],func:[40,41,831,832,833,877,907,920,1009,1013,1066],further:1224,furthermor:1224,futur:1224,gain:1186,gamma:[1164,1165],gather:[40,41,112,266,397,510,625,907,946],gather_nd:[40,41,112,266,397,510,625,907],gauss:[1044,1055],gaussian:[1139,1140],geglu:[1178,1181],gelu:[354,461,752,1139,1178,1181],gener:[23,40,41,43,831,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1015,1122,1124,1126,1127,1178,1211,1215],geometr:[907,943],get:[40,41,775,776,777,833,842,843,851,866,867,872,876,879,882,883,893,894,907,911,947,948,949,977,1066,1176,1178,1195,1204,1224],get_all_arrays_in_memori:907,get_all_arrays_on_dev:833,get_framework:59,get_initial_st:[1195,1204],get_min_bas:907,get_min_denomin:907,get_mod_kei:[1207,1208],get_num_dim:[625,907],get_param:1172,get_param_recurs:1172,get_referrers_recurs:907,getfullargspec:1066,gist:1178,give:[907,914,979,1221],given:[40,41,43,833,866,872,875,876,877,879,882,883,887,907,910,914,915,922,930,931,940,946,964,965,974,975,978,981,982,989,996,1001,1003,1007,1008,1009,1011,1012,1014,1016,1017,1018,1032,1034,1039,1044,1045,1066,1110,1115,1116,1122,1125,1126,1128,1129,1132,1134,1135,1136,1137,1147,1148,1149,1150,1151,1152,1153,1154,1184,1185,1224],global:[40,41,42,833,842,843,850,875,876,877,883,890,891,892,907,932,948,949,977,983,984,985,991,992,1009,1024,1066,1164,1165,1170,1171,1178,1209,1210],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1178,1186,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205],got:1178,gpu0:43,gpu2:43,gpu:[833,868,871,1066],gpu_is_avail:[833,1066],grad:[1178,1211,1215,1220],gradient:[25,40,41,833,877,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1028,1062,1063,1064,1065,1178,1211,1212,1213,1214,1215,1216,1220,1224],gradient_descent_upd:[1009,1062,1063,1064,1065],gradient_imag:[151,325,439,557,704,1025],gradienttrack:[1009,1010],graph:[1009,1012,1014,1016,1017,1018,1166,1167,1168,1173,1178,1207,1208],graph_compil:[1166,1167,1168,1169,1170,1171,1172,1176],greater:[40,41,907,910,941,990,1122,1126],green:[40,41,42,1222,1223],grid:[907,969],group:[1025,1030],guid:[1178,1179,1224],gym:1178,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1224,half:[907,910,1066,1122,1126],hand:1178,handl:[40,41,42,43,831,832,833,849,851,860,861,872,879,882,1009,1012,1014,1016,1017,1018,1066,1211,1212,1213,1214,1215,1216],has:[40,41,43,907,993,1044,1049],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,907],hasattr:1066,have:[40,41,43,775,776,779,780,789,790,792,817,907,925,929,934,935,936,937,944,993,1009,1015,1023,1032,1037,1044,1054,1066,1178,1220,1221],hdf5:[40,41,1207,1208],head:[1147,1158,1195,1206],head_dim:[1195,1206],height:[1025,1030],height_cutoff:[40,41],help:[59,368,833,845,846,847,848,883,1009,1172,1176,1178,1186,1188,1189,1191,1192,1194],helper:1178,here:[43,1178],hidden:[1147,1157,1195,1204],hierarch:[907,927],hierarchi:[40,41],high:[40,41,1122,1124,1126],higher:[1009,1012,1014,1016,1017,1018,1032,1037],highest:[1122,1124],highest_util:1066,highest_util_nod:1066,highli:1178,highlight:1224,highlight_subgraph:[1166,1168,1172],hint:43,hkt:1224,hold:[883,887,907,910,915,981,982],host:1178,hot:[907,973],how:[1178,1195,1206,1207,1208,1221,1224],howev:[43,1221],http:1224,hyperbol:[1044,1046,1048,1051,1053,1059,1061,1139,1146],hypothet:1224,icon:1178,idea:1178,ident:[40,41,43,112,266,397,510,625,907],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[775,776],if_exist:[40,41],ignor:[40,41,1211,1215],ignore_key_error:[40,41],ignore_miss:[1211,1215],ignore_non:[40,41],iinfo:[78,194,368,476,590,775],imag:[27,907,963,1026,1027,1028,1029,1030,1031,1147,1148,1149,1150,1151,1153,1154,1178,1224],image_dim:[1025,1029],imkkhk:1224,immedi:[1178,1221,1224],implement:[43,792,817,1178,1221,1224],in_featur:[1147,1156],includ:[40,41,43,789,790,907,910,952,991,992,1004,1110,1111,1122,1126,1195,1205,1206,1209,1210,1220],include_deriv:[1110,1112,1119],include_empti:[40,41],include_gener:[1166,1167,1168,1172,1207,1208],include_inf:[40,41,907,952,1004],include_nest:[1110,1111],include_self:[40,41],inclus:[1122,1124],incom:[1147,1156],increas:[833,855,859,865,907,926,939,1006,1066,1110,1119],increasingli:1224,increment:[907,957,1066],increment_param_count:1172,inde:1178,indent:[40,41,42],independ:[1122,1123],index:[40,41,907,912,913,945,946,969,990,993,1110,1113,1115,1116,1117,1120],index_nest:1110,indic:[40,41,907,912,913,914,945,946,954,973,981,982,1110,1111,1113,1115,1116,1117,1118,1120,1121,1122,1123,1139,1144,1147,1148,1149,1150,1151,1152,1153,1154,1164,1165,1195,1196,1197,1198,1199,1200,1201,1202,1207,1208],indices_wher:[112,266,397,625,907],inevit:1224,inf:[40,41,907,952,961,1004,1044,1049],infer:[831,832,907,940,950,953,979,987,1025,1029,1221,1224],infin:[779,780,907,961],inform:[775,776,777,1009,1020],init_c:[1147,1157],init_h:[1147,1157],init_on_first_step:[1211,1215],initi:[40,41,42,59,368,833,845,846,847,848,883,1009,1066,1147,1157,1172,1176,1178,1188,1189,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1211,1215],initialz:[1207,1208],inner:[1062,1063,1064,1065],inner_batch_fn:[1062,1063,1064],inner_batch_shap:[1147,1156],inner_cost_fn:[1062,1063,1064],inner_grad_step:[1062,1063,1064,1065],inner_learning_r:[1062,1063,1064,1065],inner_optimization_step:[1062,1063,1064,1065],inner_v:[1062,1063,1064],inp:1066,inplac:[40,41,907,918,955,959,994,1009,1012,1014,1016,1017,1018,1184,1185,1211,1212,1213,1214,1215,1216],inplace_arrays_support:907,inplace_decr:[112,266,397,510,625,907],inplace_incr:[112,266,397,510,625,907],inplace_oper:[0,11,12],inplace_upd:[40,41,112,266,397,510,625,907,1184,1185],inplace_variables_support:907,input:[15,18,19,40,41,42,43,779,780,789,790,831,832,833,842,843,850,851,852,855,856,859,865,877,878,883,887,888,890,891,892,893,894,898,899,907,908,909,912,913,914,916,917,918,919,921,922,923,924,925,926,928,930,931,933,934,935,936,937,938,939,940,941,942,943,950,952,953,954,956,957,958,960,961,962,963,967,968,969,970,978,980,987,988,990,993,994,995,996,998,999,1000,1001,1003,1004,1006,1009,1013,1015,1020,1024,1025,1026,1027,1028,1029,1031,1032,1035,1037,1038,1040,1041,1042,1043,1044,1046,1048,1049,1051,1052,1053,1054,1058,1059,1060,1061,1062,1063,1064,1065,1066,1122,1123,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1164,1165,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1209,1210,1221],input_ax:[833,877,1066],input_channel:[1195,1196,1197,1198,1199,1200,1201,1204,1205],input_queu:1066,inputs_split:1066,insert:[907,939],insid:43,inspect:1066,inspir:1224,instal:1178,instanc:[15,16,17,18,19,40,41,43,792,817,833,842,1066,1184,1185,1217,1218],instead:[40,41,1129,1131,1132,1133,1134,1135,1136,1137,1224],int32:43,int64:[883,887,907,910,915,953,974,975,1007,1008],int_dtyp:[883,892,902],integ:[40,41,775,777,789,790,883,899,907,910,921,941,980,989,1032,1038,1122,1124,1127],integr:1178,intend:43,inter:1178,interchang:[40,41,907,995],interest:1178,interfac:[907,915,1221],intermedi:[40,41],intern:[40,41,833,1009,1023,1066,1110,1111,1118,1119,1186,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1217,1218],interpol:[907,963],intersect:[1044,1045],interv:[40,41,789,790,907,910,922,964,965,1044,1047,1122,1126],introduc:1224,inv:[708,1032,1224],invalid:[789,790],invalid_dtyp:883,invers:[1032,1034,1036,1044,1045,1046,1047,1048,1049,1051,1224],invert:[1032,1034,1036],invest:1224,invoc:[831,832],irrespect:1178,is_al:1066,is_arrai:[112,266,397,510,625,907,1066],is_float_dtyp:883,is_int_dtyp:883,is_mean:1066,is_sum:1066,is_var:[1172,1176],is_vari:[148,320,434,552,698,1009],isfinit:[83,199,373,481,595,779],isinf:[266,510,625,907],isinst:1066,isnan:[266,510,625,907],isnumer:1066,item:[15,19,40,41,792,804,805,833,842,843,845,852,854,856,858,864,883,890,907,927,951,991,992,1066,1110,1114,1115,1116,1119,1120,1121,1178,1207,1208,1220],iter:[15,16,17,18,19,40,41,42,831,832,833,836,837,839,840,842,843,846,847,854,856,857,858,859,864,877,907,909,919,925,926,940,953,969,974,978,979,982,987,989,993,996,1001,1006,1007,1066,1110,1111,1112,1114,1118,1119],iterbal:[833,854,858,864,1066],its:[833,877,907,914,953,979,995,1001,1066,1178],itself:[43,1110,1119],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,368,370,371,373,374,775,776,777,779,780,789,790,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,838,839,840,842,843,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1176,1178,1179,1181,1182,1183,1184,1185,1186,1188,1189,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1222,1223],ivy_backend:[40,41],ivy_bay:1224,ivyfcmodel:1220,ivyh:[40,41,42],ivymodul:[179,760],jame:1178,jax:[1009,1015,1178,1224],jax_concat:1178,jnp:1178,join:[40,41,907,925,993,1066],journal:1178,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1178,1195,1204,1224],kaimingnorm:[1186,1190],kalman:1224,kalman_filt:1224,kalman_filter_step:1224,kalman_filter_upd:1224,keep:[40,41,833,878,907,1003,1066,1178,1224],keep_inner_v:[1062,1063,1064],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1062,1063,1064],keepdim:[40,41,789,790,907,1003,1032,1035,1038,1129,1131,1132,1133,1134,1135,1136,1137],kei:[15,16,17,40,41,42,792,797,833,845,907,927,1062,1063,1064,1066,1110,1113,1117,1147,1158,1159,1178,1184,1185,1195,1206,1211,1215],kept:[40,41,42,1062,1063,1064],kera:1224,kernel:[1147,1157],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,833,842,843,855,859,865,907,911,934,935,936,966,1066,1110,1114,1207,1208],keyword_color_dict:[40,41,42],kind:[775,776,777,1224],kwarg:[15,16,17,40,41,42,59,63,833,842,855,859,865,907,966,1066,1166,1167,1168,1172,1184,1185,1207,1208],kwarg_stateful_idx:[1166,1167,1168,1172,1207,1208],kwargs_clon:1066,kwargs_dist:1066,kwargs_uni:1066,label:[1160,1161,1162,1163],lamb:[1009,1016,1178,1211],lamb_upd:1009,lambda:[1066,1211,1214,1216,1220],lar:[1009,1016,1017,1178,1211],larger:[775,776,907,922],largest:[40,41,775,776,777,907,912,941],lars_upd:1009,last:[40,41,789,790,907,910,929,963,989,993,1032,1035,1037,1129,1134,1136,1139,1144,1147,1157,1195,1205],later:[40,41,907,920],latest:[1195,1204],layer:[1009,1012,1014,1016,1018,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1164,1165,1178,1186,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218,1224],layer_norm:1164,layernorm:[1178,1209],layerwis:[1009,1017,1211,1214],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1110,1111,1118],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1139,1140,1141],leaky_relu:[752,1139],learn:[1009,1012,1014,1016,1017,1018,1062,1063,1064,1065,1122,1128,1178,1211,1212,1213,1214,1215,1216,1221,1224],learnabl:[1164,1165,1209,1210],leav:[15,18,19,40,41,1110,1111,1112,1118,1119],left:[40,41,1032,1035,1038,1129,1131,1132,1133,1134,1135,1136,1137,1178],leftmost:[40,41],len:1066,length:[40,41,42,907,910,979,990,1001],lenton2021ivi:1178,lenton:1178,less:[40,41,43,907,921,1066,1122,1126],less_util_node_str:1066,let:[1221,1224],level:1178,librari:[1178,1220,1224],lightweight:1178,like:[43,1009,1015,1122,1126,1178,1220,1221,1224],limit:[40,41,42,775,776,777,907,922,923,924],linalg:[29,1033,1034,1035,1036,1037,1038,1039,1178],linear0:[1178,1220],linear1:1178,linear2:1220,linear:[907,943,963,1032,1139,1140,1141,1142,1147,1155,1178,1195,1196,1197,1198,1199,1200,1201,1202,1220],linear_resampl:[112,266,397,510,625,907],linearli:[907,943],link:1178,linspac:[112,266,397,510,625,907,910],list:[15,18,19,40,41,43,789,790,833,842,843,852,853,855,856,857,859,862,863,877,907,910,915,917,969,988,989,998,1003,1062,1063,1064,1066,1110,1111,1112,1114,1118,1119,1147,1148,1149,1150,1151,1152,1153,1154,1178,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202],list_join:[40,41,42],list_stack:[40,41],littl:1221,load:[40,41],loaded_kwarg:1066,loader:1178,local_set:[907,951],locat:[43,907,961,962,1122,1123],log:[719,907,965,1044,1066,1160,1161,1162,1163,1178],log_all_op:1172,log_global_inference_abs_tim:[1169,1178],log_global_inference_rel_tim:[1169,1178],logarithm:[1044,1057],logic:[31,789,790,1041,1042,1043,1178],logical_and:[334,715,1040],logical_not:[334,715,1040],logical_or:[334,715,1040],logit:[1160,1163],logspac:[112,266,397,510,625,907],look:[43,1221,1224],loop:[1062,1063,1064,1065],loss:[1161,1162,1163,1178,1220],loss_fn:[1178,1220],lot:1221,low:[40,41,1122,1124,1126],lower:[40,41,907,968,1122,1126],lower_depth:[1207,1208],lowest:[15,18,19,40,41,1110,1119,1122,1124],lstm:[1147,1157,1178,1195],lstm_updat:[43,1147],machin:[775,776,777,1122,1128,1178,1221,1224],mai:[907,910,933,937,1178,1221,1224],main:[907,953,1178],mainli:1178,make:[43,833,1066,1178,1221],maml:[1062,1063,1064],maml_step:1062,manag:[833,1066],mani:[40,41,43,907,989,1178],manner:[15,18,19,40,41,43,1110,1119],manual:[1110,1111,1118,1224],map:[40,41,42,833,842,907,961,962,1066,1110,1115,1116,1119,1195,1206,1220],map_cont:[40,41],map_nest_at_index:1110,map_nest_at_indic:1110,map_sequ:[40,41],mapper:[833,842,843,1066],mask:[1147,1158,1159],match:[40,41,907,966],match_kwarg:907,math:[33,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1066,1178],mathbb:[1032,1039],mathbf:[1032,1039],matmul:[43,266,510,625,907,1224],matplotlib:1221,matric:[1147,1156],matrix:[40,41,907,909,923,967,1032,1033,1034,1035,1036,1039,1147,1156,1195,1205],matrix_norm:[40,41,155,329,443,561,708,1032],matter:1178,max:[40,41,368,775,776,777,907,923,924,935,968,981,982,1066,1129,1131,1211,1213],max_batch_s:[40,41],max_chunk_s:[833,877,1066],max_depth:[40,41,833,837,840,847,855,859,865,907,951,1066,1110,1119],max_dev_dim_step_ratio:833,max_freq:[907,943],max_length:[40,41],max_node_dim_step_ratio:1066,max_norm:[40,41,907,923,924],max_split_factor_step_s:[833,1066],max_trust_ratio:[1009,1016,1211,1213],maxim:[1178,1221,1224],maximis:1178,maximum:[40,41,42,625,833,855,859,865,877,907,912,922,923,924,943,1009,1016,1066,1110,1119,1129,1131],mayb:[15,18,19],mdi:1066,mean:[40,41,833,862,863,864,865,877,907,935,1062,1063,1064,1065,1066,1110,1114,1122,1125,1129,1132,1135,1137,1186,1220,1224],measur:[1147,1158,1195,1206],mech:1178,mechan:[1178,1224],medic:1224,memori:[833,849,872,877,879,882,1066,1147,1157,1178],meshgrid:[266,625,907],messag:[1222,1223],meta:[35,1063,1064,1065,1178],method:[40,41,42,43,907,915,927,969,981,982,1009,1016,1017,1066,1110,1111,1118,1119,1178,1195,1206,1207,1208,1221],might:[907,933,1224],min:[40,41,368,775,776,777,907,935,970,981,982,991,1066,1129,1133],min_bas:[907,992],min_denomin:[907,991],min_dev_dim_s:833,min_node_dim_s:1066,min_sf_tune_step:[833,1066],min_unit_dev_tune_step:833,min_unit_node_tune_step:1066,mind:1178,mini:[1164,1165,1209,1210],minimum:[40,41,625,833,883,887,907,910,913,915,922,948,949,983,984,991,992,1066,1129,1133],miss:[1211,1215],ml_framework:[907,910],mod:[907,942],mod_depth:[1207,1208],mod_height:[1207,1208],mod_with_top_mod_key_chain:[1207,1208],mode:[40,41,831,832,833,862,863,864,865,877,1032,1037,1066,1221],model:[1178,1220],modul:[40,41,42,59,907,971,1066,1178,1179,1181,1182,1183,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1209,1210,1217,1218,1224],moment:[1009,1011,1012,1016,1211,1212,1213],more:[43,907,993,1066,1178,1221,1224],more_util_node_str:1066,most:[40,41,43,1178,1224],move:[40,41,43,833,878,1066],much:[1178,1224],multi:[907,971,1147,1158,1195,1206],multi_head_attent:1147,multi_index_nest:1110,multi_map:[40,41],multi_nod:1066,multidev:[833,844,845,846,865],multidevcontain:[40,41],multidevic:[833,842],multidevit:[833,836,839,842,843,847],multidevitem:[833,835,838],multidevnest:[833,837,840],multiheadattent:[1178,1195],multinod:[1066,1070],multinodecontain:1066,multinodeit:1066,multinodeitem:1066,multinodenest:1066,multinomi:[161,339,450,567,736,1122],multipl:[40,41,789,790,907,966,989,1032,1034,1129,1131,1132,1133,1134,1135,1137,1164,1165,1195,1205,1221],multipli:[40,41,907,930,1129,1134],multiprocess:[40,41,42,625,833,842,907,1066],must:[40,41,42,43,779,780,789,790,792,817,833,862,863,864,865,877,907,910,925,927,929,937,968,970,982,993,1044,1050,1054,1066,1122,1127,1211,1215],mutabl:[1110,1112,1119],mutlidevic:[833,842],mutlinod:1066,mw_tm1:[1009,1012,1016],mx_concat:1178,mxnet:[43,1178,1224],my_func:43,mymodel:1178,name:[831,832,1166,1167,1168,1172,1220],namespac:[43,1221],nan:[40,41,779,780,907,952,962,1004],nativ:[15,17,18,19,40,41,43,833,849,851,860,861,872,879,882,883,888,895,896,1066,1178,1179,1184,1185],native_modul:[1184,1185],native_module_class:[1184,1185],nativearrai:[15,18,19,43,775,776,777,779,780,789,790,792,817,833,851,877,878,883,887,893,898,899,907,908,909,910,912,913,914,915,916,917,919,921,922,923,924,925,926,928,929,930,931,934,935,936,937,939,940,941,942,943,945,946,950,952,953,954,961,962,963,964,965,967,968,969,970,973,974,975,978,979,980,981,982,987,989,990,993,995,996,998,999,1000,1001,1003,1004,1005,1006,1007,1008,1066,1110,1112,1119],natur:[1044,1057,1224],ncdhw:[1147,1152,1153,1195,1200,1201],nchw:[1147,1150,1151,1154,1195,1198,1199,1202],ncw:[1147,1148,1149,1195,1196,1197],ndarrai:[43,368,370,371,373,374,907,999],ndhwc:[1147,1152,1153,1195,1200,1201],nearest:[907,980],need:[43,907,923,924,1147,1149,1151,1153,1178,1195,1197,1199,1201,1224],neg:[40,41,779,780,789,790,1129,1134,1136,1139,1141],negative_slop:1186,neither:1066,nest:[15,16,17,18,19,40,41,42,833,855,859,865,907,915,998,1062,1063,1064,1066,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1207,1208,1211,1212,1213,1214,1215,1216],nested_indices_wher:1110,nested_map:[1066,1110],network:[1147,1156,1178,1179,1181,1195,1207,1208,1224],neural:[1147,1178,1181,1195,1220],new_node_percent_mem:1066,new_node_util:1066,new_node_utils_kei:1066,new_std:[1164,1165,1209,1210],newli:[831,832,907,919,920],newlin:[40,41,42],newshap:[907,919,979],next:[775,776,1066,1207,1208,1211,1212,1213,1214,1215,1216],nhwc:[1147,1150,1151,1154,1195,1198,1199,1202],node:[40,41,1110,1111,1118],node_clon:1066,node_dist:1066,node_dist_arrai:1066,node_dist_it:1066,node_in:1066,node_mapp:1066,node_str:1066,node_to_str:1066,node_util:1066,nodedistit:1066,nodedistitem:1066,nodedistnest:1066,nodemanag:[1066,1077],nodemapp:1066,nodemappermultiproc:1066,noinspect:[43,834,884,885,886,1010,1066,1173],non:[40,41,789,790,831,832,883,897,1207,1208,1211,1215,1221],none:[40,41,42,43,59,61,64,775,776,777,789,790,831,832,833,842,843,849,850,875,876,877,878,883,890,891,892,907,910,915,932,933,938,940,944,945,946,951,953,955,956,957,958,959,964,965,971,973,974,975,978,981,982,983,984,989,990,991,992,1001,1002,1007,1008,1009,1012,1014,1016,1017,1018,1024,1025,1029,1032,1035,1038,1062,1063,1064,1065,1066,1110,1111,1114,1118,1119,1122,1123,1124,1125,1126,1129,1131,1132,1133,1134,1135,1136,1137,1147,1149,1151,1153,1156,1157,1158,1159,1164,1165,1166,1167,1168,1172,1176,1184,1185,1186,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218],norm:[40,41,907,923,924,1032,1035,1038,1165,1178,1210,1211,1213],normal:[1122,1125,1164,1165,1209,1210],normalized_idx:[1164,1165],normalized_shap:[1209,1210],notat:[40,41,1129,1130],note:43,noth:[40,41,1221],notimplementederror:1066,now:[40,41,833,878,907,908,1066,1178,1195,1206,1207,1208,1220,1221,1224],np_concat:1178,np_finfo:368,ns_tune_step:1066,num:[907,964,965],num_arrai:[40,41],num_arrays_in_memori:907,num_arrays_on_dev:833,num_band:[907,943],num_channel:[1195,1202],num_chunk:1066,num_chunks_floor:1066,num_class:[1122,1123],num_cpu_cor:833,num_gpu:[105,833,1066],num_head:[1147,1158,1195,1206],num_kei:[1147,1158,1159],num_lay:[1195,1204],num_or_size_split:[40,41,907,989],num_output:1066,num_queri:[1147,1158,1159],num_sampl:[907,963,1025,1026,1122,1123],num_task:[1062,1063,1064,1065],number:[40,41,42,775,776,777,789,790,831,832,833,869,870,871,883,894,898,899,907,910,922,926,939,943,950,953,962,963,964,965,968,972,978,989,996,1000,1004,1006,1032,1037,1062,1063,1064,1065,1066,1122,1123,1127,1129,1131,1132,1133,1135,1137,1147,1158,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1221,1224],numer:[43,779,780,792,817,907,948,949,983,984,991,992,1044,1054,1186],numhead:[1147,1158],numpi:[40,41,368,370,371,373,374,907,999,1032,1037,1129,1130,1178,1220,1221,1224],nwc:[1147,1148,1149,1195,1196,1197],obj:[40,41],object:[40,41,42,59,368,775,776,777,833,883,887,907,910,915,1009,1110,1113,1115,1116,1117,1120,1121,1122,1128,1172,1176,1186,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1207,1208],object_in:[907,915],observ:1066,occupi:[775,776,777,907,981,982],off:[907,910],offer:1178,offset:[1164,1165],often:1221,old:[40,41],on_init:[1195,1206,1207,1208],onc:[833,877,1066,1122,1123,1178],one:[40,41,43,833,862,863,864,865,877,883,889,907,953,966,973,981,982,990,993,1032,1035,1038,1066,1129,1130,1131,1132,1133,1134,1135,1136,1137,1178,1221,1224],one_hot:[112,397,510,625,907],onearrai:[907,939],ones:[40,41,112,266,397,510,625,907,953,973,975,1178],ones_lik:[112,266,397,510,625,907],ongo:43,onli:[40,41,43,833,1066,1110,1111,1112,1118,1211,1212,1213,1214,1215,1216,1220,1221],onlin:1178,onto:[833,862,863,878,1066,1110,1114,1119],oom:[833,1066],open:[907,910,1122,1126,1178,1224],opencv:1221,oper:[40,41,907,918,934,935,936,964,965,994,1009,1012,1014,1016,1017,1018,1040,1041,1042,1043,1147,1148,1149,1150,1151,1152,1153,1154,1156,1178,1179],operand:[40,41,1129,1130],oppos:[907,943],optim:[833,1009,1012,1014,1016,1017,1018,1062,1063,1064,1065,1066,1178,1212,1213,1214,1216,1220,1224],optimizer_upd:1009,option:[15,18,19,40,41,42,43,789,790,831,832,833,842,843,851,855,856,857,858,859,862,863,864,865,872,875,876,877,878,882,883,888,893,897,906,907,909,910,912,913,914,915,923,924,925,930,932,933,940,943,944,945,946,950,952,953,960,963,964,965,966,969,971,973,974,975,978,981,982,985,987,989,990,991,992,993,1001,1003,1004,1007,1008,1009,1012,1014,1015,1016,1017,1018,1020,1025,1029,1032,1035,1038,1062,1063,1064,1065,1066,1110,1111,1112,1114,1118,1119,1122,1123,1129,1131,1132,1133,1134,1135,1136,1137,1139,1140,1144,1147,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1221],ord:[907,940,1032,1037],order:[40,41,42,43,907,914,1009,1012,1014,1016,1017,1018,1032,1035,1038,1062,1063,1064,1217,1218],ordered_node_util_kei:1066,org:1224,organ:43,origin:[40,41,42,907,975,979,1008,1032,1035,1038],other:[40,41,43,792,794,795,800,802,803,807,809,810,811,812,813,815,817,818,819,820,821,822,824,825,826,828,829,830,831,832,907,909,910,953,1009,1013,1122,1126,1178,1220,1221,1224],other_i:[43,792,817],otherwis:[15,16,17,18,19,40,41,779,780,789,790,833,850,883,890,891,892,907,918,1001,1002,1005,1009,1015,1020,1024,1062,1063,1064,1066,1129,1131,1132,1133,1135,1137],our:[1178,1224],out:[907,910,1044,1049,1147,1155,1157,1178,1195,1203],out_feat_dim:[1147,1158],out_featur:[1147,1155,1156],out_i:[779,780],outdat:1224,outer:[1062,1063,1064,1065],outer_batch_fn:[1062,1063,1064],outer_batch_shap:[1147,1156],outer_cost_fn:[1062,1063,1064],outer_v:[1062,1063,1064],outlin:1221,output:[40,41,43,833,842,843,877,907,910,920,944,953,978,996,1009,1013,1044,1050,1066,1122,1124,1125,1126,1147,1149,1151,1153,1155,1157,1158,1159,1178,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206],output_ax:[833,877,1066],output_axi:1066,output_channel:[1195,1196,1197,1198,1199,1200,1201,1204,1205],output_connected_onli:[1166,1168,1172,1207,1208],output_queu:1066,output_shap:[1147,1149,1151,1153,1195,1197,1199,1201],outsid:[907,922],over:[40,41,789,790,907,940,1032,1035,1038,1122,1126,1129,1131,1132,1133,1135,1137,1164,1165,1209,1210],overal:1221,overflow:[907,910],overhead:1221,overrid:[907,973,975,1008],overriden:[1211,1215],overwrit:[40,41,833,877,1066],overwrite_at_key_chain:[40,41],own:[1178,1221,1224],packag:[43,1221],pad:[907,926,943,1006,1147,1148,1149,1150,1151,1152,1153,1154,1195,1196,1197,1198,1199,1200,1201,1202],pad_width:[907,926,1006],page:1178,pair:[1147,1159],parallel:[833,842,843,1066],parallelis:[833,842,843,1066],param:[40,41,42,43,833,877,907,908,945,946,973,974,1007,1066,1177,1178,1207,1208,1220],paramet:[15,16,17,18,19,40,41,42,775,776,777,779,780,789,790,792,817,831,832,833,842,843,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,872,875,876,877,878,879,882,883,887,888,889,893,894,895,896,897,898,899,906,907,909,910,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,928,929,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,950,952,953,954,956,957,958,960,961,962,963,964,965,966,967,968,969,970,971,974,975,978,979,980,981,982,983,984,985,987,988,989,990,991,992,993,994,995,996,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1011,1012,1013,1014,1015,1016,1017,1018,1020,1022,1023,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220],parameter:[1122,1125,1126],params_all_empti:1172,pardo:1178,pars:[907,927],part:[1009,1012,1014,1016,1017,1018,1044,1049,1178,1207,1208,1221],partial:[40,41,1207,1208],particl:1224,particular:1224,pass:[40,41,42,833,842,877,883,888,907,920,1009,1023,1062,1063,1064,1066,1184,1185,1207,1208,1211,1215,1217,1218],pattern:[40,41,907,934,935,936],per:[833,1066,1147,1148,1149,1150,1151,1152,1153,1154,1195,1196,1197,1198,1199,1200,1201,1202],percent_used_mem_on_dev:833,percent_used_mem_on_nod:1066,percentag:[833,872,1066],perf_count:1066,perform:[40,41,43,789,790,833,907,912,913,914,930,934,935,936,956,957,958,963,964,965,1009,1012,1014,1016,1017,1018,1025,1026,1062,1063,1064,1065,1066,1110,1115,1116,1129,1131,1132,1133,1134,1135,1136,1137,1139,1144,1147,1155,1157],permissable_step:1066,permit:43,permut:[907,995,1001],perpendicular:[907,929],person:1178,physci:1224,pickl:[40,41,1066],pickle_filepath:[40,41],pid:1172,pinv:[329,708,1032],pip:1178,pipelin:1220,pkk:1224,pkkm1:1224,pkm1km1:1224,place:[40,41,43,833,878,907,939,944,956,957,958,1066,1211,1212,1213,1214,1215,1216],placehold:[1110,1119],point:[775,776,883,898,907,910,1044,1054],popul:[40,41,1122,1123],popular:1224,population_s:[1122,1123],portabl:[1178,1179],posit:[15,16,17,775,776,779,780,833,855,859,865,907,908,910,939,943,1066,1122,1127,1184,1185],possibi:[40,41],possibl:[907,966,998,1025,1030,1224],post:[1164,1165],post_shap:[40,41],power:[43,792,817,823,907,948,983,992,1186],practic:1178,pre:[833,1066,1178],pre_shap:[40,41],precis:[775,776],pred:[1160,1161,1162,1163],predict:[1160,1161,1162,1163,1224],preprint:1178,present:[40,41],preserv:[40,41,42,907,940,1009,1020],preserve_typ:[40,41,1009,1020],press:1178,prevent:[43,1009,1011,1012,1016,1066,1211,1212,1213],previou:[1009,1012,1016],previous:[907,920],prime:1178,print:[40,41,42,833,873,907,976,1178,1220],print_all_arrays_in_memori:907,print_all_arrays_on_dev:833,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1211,1215],prob:[1122,1123,1147,1155,1195,1203],probabl:[1122,1123,1147,1155,1195,1203],problem:[43,1224],process:[43,833,842,843,872,882,907,971,1066],process_specif:[833,872,882,1066],prod:[40,41,907,935],produc:[833,842,843,1066],product:[40,41,907,929,930,967,1129,1130,1147,1158,1159,1195,1206],profil:[105,260,395,503,617,833,1066],project:[1178,1220,1221,1224],promot:[43,792,817,1044,1054],prompt:1178,properli:43,properti:[40,41,368,833,845,1066,1172,1176,1207,1208,1211,1212,1213,1214,1216],provid:[40,41,43,789,790,831,832,833,850,883,890,891,892,897,906,907,933,973,975,982,1008,1009,1012,1014,1016,1017,1018,1024,1066,1178,1195,1204,1211,1212,1213,1214,1215,1216,1221],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1032,1036],ptype:[1172,1176],pure:[40,41,1178,1224],purpos:1224,put:1066,pybroadexcept:1066,pyprotectedmemb:[1066,1173],pyshadowingbuiltin:43,pyshadowingnam:[834,884,885,886,1010,1066],python:[40,41,833,872,882,907,910,1066,1178],pytorch:[1009,1012,1014,1016,1017,1018,1178,1211,1212,1213,1214,1215,1216,1220,1221,1224],pyunresolvedrefer:1066,quadrant:[1044,1050],queri:[40,41,792,806,827,833,866,876,1066,1147,1158,1159,1195,1206],query_dim:[1195,1206],query_kei:[40,41],queue:[40,41,42,833,842,843,907,977,985,1066],queue_class:[833,842,843,1066],queue_load_s:[40,41,42],queue_timeout:[40,41,42,907,1066],quick:1178,quickli:1220,radian:[1044,1045,1047,1050,1052,1058,1060],rai:[1044,1045],rais:[40,41,43,789,790,792,817,907,918,948,983,990,992,1002,1066,1207,1208,1211,1215],ram:[833,872,879,882,1066],randint:[161,339,567,736,1122],random:[37,40,41,1123,1124,1125,1126,1127,1128,1178],random_crop:1025,random_norm:[161,339,567,736,1122],random_uniform:[161,339,567,736,1122],randomli:[1025,1029,1147,1155,1195,1203],randomness_factor:[1166,1168,1172,1207,1208],rang:[907,910,964,965,1044,1050,1066,1178,1220,1224],rank:[789,790,907,926,1003,1006],rate:[1009,1012,1014,1016,1017,1018,1062,1063,1064,1065,1195,1206,1211,1212,1213,1214,1215,1216],rather:[40,41,833,877,907,910,960,1009,1015,1066],ratio:[833,1009,1016,1025,1030,1066,1211,1213],raw:[40,41],raw_delta:1066,reach:[833,855,859,865,1066,1110,1119],read:[40,41],readi:[1066,1220],real:[1044,1045,1049],realiti:1221,rearrang:[40,41,907,934,936],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1062,1064],receiv:[833,842,843,907,911,966,1066,1195,1205],receivess:[833,1066],receiving_fn:1172,receivng:[1062,1065],recev:[1062,1063,1064],recognit:1224,recommend:1178,rectifi:[1139,1141,1142],recurr:[1147,1157],recurrent_bia:[1147,1157],recurrent_kernel:[1147,1157],recurs:[40,41,1110,1111,1112,1118,1119],redefin:43,reduc:[40,41,789,790,833,877,907,935,1066,1129,1131,1132,1133,1134,1135,1136,1137],reduce_max:[40,41,168,344,452,572,743,1129],reduce_mean:[40,41,168,344,452,572,743,1129,1178,1220],reduce_min:[40,41,168,344,452,572,743,1129],reduce_prod:[40,41,168,344,452,572,743,1129],reduce_std:[40,41,344,1129],reduce_sum:[40,41,168,344,452,572,743,1066,1129],reduce_var:[40,41,168,344,452,572,743,1129],reduct:[39,40,41,789,790,907,935,981,982,1130,1131,1132,1133,1134,1135,1136,1137,1178],refactor:43,refer:[789,790,1009,1011,1012,1032,1039,1195,1205,1224],reflected_oper:[0,13,14],regard:[833,1066],regardless:[40,41,831,832],register_paramet:1220,reimplement:1224,rel:[1009,1012,1014,1016,1017,1018],rel_slice_obj:1066,relev:[1211,1212,1213,1214,1215,1216],relu:[752,1139,1140,1141,1178,1220],remain:[43,907,979,1110,1114],remaind:[40,41,907,942,989],remov:[40,41,907,990,1062,1063,1064],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,907,940],rep:[907,996],repeat:[40,41,266,625,907,936,996,1066,1221],repeated_config_check:[833,1066],repeatedli:[1110,1117],repetit:[40,41,907,978,996],replac:[40,41,43,907,922,981,982,1122,1123],repo:1178,repres:[43,883,889,894,1147,1156],represent:[40,41,42,43,775,776,777,833,860,861,883,889,895,896,907,988,998,1066],reptil:[1062,1065],reptile_step:1062,requir:[43,831,832,883,887,907,910,915,1184,1185],resampl:[907,963],reshap:[40,41,43,625,907],reshape_lik:[40,41],respect:[907,937,1009,1011,1012,1013,1014,1016,1017,1018,1044,1054,1062,1063,1064,1065],respons:1066,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,779,780,789,790,792,817,833,842,907,910,937,981,982,993,1032,1035,1038,1040,1041,1042,1043,1044,1054,1066,1129,1131,1132,1133,1134,1135,1136,1137,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1178],ret:1066,ret_dict:1066,ret_fn:[833,842,843,1066],retain:[1009,1013],retain_grad:[1009,1013],retreiv:1066,retrn:[907,988],return_cont:[40,41],return_dict:[40,41],return_graph:[1166,1167,1168],return_inner_v:[1062,1063,1064,1065],return_sequ:[1195,1204],return_st:[1195,1204],rev:[907,933],revers:[40,41,907,933,940,1001],right:[40,41],rk_e:1224,robot:1178,ronald:1178,round:[266,625,907,910,1066],row:[907,953,1122,1123],rule:[43,792,817,907,910,1044,1054],run:[833,842,1009,1011,1012,1016,1062,1063,1064,1065,1066,1178,1179,1195,1206,1207,1208],safe:[833,842,1066],safety_factor:[833,1066],same:[15,16,17,40,41,43,833,842,843,877,878,883,887,907,908,921,925,941,942,945,946,973,975,980,981,982,993,1008,1009,1015,1020,1032,1037,1044,1049,1062,1063,1064,1066,1129,1130,1147,1148,1149,1150,1151,1152,1153,1154,1178,1195,1196,1197,1198,1199,1200,1201,1202,1220,1224],same_arrai:[40,41],sampl:[907,963,1025,1026,1122,1123,1125,1126,1147,1155,1178,1195,1203],satisfi:[907,915,1032,1034,1039],save:[40,41,907,986,997,1025,1027,1207,1208],save_debug_info:1172,save_dir:[833,848,1066],save_to_disk:[1166,1168,1172,1207,1208],save_weight:[1207,1208],scalar:[907,922,973,1000,1004],scale:[833,875,876,1009,1017,1066,1147,1155,1158,1159,1164,1165,1195,1203,1206,1211,1214],scaled_dot_product_attent:1147,scatter:[907,973,981,982],scatter_flat:[112,266,397,510,625,907],scatter_nd:[112,266,397,510,625,907],scene:[1009,1012,1014,1016,1017,1018],schemat:1178,screen:[40,41],search:[15,18,19,40,41],second:[40,41,833,864,907,916,929,937,977,985,995,1009,1011,1012,1016,1062,1064,1066,1211,1212,1213],secondli:1224,see:[43,59,368,789,790,792,817,833,845,846,847,848,883,907,910,964,965,1009,1044,1054,1172,1176,1178,1186,1188,1189,1191,1192,1194],seed:[40,41,161,736,1122],seed_valu:[40,41,1122,1127],seem:1178,seen_set:[907,951],select:[907,915,990,1221,1224],self:[40,41,43,59,368,792,817,833,845,846,847,848,883,1009,1066,1172,1176,1178,1186,1188,1189,1191,1192,1194,1211,1215,1220,1224],sent:1066,seper:[907,943],seq:[40,41,42,1129,1130,1207,1208],sequenc:[15,16,17,40,41,42,43,831,832,833,842,843,852,853,854,855,856,857,858,859,862,863,877,883,887,907,910,915,917,919,925,926,940,953,966,969,974,978,979,982,989,993,996,1001,1006,1007,1009,1013,1025,1029,1030,1032,1035,1038,1066,1110,1121,1122,1124,1126,1129,1131,1132,1133,1134,1135,1136,1137,1147,1148,1149,1150,1151,1152,1153,1154,1164,1165,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1204,1207,1208,1209,1210,1211,1215,1217,1218],sequenti:1178,set:[15,18,19,40,41,833,862,863,875,876,877,907,909,932,953,983,984,985,986,1009,1012,1014,1015,1016,1017,1018,1032,1035,1038,1066,1110,1111,1118,1120,1121,1122,1123,1127,1129,1131,1132,1133,1134,1135,1136,1137,1176,1178,1195,1204,1211,1212,1213,1214,1215,1216,1221,1224],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1176,set_debug_mod:44,set_default_devic:833,set_default_dtyp:883,set_default_float_dtyp:883,set_default_int_dtyp:883,set_default_nod:1066,set_exception_debug_mod:44,set_framework:[40,41,59,1066,1178,1220,1221,1224],set_ivy_backend:[40,41],set_min_bas:907,set_min_denomin:907,set_nest_at_index:1110,set_nest_at_indic:1110,set_param:1172,set_queue_timeout:907,set_split_factor:[833,1066],set_stat:[1211,1212,1213,1214,1215,1216],set_tmp_dir:907,set_with_grad:1009,setter:1066,sever:1224,sgd:[1178,1211],shape0:1066,shape:[40,41,43,625,833,845,883,887,907,908,919,921,925,926,939,940,941,942,944,946,950,953,973,974,975,978,979,980,981,982,988,990,993,1006,1007,1008,1025,1029,1032,1034,1044,1049,1050,1066,1122,1124,1125,1126,1129,1130,1147,1149,1151,1153,1172,1176,1195,1197,1198,1199,1200,1201,1202,1209,1210],shape_slic:[40,41],shape_to_tupl:907,share:[40,41,1178,1221],shift:1066,should:[40,41,42,43,779,780,792,817,831,832,833,907,919,920,927,973,979,1009,1012,1014,1016,1017,1018,1044,1054,1066,1129,1130,1178],show:[40,41,1172,1178,1224],show_debug_info:1172,show_graph:[1166,1178,1207,1208,1211,1215],show_mod_in_top_mod:[1207,1208],show_structur:[1207,1208],show_sub_contain:[40,41],show_v:[1207,1208],show_v_in_top_v:[1207,1208],shown:[40,41],shp:1066,shuffl:[40,41,161,736,1122],shuffle_h5_fil:[40,41],sigmoid:[752,1139,1178,1220],signatur:[43,59,368,833,845,846,847,848,883,1009,1172,1176,1186,1188,1189,1191,1192,1194],signific:1224,similar:[43,1147,1158,1195,1206],simpl:[43,907,938,1178,1221,1224],simplest:1221,simpli:[40,41,43,1178,1221,1224],simultan:1178,sin:[719,907,943,1044,1060,1221],sinco:1221,sine:[1044,1047,1048,1058,1059],singl:[40,41,831,832,833,842,843,862,863,864,865,907,990,1000,1004,1025,1030,1066,1122,1125,1126,1129,1131,1132,1133,1134,1135,1136,1137,1178,1221,1224],singleton:[789,790],singular:[1032,1037],sinh:[719,1044],siren:[1178,1186],size:[40,41,42,833,856,857,858,859,875,876,877,907,910,919,964,965,981,989,1025,1029,1032,1035,1037,1038,1066,1122,1123,1125,1126,1129,1131,1132,1133,1134,1135,1136,1137,1195,1196,1197],size_ordered_arrai:[40,41],skew:[1032,1039],skinv:1224,skip:[40,41],slice:[40,41,907,914,945,946,1066,1110,1117],slice_kei:[40,41],slice_obj:[40,41,1066],slice_via_kei:[40,41],slide:[1147,1148,1149,1150,1151,1152,1153,1154,1195,1196,1197,1198,1199,1200,1201,1202],slope:[1139,1141],small:[1160,1161,1162,1163,1164,1165,1178,1209,1210,1221],smaller:[907,922],smallest:[40,41,775,776,777,907,913,921],smallest_norm:[368,775,776],softmax:[177,461,752,1139,1147,1158,1159],softplu:[752,1139],solv:1224,some:[40,41,43,907,910,1009,1011,1012,1014,1016,1017,1018,1023,1147,1155,1178,1195,1203,1221,1224],some_backend:43,some_namespac:43,someth:[43,1224],something_cool:43,somewher:[40,41],sort:[40,41,42,907,914,1032,1037,1066],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,368,370,371,373,374,775,776,777,779,780,789,790,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,836,837,838,839,840,842,843,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1176,1181,1182,1183,1184,1185,1186,1188,1189,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1222,1223,1224],space:[907,910,943,964,965],spars:[1160,1163],sparse_cross_entropi:1160,spawn:[907,971],specif:[40,41,43,833,875,907,927,934,935,936,971,1062,1063,1064,1065,1066,1122,1128,1178,1207,1208,1220,1221],specifc:[1122,1123],specifi:[40,41,43,789,790,833,852,853,854,855,856,857,858,859,862,863,867,869,873,876,877,878,883,887,889,907,910,912,913,915,922,925,926,944,945,946,952,964,965,993,1003,1006,1032,1035,1038,1066,1110,1115,1116,1120,1121,1129,1130,1131,1132,1133,1134,1135,1136,1137],split:[40,41,112,266,397,510,625,833,842,856,857,858,859,875,876,877,907,966,1066],split_arg:1066,split_factor:[833,842,1066],split_func_cal:[833,1066],split_siz:1066,spread:[833,865,1066],squar:[907,953,1032,1034],squeez:[112,266,397,510,625,907],stabil:[907,991,992],stabl:[907,948,949,983,984,991,992],stable_divid:907,stable_pow:907,stack:[40,41,266,625,907,1025,1030,1110,1111,1118,1195,1204],stack_imag:[151,325,439,557,704,1025],stacked_dim_s:1066,stage:43,standard:[40,41,43,775,776,1122,1125,1129,1135,1164,1165,1209,1210],start:[40,41,833,848,907,910,964,965,1066,1178,1221],starting_index:[40,41],starting_split_factor:[833,1066],state:[1066,1147,1157,1166,1167,1168,1172,1178,1181,1182,1183,1184,1185,1186,1188,1189,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220],statement:1221,static_argnam:[831,832],static_argnum:[831,832],std:[1122,1125],step:[40,41,833,907,910,964,965,1009,1011,1012,1014,1016,1017,1018,1062,1063,1064,1065,1066,1178,1211,1212,1213,1214,1215,1216,1220,1224],stephen:1178,stick:1178,still:[40,41],stochast:[1211,1216],stop:[40,41,833,848,877,907,910,964,965,1009,1012,1014,1016,1017,1018,1020,1062,1063,1064,1065,1066,1211,1212,1213,1214,1215,1216],stop_gradi:[40,41,320,434,552,698,833,877,1009,1012,1014,1016,1017,1018,1062,1063,1064,1065,1066,1211,1212,1213,1214,1215,1216],stopiter:1066,store:[40,41,907,943,989,1009,1023,1207,1208],store_var:[1207,1208],str:[15,16,17,40,41,42,43,368,370,371,775,776,777,831,832,833,842,843,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,877,883,888,889,894,895,896,897,898,899,906,907,915,932,934,935,936,969,971,974,981,982,1032,1035,1038,1062,1063,1064,1065,1066,1110,1114,1129,1130,1184,1185,1195,1206,1207,1208],str_to_nod:1066,straight:1221,strength:[1178,1224],stride:[1147,1148,1149,1150,1151,1152,1153,1154,1195,1196,1197,1198,1199,1200,1201,1202],string:[40,41,43,833,849,851,860,861,866,872,878,879,882,883,887,893,895,896,897,906,907,910,915,932,953,974,975,1007,1008,1066,1147,1148,1149,1150,1151,1152,1153,1154,1195,1196,1197,1198,1199,1200,1201,1202,1207,1208],structur:[40,41,42,43,907,927],structural_diff:[40,41],sub:[40,41,833,856,857,862,863,864,865,907,989,1062,1063,1064,1065,1066],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1066,sub_mod:[1207,1208],sub_modul:[1217,1218],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1178,1179,1209,1210,1217,1218],subsequ:43,subset:43,substr:[40,41],suggest:1178,suitabl:[1025,1030],sum:[40,41,833,862,863,864,865,877,907,931,935,981,982,1066,1129,1130,1136],summat:[40,41,1129,1130],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,94,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,154,156,157,158,162,163,164,165,166,167,169,170,171,172,173,174,175,178,180,181,183,184,185,186,187,188,189,195,196,197,200,210,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,326,327,328,330,331,332,333,335,336,337,340,341,342,343,345,346,347,348,349,350,351,352,355,357,358,359,360,361,362,363,369,370,371,374,384,396,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,435,436,437,438,440,441,442,444,445,446,449,451,453,454,455,456,457,458,459,462,463,465,466,467,468,469,470,471,477,478,479,482,492,504,505,506,507,508,509,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,553,554,555,556,558,559,560,562,563,564,568,569,570,571,573,574,575,576,577,578,579,583,584,585,591,592,593,596,606,618,619,620,621,622,623,624,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,699,700,701,702,703,705,706,707,709,710,711,712,713,714,716,717,718,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,737,738,739,740,741,742,744,745,746,747,748,749,750,753,754,755,756,757,758,759,761,762,764,765,766,767,768,769,770,776,777,780,790,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,832,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1041,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1063,1064,1065,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1137,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1161,1162,1163,1165,1167,1168,1170,1171,1173,1177,1178,1182,1183,1185,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1223,1224],supports_inplac:907,suppos:1224,svd:[155,329,443,561,708,1032],swap:[40,41,907,995],swapax:[40,41,510,625,907,1224],symmetr:[1032,1039],tab:1178,take:[907,963],taken:[1129,1131,1132,1133,1135,1137],tan:[719,1044,1049],tangent:[1044,1049,1050,1051,1060,1061,1139,1146],tanh:[719,752,1044,1139],target:[40,41,833,849,852,853,854,855,856,857,858,859,862,863,864,865,878,1066,1178],target_dict:[40,41],task:[1062,1063,1064,1065],team:1224,templat:1178,temporari:[907,986,997],tensor:[40,41,43,833,851,883,893,907,910,912,913,914,919,964,965,968,970,973,974,975,979,981,982,989,1007,1008,1066,1122,1123,1124,1147,1155,1157,1178,1195,1203,1205,1211,1212,1213,1214,1215,1216,1220,1221],tensorflow:[1147,1149,1151,1153,1178,1195,1197,1199,1201,1221,1224],term:[40,41,1147,1157,1178,1195,1205],termcolor:[40,41,42],termin:[40,41,42,1066],test:[779,780,789,790,883,898,899],tf_concat:1178,than:[40,41,775,776,833,877,907,910,921,922,941,960,968,990,993,1009,1015,1066,1122,1126,1178,1221],thei:[40,41,43,1044,1050,1062,1063,1064,1122,1123,1178,1217,1218,1221],them:[1178,1224],themselv:[1110,1111],therefor:43,thi:[40,41,42,43,833,855,859,865,872,877,882,907,910,943,977,979,985,1009,1012,1014,1015,1016,1017,1018,1023,1032,1035,1038,1066,1110,1114,1119,1129,1131,1132,1133,1134,1135,1136,1137,1147,1156,1178,1207,1208,1211,1212,1213,1214,1215,1216,1220,1221,1224],thing:[43,1178],those:[40,41,907,922,1009,1023,1032,1037,1066],though:43,threshold:[907,968,970],through:[40,41],tile:[266,510,625,907],time:[907,996,1009,1012,1016,1062,1063,1064,1065,1066,1122,1123,1147,1157,1195,1206,1207,1208,1224],time_chronolog:[1166,1167,1172],time_infer:[1166,1167],timeout:[40,41,42,833,842,843,907,977,985,1066],timestep:[1147,1157,1195,1204],timing_fnam:[1166,1167],titl:1178,tmp_dir:907,tmp_dr:[907,986],to_appli:[40,41],to_clon:[833,1066],to_dev:[40,41,105,260,503,617,833],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[833,1066],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1178],to_ivy_modul:[179,760,1178,1184],to_json:[40,41],to_kv_fn:[1147,1158],to_kv_v:[1147,1158],to_list:[40,41,625,907],to_multi_dev:[40,41],to_mut:[1110,1112,1119],to_n:[15,40,41,1178],to_nod:1066,to_numpi:[40,41,625,907,1178,1220],to_out_fn:[1147,1158],to_out_v:[1147,1158],to_q_fn:[1147,1158],to_q_v:[1147,1158],to_raw:[40,41],to_scalar:[625,907],todo:1066,togeth:[40,41,1217,1218],tool:[1178,1221],top_mod:[1207,1208],topic:1224,torch:[43,831,832,1178,1220,1221,1224],torch_concat:1178,torchfcmodel:1220,total:[40,41,42,833,879,1066],total_mem_on_dev:833,total_mem_on_nod:1066,tpu:[833,880,1066],tpu_is_avail:[503,617,833,1066],tpye:[883,894],trace:[40,41,907,960],track:[833,1066,1110,1119,1207,1208],track_submod_call_ord:[1207,1208],track_submod_ret:[1207,1208],trail:[1209,1210],train:[1009,1011,1012,1016,1178,1179],trainabl:[1009,1015,1178,1179,1184,1185,1207,1208,1217],trainer:1178,tran:1224,transform:[1147,1155,1156],transpos:[40,41,112,266,397,625,833,864,907,1066,1147,1149,1151,1153,1195,1197,1199,1201],travers:[15,18,19,40,41,1110,1119],treat:[40,41,831,832],tree_depth:1176,tree_height:1172,tri:[40,41],trigonometr:[1044,1045,1049,1052,1058],trim_kei:[40,41],trust:[1009,1016,1211,1213],truth:[907,937,1040,1041,1042,1043],try_else_non:907,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[833,1066],tune_dev_alloc:833,tune_dev_split:833,tune_node_alloc:1066,tune_node_split:1066,tune_step:[833,1066],tupl:[15,16,17,18,19,40,41,43,789,790,831,832,907,926,943,944,988,1006,1066,1110,1111,1112,1113,1115,1116,1117,1118,1119,1120,1121,1122,1124,1129,1131,1132,1133,1134,1135,1136,1137],two:[40,41,907,910,916,929,967,995,1032,1035,1037],type:[15,18,40,41,42,43,59,370,371,776,777,779,780,789,790,792,817,833,845,846,847,848,860,861,865,877,883,887,888,889,893,894,895,896,897,898,899,906,907,908,910,915,921,925,927,937,941,942,944,953,960,973,974,975,980,994,1004,1007,1008,1009,1015,1020,1044,1054,1066,1172,1176,1178,1186,1188,1189,1191,1192,1194,1207,1208,1221],types_to_iteratively_nest:[40,41,42],uint8:[1025,1027,1031],uint8_img_to_float_img:1025,unchang:[15,16,17,18,19],unif:1066,unifi:[40,41,833,862,863,864,865,877,1066,1178],uniform:[40,41,1122,1123,1125,1126,1186,1188,1189,1192,1193],uniformli:[1122,1124,1126],unify_arrai:1066,unify_it:1066,unify_nest:1066,union:[15,18,19,40,41,43,368,370,371,775,776,777,779,780,789,790,792,817,831,832,833,851,856,857,858,859,877,878,883,887,888,889,893,894,895,896,897,898,899,906,907,908,909,910,912,913,914,915,916,917,919,921,922,923,924,925,926,928,929,930,931,934,935,936,937,939,940,941,942,943,944,945,946,950,952,953,954,961,962,963,964,965,967,968,969,970,973,974,975,978,979,980,981,982,987,988,989,990,993,995,996,998,999,1000,1001,1003,1004,1005,1006,1007,1008,1066,1110,1111,1112,1118,1119],uniqu:[833,842,843,1062,1063,1064,1065,1066,1110,1114],unique_kwarg:1066,unit:[833,1044,1045,1047,1066,1139,1140,1141,1142],unitari:[1032,1037],unless:[907,973,975,1008],unlik:[833,1066],unnorm:[1122,1123],unpack:[907,1003],unrol:[1147,1157],unset:1221,unset_debug_mod:44,unset_default_devic:833,unset_default_dtyp:883,unset_default_float_dtyp:883,unset_default_int_dtyp:883,unset_framework:[59,1221],unset_with_grad:1009,unstack:[40,41,112,266,397,510,625,907],unus:[831,832],updat:[40,41,833,842,907,958,981,982,1009,1011,1012,1014,1016,1017,1018,1062,1063,1064,1066,1110,1115,1116,1120,1121,1147,1157,1184,1185,1211,1212,1213,1214,1215,1216,1221,1224],update_backend:[40,41],update_config:[40,41],update_inference_tim:1172,upper:[40,41,1122,1126],upper_depth:[1207,1208],usabl:[1178,1224],usag:[833,877,1066],use:[40,41,42,43,833,842,843,868,880,907,978,991,992,1066,1147,1158,1164,1165,1178,1209,1210,1221,1224],used:[40,41,43,833,842,872,875,876,882,883,894,907,948,949,966,975,981,982,983,984,1008,1009,1016,1017,1032,1035,1062,1063,1064,1065,1066,1110,1119,1195,1206,1211,1213,1214,1220,1221],used_dev:[833,842],used_mem_on_dev:833,used_mem_on_nod:1066,used_node_str:1066,used_node_strs_dict:1066,useful:[40,41,833,877,1066,1147,1156,1178,1221],user:[1178,1195,1206,1207,1208,1221,1224],uses:1178,using:[40,41,1009,1011,1012,1110,1113,1117,1129,1130,1147,1155,1159,1178,1195,1203,1220,1221,1224],util:[833,866,1066],utility_funct:[789,790],v_with_top_v_key_chain:[1207,1208],val:[40,41,792,827,907,956,957,958,983,984,1176],valid:[789,790,883,888,907,991,992,1147,1148,1149,1150,1151,1152,1153,1154,1195,1196,1197,1198,1199,1200,1201,1202],valid_dtyp:883,valu:[40,41,833,845,876,877,907,908,910,912,913,914,922,923,924,926,927,933,937,943,944,945,946,961,962,964,965,968,970,977,978,979,980,981,982,983,984,985,1001,1004,1005,1006,1009,1013,1016,1025,1031,1032,1037,1040,1041,1042,1043,1044,1055,1056,1057,1062,1063,1064,1066,1110,1114,1115,1116,1120,1121,1122,1125,1126,1129,1131,1133,1147,1158,1159,1164,1165,1172,1195,1206,1209,1210,1211,1213],value_is_nan:907,vanilla:[1062,1064],var_shap:1186,variabl:[15,16,17,18,19,40,41,320,434,552,698,907,918,956,957,958,959,960,994,1009,1012,1013,1014,1015,1016,1017,1018,1020,1023,1062,1063,1064,1065,1147,1158,1164,1165,1184,1185,1186,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218],variable_data:[698,1009],varianc:[40,41,1129,1137,1224],varieti:1221,variou:[43,1178],vector:[40,41,907,924,929,1032,1037,1038,1039,1147,1156,1195,1205],vector_norm:[40,41,1032],vector_to_skew_symmetric_matrix:[155,329,443,561,708,1032],verbos:1223,veri:[43,1178],version:43,via:[1110,1111,1118,1221],view:[1025,1030],vision:1178,visual:1221,volum:[1147,1152],vw_tm1:[1009,1012,1016],wai:[1221,1224],wait:[40,41,42],want:[1178,1221,1224],warn:[59,66,67,68,69,70],warp:[1025,1026],watch:1220,weight:[1009,1011,1012,1014,1016,1017,1018,1147,1156,1157,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1207,1208,1211,1213,1214],weight_initi:[1195,1196,1197,1198,1199,1200,1201,1202,1204,1205],weights_path:[1207,1208],well:[40,41,907,952],were:[40,41,1066],what:1178,when:[40,41,42,43,833,907,920,992,1005,1032,1037,1066,1178,1207,1208,1221,1224],where:[40,41,43,266,625,789,790,792,817,907,910,919,922,926,939,954,961,962,973,1006,1032,1037,1110,1111,1118,1122,1123],wherea:43,wherebi:[1110,1119],whether:[15,18,19,40,41,42,789,790,831,832,833,851,864,868,872,877,880,882,883,893,897,898,899,906,907,909,916,917,930,933,938,943,950,952,955,959,960,966,987,994,1003,1004,1009,1012,1013,1014,1015,1016,1017,1018,1020,1062,1063,1064,1065,1066,1110,1111,1112,1114,1118,1119,1122,1123,1139,1140,1147,1155,1178,1184,1185,1195,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],which:[40,41,42,43,775,776,777,789,790,831,832,833,842,843,851,856,857,858,859,862,863,864,865,867,869,873,875,876,877,883,888,893,897,906,907,910,915,925,927,929,930,931,933,940,944,945,946,947,953,954,963,964,965,972,973,974,975,976,978,981,982,989,993,1003,1005,1007,1008,1009,1012,1013,1014,1016,1017,1018,1020,1022,1023,1025,1027,1032,1035,1038,1044,1050,1066,1110,1114,1115,1116,1120,1121,1122,1123,1124,1125,1126,1129,1131,1132,1133,1134,1135,1136,1137,1139,1144,1147,1158,1159,1178,1184,1185,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218,1220,1221],whitespac:[40,41,42],whose:[43,792,817,907,915,920,1129,1130,1131,1132,1133,1135,1137],why:[1178,1179],width:[1025,1030],wiki:1224,wikipedia:1224,window:[1025,1030,1147,1148,1149,1150,1151,1152,1153,1154,1195,1196,1197,1198,1199,1200,1201,1202],wise:[40,41,43,792,817,907,921,922,937,941,942,968,970,980,1009,1012,1014,1016,1018,1040,1041,1042,1043,1044,1045,1047,1049,1050,1052,1054,1055,1056,1057,1058,1060,1139,1140,1141,1142,1143,1144,1145,1146],wish:1221,with_arg_label:[1166,1168,1172,1207,1208],with_array_cach:[1166,1167,1168,1172],with_bia:[1195,1205],with_cal:[907,933],with_default_key_color:[40,41],with_edge_label:[1166,1168,1172,1207,1208],with_entries_as_list:[40,41],with_grad:[1009,1019,1207,1208],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1066,with_output_label:[1166,1168,1172,1207,1208],with_partial_v:[1207,1208],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,907,989,1066],with_to_kv_fn:[1195,1206],with_to_out_fn:[1195,1206],with_to_q_fn:[1195,1206],within:[15,18,19,907,910,1032,1037,1122,1126],without:[40,41,43,907,977,979,985,1110,1112,1221],wonder:1178,word:[15,16,17,907,910,1122,1126,1184,1185],work:[43,1220],worker:[833,842,843,1066],worker_class:[833,842,843,1066],worker_kwarg:1066,would:[43,907,914,1139,1144,1178,1221,1224],wrap:[15,40,41,42,43,907,920,1009,1023,1178],wrapper:43,write:[40,41,43,1178,1179,1224],written:[43,1178,1224],ws_new:[1009,1012,1014,1016,1017,1018],x1_i:[907,937,1044,1054],x2_i:[907,937,1044,1054],x_feat_dim:[1147,1158],x_i:[779,780],x_in:[1178,1220],x_inv:[1032,1034],x_max:[907,922],x_min:[907,922],x_sub:1066,xkk:1224,xkkm1:1224,xkm1km1:1224,xs0:1066,xs_t:1066,year:[1178,1224],yet:[1110,1119,1224],yield:[907,1005],you:[1178,1220,1221,1224],your:[1178,1220,1221,1224],your_awesome_project:1221,yourself:1178,zero:[40,41,112,266,397,510,625,789,790,907,926,973,975,981,982,1006,1008,1009,1011,1012,1016,1017,1147,1155,1178,1186,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1211,1212,1213,1214],zero_pad:[266,510,625,907],zeros_lik:[112,266,397,510,625,907],zip:1066,zk_e:1224},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","argsort","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","argsort","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":933,"function":[77,78,83,85,87,88,89,90,91,92,93,193,194,199,201,203,204,205,206,207,208,209,367,368,373,375,377,378,379,380,381,382,383,475,476,481,483,485,486,487,488,489,490,491,589,590,595,597,599,600,601,602,603,604,605,774,775,779,781,783,784,785,786,787,788,789],Ones:1191,Using:1221,abs:[267,511,626,908],aco:[720,1045],acosh:[721,1046],activ:[177,354,461,581,752,1139,1181],adam:1212,adam_step:1011,adam_upd:1012,algebra:[86,87,202,203,376,377,484,485,598,599,782,783],all:[94,210,384,492,606,790],all_equ:909,all_nested_indic:1111,api:[0,43,75,96,191,212,365,386,473,494,587,608,772],arang:[113,268,398,512,627,910],arg_nam:911,argmax:[114,399,513,628,912],argmin:[115,400,514,629,913],args_to_ivi:16,args_to_n:17,argsort:[630,914],arithmet:[1,97,213,387,495,609],arrai:[0,3,43,75,95,96,98,116,191,211,212,214,221,269,365,385,386,388,401,473,493,494,496,515,587,607,608,610,631,772,792,915],array_equ:[270,632,916],arrays_equ:917,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[722,1047],asinh:[723,1048],assert_supports_inplac:918,atan2:[725,1050],atan:[724,1049],atanh:[726,1051],attribut:[5,99,215,389,497,611],backend:[43,73],bilinear_resampl:[152,326,440,558,705,1026],binary_cross_entropi:1161,bitwis:[7,100,216,390,498,612],broadcast_to:[271,633,919],builder:51,builtin:[95,211,221,385,493,607,792],builtin_ab:[222,793],builtin_add:[223,794],builtin_and:[224,795],builtin_bool:[225,796],builtin_contain:[226,797],builtin_deepcopi:[227,798],builtin_dir:[228,799],builtin_eq:[229,800],builtin_float:[230,801],builtin_floordiv:[231,802],builtin_g:[232,803],builtin_getattr:[233,804],builtin_getattribut:[234,805],builtin_getitem:[235,806],builtin_gt:[236,807],builtin_int:[237,808],builtin_invert:[238,809],builtin_l:[239,810],builtin_lt:[240,811],builtin_mul:[241,812],builtin_n:[242,813],builtin_neg:[243,814],builtin_or:[244,815],builtin_po:[245,816],builtin_pow:[246,817],builtin_radd:[247,818],builtin_rand:[248,819],builtin_rfloordiv:[249,820],builtin_rmul:[250,821],builtin_ror:[251,822],builtin_rpow:[252,823],builtin_rsub:[253,824],builtin_rtruediv:[254,825],builtin_rxor:[255,826],builtin_setitem:[256,827],builtin_sub:[257,828],builtin_truediv:[258,829],builtin_xor:[259,830],cache_fn:920,cast:[117,272,402,516,634,887],ceil:[273,635,921],choleski:[709,1033],choose_random_framework:61,citat:1178,clear_framework_stack:62,clear_mem_on_dev:[619,849],clip:[274,636,922],clip_matrix_norm:923,clip_vector_norm:924,clone:1081,clone_arrai:1082,clone_it:1083,clone_nest:1084,clonedit:1068,cloneditem:1067,clonednest:1069,closest_valid_dtyp:888,code:1224,comparison:[9,101,217,391,499,613],compil:[275,403,637,831,832,1166],compile_graph:1167,concaten:[118,276,404,517,638,925],constant:[76,192,366,474,588,773],constant_pad:[277,518,639,926],contain:[40,41],container_typ:[640,927],content:1178,contribut:43,conv1d:[183,357,465,764,1148,1196],conv1d_transpos:[184,358,466,765,1149],conv1dtranspos:1197,conv2d:[185,359,467,583,766,1150,1198],conv2d_transpos:[186,360,468,767,1151],conv2dtranspos:1199,conv3d:[187,361,469,584,768,1152,1200],conv3d_transpos:[188,362,470,769,1153],conv3dtranspos:1201,convers:15,convert:[179,760,1184],convert_dtyp:889,copy_arrai:[641,928],copy_nest:1112,core:[104,220,394,502,616,791],cos:[727,1052],cosh:[728,1053],cprint:1223,creation:[77,193,367,475,589,774],cross:[278,642,929],cross_entropi:1162,cumprod:[119,279,405,643,930],cumsum:[644,931],current_framework:63,current_framework_str:[645,932],data:[78,82,194,198,368,372,476,480,590,594,775,778],debug_mod:45,debugg:44,default_devic:850,default_dtyp:890,default_float_dtyp:891,default_int_dtyp:892,default_nod:1085,depthwise_conv2d:[189,363,471,585,770,1154],depthwiseconv2d:1202,design:43,dev:[107,262,505,620,851],dev_clon:852,dev_clone_arrai:853,dev_clone_it:854,dev_clone_nest:855,dev_dist:856,dev_dist_arrai:857,dev_dist_it:858,dev_dist_nest:859,dev_from_str:[108,263,506,621,860],dev_to_str:[109,264,507,622,861],dev_unifi:862,dev_unify_arrai:863,dev_unify_it:864,dev_unify_nest:865,dev_util:866,devclonedit:836,devcloneditem:835,devclonednest:837,devdistit:839,devdistitem:838,devdistnest:840,devic:[20,105,260,395,503,617,833],devmapp:842,devmappermultiproc:843,distribute_nest:1086,divid:1054,document:1178,dropout:[1155,1203],dtype:[120,280,406,519,646,883,893],dtype_bit:[121,281,407,520,647,894],dtype_from_str:[122,282,408,521,648,895],dtype_to_str:[123,283,409,522,649,896],ecosystem:52,einops_rearrang:934,einops_reduc:935,einops_repeat:936,einsum:[169,345,453,573,744,1130],elementwis:[83,199,373,481,595,779],equal:[523,650,937],erf:[449,729,1055],execute_with_gradi:[149,321,435,553,699,1013],exist:938,exp:[730,1056],expand_dim:[284,651,939],extens:[86,202,376,484,598,782],finfo:[80,196,370,478,592,776],firstlayersiren:1188,flip:[124,285,410,524,652,940],float_img_to_uint8_img:1027,floor:[286,653,941],floormod:[287,654,942],fomaml_step:1063,fourier_encod:943,framework:59,full:[125,288,411,525,655,944],func:72,gather:[126,289,412,526,656,945],gather_nd:[127,290,413,527,657,946],geglu:1182,gelu:[355,462,753,1140,1183],gener:[22,112,266,397,510,625,907],get_all_arrays_in_memori:947,get_all_arrays_on_dev:867,get_framework:64,get_min_bas:948,get_min_denomin:949,get_num_dim:[658,950],get_referrers_recurs:951,global:1169,glorotuniform:1189,gpu_is_avail:[868,1087],gradient:[24,148,320,434,552,698,1009],gradient_descent_upd:1014,gradient_imag:[153,327,441,559,706,1028],graph:1172,gym:53,handler:59,has_nan:952,helper:1174,ident:[128,291,414,528,659,953],iinfo:[81,197,371,479,593,777],imag:[26,151,325,439,557,704,1025],index_nest:1113,indices_wher:[129,292,415,660,954],initi:1186,inplac:[11,102,218,392,500,614],inplace_arrays_support:955,inplace_decr:[130,293,416,529,661,956],inplace_incr:[131,294,417,530,662,957],inplace_upd:[132,295,418,531,663,958],inplace_variables_support:959,inv:[710,1034],invalid_dtyp:897,is_arrai:[133,296,419,532,664,960],is_float_dtyp:898,is_int_dtyp:899,is_vari:[150,322,436,554,700,1015],isfinit:[84,200,374,482,596,780],isinf:[297,533,665,961],isnan:[298,534,666,962],ivi:[43,50,51,52,53,54,55,56,57,58,771,1220,1221,1224],ivymodul:[180,761],jax:74,lamb:1213,lamb_upd:1016,lar:1214,lars_upd:1017,layer:[182,356,464,582,763,1147,1195],layer_norm:1165,layernorm:1210,leaky_relu:[754,1141],linalg:[28,155,329,443,561,708,1032],linear:[86,87,202,203,376,377,484,485,598,599,782,783,1156,1205],linear_resampl:[134,299,420,535,667,963],linspac:[135,300,421,536,668,964],log:[731,1057,1175],log_global_inference_abs_tim:1170,log_global_inference_rel_tim:1171,logic:[30,159,334,447,565,715,1040],logical_and:[335,716,1041],logical_not:[336,717,1042],logical_or:[337,718,1043],logspac:[136,301,422,537,669,965],loss:1160,lstm:1204,lstm_updat:1157,maml_step:1064,manipul:[88,204,378,486,600,784],map:1114,map_nest_at_index:1115,map_nest_at_indic:1116,match_kwarg:966,math:[32,160,338,448,566,719,1044],matmul:[302,538,670,967],matrix_norm:[156,330,444,562,711,1035],maximum:[671,968],mech:54,memori:55,meshgrid:[303,672,969],meta:[34,1062],method:[85,201,375,483,597,781],minimum:[673,970],model:56,modul:[1207,1208,1220],multi:1066,multi_head_attent:1158,multi_index_nest:1117,multidevcontain:42,multidevit:846,multidevitem:845,multidevnest:847,multiheadattent:1206,multinodeit:1072,multinodeitem:1071,multinodenest:1073,multinomi:[162,340,451,568,737,1123],multiprocess:[674,971],mxnet:190,nativ:1220,nest:1110,nested_indices_wher:1118,nested_map:1119,network:1220,next:1178,node:[1066,1088],node_dist:1089,node_dist_arrai:1090,node_dist_it:1091,node_str:1092,node_to_str:1093,node_util:1094,nodedistit:1075,nodedistitem:1074,nodedistnest:1076,nodemapp:1078,nodemappermultiproc:1079,norm:[1164,1209],num_arrays_in_memori:972,num_arrays_on_dev:869,num_cpu_cor:870,num_gpu:[110,871,1095],numpi:364,nutshel:1178,one_hot:[137,423,539,675,973],ones:[138,304,424,540,676,974],ones_lik:[139,305,425,541,677,975],oper:[1,3,7,9,11,13,43,97,98,100,101,102,103,213,214,216,217,218,219,387,388,390,391,392,393,495,496,498,499,500,501,609,610,612,613,614,615],optim:[1211,1215],optimizer_upd:1018,overview:1178,param:1176,percent_used_mem_on_dev:872,percent_used_mem_on_nod:1096,pinv:[331,712,1036],portabl:1224,print_all_arrays_in_memori:976,print_all_arrays_on_dev:873,profil:[106,261,396,504,618,848,1080],queue_timeout:977,randint:[163,341,569,738,1124],random:[36,161,339,450,567,736,1122],random_crop:1029,random_norm:[164,342,570,739,1125],random_uniform:[165,343,571,740,1126],reduce_max:[170,346,454,574,745,1131],reduce_mean:[171,347,455,575,746,1132],reduce_min:[172,348,456,576,747,1133],reduce_prod:[173,349,457,577,748,1134],reduce_std:[350,1135],reduce_sum:[174,351,458,578,749,1136],reduce_var:[175,352,459,579,750,1137],reduct:[38,168,344,452,572,743,1129],reflect:[13,103,219,393,501,615],relu:[755,1142],repeat:[306,678,978],reptile_step:1065,reshap:[679,979],robot:57,round:[307,680,980],run:1221,scaled_dot_product_attent:1159,scatter_flat:[140,308,426,542,681,981],scatter_nd:[141,309,427,543,682,982],search:[89,205,379,487,601,785],seed:[166,741,1127],sequenti:[1217,1218],set:[90,206,380,488,602,786],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:874,set_default_dtyp:900,set_default_float_dtyp:901,set_default_int_dtyp:902,set_default_nod:1097,set_exception_debug_mod:48,set_framework:65,set_min_bas:983,set_min_denomin:984,set_nest_at_index:1120,set_nest_at_indic:1121,set_queue_timeout:985,set_split_factor:[875,1098],set_tmp_dir:986,set_with_grad:1019,sgd:1216,shape:[683,987],shape_to_tupl:988,show_graph:1168,shuffl:[167,742,1128],sigmoid:[756,1143],signatur:[85,201,375,483,597,781],sin:[732,1058],sinh:[733,1059],siren:1192,softmax:[178,463,757,1144],softplu:[758,1145],sort:[91,207,381,489,603,787],sparse_cross_entropi:1163,split:[142,310,428,544,684,989],split_factor:[876,1099],split_func_cal:[877,1100],squeez:[143,311,429,545,685,990],stable_divid:991,stable_pow:992,stack:[312,686,993],stack_imag:[154,328,442,560,707,1030],statist:[92,208,382,490,604,788],stop_gradi:[323,437,555,701,1020],str_to_nod:1101,submodul:43,supports_inplac:994,svd:[157,332,445,563,713,1037],swapax:[546,687,995],tan:[734,1060],tanh:[735,759,1061,1146],tensorflow:472,tile:[313,547,688,996],tmp_dir:997,to_dev:[111,265,508,623,878],to_ivi:18,to_ivy_modul:[181,762,1185],to_list:[689,998],to_n:19,to_nod:1102,to_numpi:[690,999],to_scalar:[691,1000],torch:586,total_mem_on_dev:879,total_mem_on_nod:1103,tpu_is_avail:[509,624,880,1104],train:1220,trainabl:1220,transpos:[144,314,430,692,1001],tree:1178,try_else_non:1002,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,82,194,198,368,372,476,480,590,594,775,778],uint8_img_to_float_img:1031,unifi:1105,unify_arrai:1106,unify_it:1107,unify_nest:1108,unset_debug_mod:49,unset_default_devic:881,unset_default_dtyp:903,unset_default_float_dtyp:904,unset_default_int_dtyp:905,unset_framework:71,unset_with_grad:1021,unstack:[145,315,431,548,693,1003],used_mem_on_dev:882,used_mem_on_nod:1109,util:[93,209,383,491,605,789],valid_dtyp:906,value_is_nan:1004,variabl:[324,438,556,702,1022],variable_data:[703,1023],vector_norm:1038,vector_to_skew_symmetric_matrix:[158,333,446,564,714,1039],verbos:1222,vision:58,where:[316,694,1005,1178],why:1224,with_grad:1024,wrapper:72,write:1221,zero:[146,318,432,550,696,1007,1194],zero_pad:[317,549,695,1006],zeros_lik:[147,319,433,551,697,1008]}})