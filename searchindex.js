Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/svd","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/svd","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/svd.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/svd.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[780,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[370,0,0,"-"],creation_functions:[371,0,0,"-"],data_type_functions:[372,0,0,"-"],data_types:[376,0,0,"-"],elementwise_functions:[377,0,0,"-"],function_and_method_signatures:[379,0,0,"-"],linear_algebra_extension:[380,0,0,"-"],linear_algebra_functions:[381,0,0,"-"],manipulation_functions:[382,0,0,"-"],searching_functions:[383,0,0,"-"],set_functions:[384,0,0,"-"]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[372,1,1,""],finfo:[374,2,1,""],iinfo:[375,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[372,3,1,""],bits:[372,3,1,""],eps:[372,3,1,""],max:[372,3,1,""],min:[372,3,1,""],smallest_normal:[372,3,1,""]},"ivy.functional.backends.numpy.array_api.elementwise_functions":{isfinite:[378,2,1,""]},"ivy.functional.ivy":{array_api:[781,0,0,"-"],core:[802,0,0,"-"],nn:[1148,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[782,0,0,"-"],creation_functions:[783,0,0,"-"],data_type_functions:[784,0,0,"-"],data_types:[787,0,0,"-"],elementwise_functions:[788,0,0,"-"],function_and_method_signatures:[790,0,0,"-"],linear_algebra_extension:[791,0,0,"-"],linear_algebra_functions:[792,0,0,"-"],manipulation_functions:[793,0,0,"-"],searching_functions:[794,0,0,"-"],set_functions:[795,0,0,"-"],sorting_functions:[796,0,0,"-"],statistical_functions:[798,0,0,"-"],utility_functions:[799,0,0,"-"]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[785,2,1,""],iinfo:[786,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{isfinite:[789,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[797,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[800,2,1,""],any:[801,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[803,0,0,"-"],compilation:[842,0,0,"-"],device:[844,0,0,"-"],dtype:[894,0,0,"-"],general:[918,0,0,"-"],gradients:[1019,0,0,"-"],image:[1035,0,0,"-"],linalg:[1042,0,0,"-"],logic:[1050,0,0,"-"],math:[1054,0,0,"-"],meta:[1072,0,0,"-"],multi_node:[1076,0,0,"-"],nest:[1120,0,0,"-"],random:[1132,0,0,"-"],reductions:[1139,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[804,2,1,""],builtin_add:[805,2,1,""],builtin_and:[806,2,1,""],builtin_bool:[807,2,1,""],builtin_contains:[808,2,1,""],builtin_deepcopy:[809,2,1,""],builtin_dir:[810,2,1,""],builtin_eq:[811,2,1,""],builtin_float:[812,2,1,""],builtin_floordiv:[813,2,1,""],builtin_ge:[814,2,1,""],builtin_getattr:[815,2,1,""],builtin_getattribute:[816,2,1,""],builtin_getitem:[817,2,1,""],builtin_gt:[818,2,1,""],builtin_int:[819,2,1,""],builtin_invert:[820,2,1,""],builtin_le:[821,2,1,""],builtin_lt:[822,2,1,""],builtin_mul:[823,2,1,""],builtin_ne:[824,2,1,""],builtin_neg:[825,2,1,""],builtin_or:[826,2,1,""],builtin_pos:[827,2,1,""],builtin_pow:[828,2,1,""],builtin_radd:[829,2,1,""],builtin_rand:[830,2,1,""],builtin_rfloordiv:[831,2,1,""],builtin_rmul:[832,2,1,""],builtin_ror:[833,2,1,""],builtin_rpow:[834,2,1,""],builtin_rsub:[835,2,1,""],builtin_rtruediv:[836,2,1,""],builtin_rxor:[837,2,1,""],builtin_setitem:[838,2,1,""],builtin_sub:[839,2,1,""],builtin_truediv:[840,2,1,""],builtin_xor:[841,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[843,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[844,1,1,""],DevClonedItem:[846,1,1,""],DevClonedIter:[847,1,1,""],DevClonedNest:[848,1,1,""],DevDistItem:[849,1,1,""],DevDistIter:[850,1,1,""],DevDistNest:[851,1,1,""],DevManager:[844,1,1,""],DevMapper:[853,1,1,""],DevMapperMultiProc:[854,1,1,""],MultiDev:[844,1,1,""],MultiDevItem:[856,1,1,""],MultiDevIter:[857,1,1,""],MultiDevNest:[858,1,1,""],Profiler:[859,1,1,""],clear_mem_on_dev:[860,2,1,""],default_device:[861,2,1,""],dev:[862,2,1,""],dev_clone:[863,2,1,""],dev_clone_array:[864,2,1,""],dev_clone_iter:[865,2,1,""],dev_clone_nest:[866,2,1,""],dev_dist:[867,2,1,""],dev_dist_array:[868,2,1,""],dev_dist_iter:[869,2,1,""],dev_dist_nest:[870,2,1,""],dev_from_str:[871,2,1,""],dev_to_str:[872,2,1,""],dev_unify:[873,2,1,""],dev_unify_array:[874,2,1,""],dev_unify_iter:[875,2,1,""],dev_unify_nest:[876,2,1,""],dev_util:[877,2,1,""],get_all_arrays_on_dev:[878,2,1,""],gpu_is_available:[879,2,1,""],num_arrays_on_dev:[880,2,1,""],num_cpu_cores:[881,2,1,""],num_gpus:[882,2,1,""],percent_used_mem_on_dev:[883,2,1,""],print_all_arrays_on_dev:[884,2,1,""],set_default_device:[885,2,1,""],set_split_factor:[886,2,1,""],split_factor:[887,2,1,""],split_func_call:[888,2,1,""],to_dev:[889,2,1,""],total_mem_on_dev:[890,2,1,""],tpu_is_available:[891,2,1,""],unset_default_device:[892,2,1,""],used_mem_on_dev:[893,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[844,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[844,3,1,""],da_tune_step:[844,3,1,""],dim_size:[844,3,1,""],ds_tune_step:[844,3,1,""],map:[844,3,1,""],repeated_config_check:[844,3,1,""],tune_step:[844,3,1,""],tuned:[844,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[853,3,1,""],map:[853,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[854,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[844,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[856,3,1,""],items:[856,3,1,""],keys:[856,3,1,""],shape:[856,3,1,""],values:[856,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[857,3,1,""],at_dev:[857,3,1,""],at_devs:[857,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[858,3,1,""],at_dev:[858,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[859,3,1,""],start:[859,3,1,""],stop:[859,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[894,1,1,""],DefaultFloatDtype:[894,1,1,""],DefaultIntDtype:[894,1,1,""],astype:[894,2,1,""],cast:[898,2,1,""],closest_valid_dtype:[899,2,1,""],convert_dtype:[900,2,1,""],default_dtype:[901,2,1,""],default_float_dtype:[902,2,1,""],default_int_dtype:[903,2,1,""],dtype:[904,2,1,""],dtype_bits:[905,2,1,""],dtype_from_str:[906,2,1,""],dtype_to_str:[907,2,1,""],invalid_dtype:[908,2,1,""],is_float_dtype:[909,2,1,""],is_int_dtype:[910,2,1,""],set_default_dtype:[911,2,1,""],set_default_float_dtype:[912,2,1,""],set_default_int_dtype:[913,2,1,""],unset_default_dtype:[914,2,1,""],unset_default_float_dtype:[915,2,1,""],unset_default_int_dtype:[916,2,1,""],valid_dtype:[917,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[894,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[894,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[894,3,1,""]},"ivy.functional.ivy.core.general":{"default":[943,2,1,""],abs:[919,2,1,""],all_equal:[920,2,1,""],arange:[921,2,1,""],arg_names:[922,2,1,""],argmax:[923,2,1,""],argmin:[924,2,1,""],array:[925,2,1,""],array_equal:[926,2,1,""],arrays_equal:[927,2,1,""],asarray:[918,2,1,""],assert_supports_inplace:[928,2,1,""],broadcast_to:[929,2,1,""],cache_fn:[930,2,1,""],ceil:[931,2,1,""],clip:[932,2,1,""],clip_matrix_norm:[933,2,1,""],clip_vector_norm:[934,2,1,""],concatenate:[935,2,1,""],constant_pad:[936,2,1,""],container_types:[937,2,1,""],copy_array:[938,2,1,""],cross:[939,2,1,""],cumprod:[940,2,1,""],cumsum:[941,2,1,""],current_framework_str:[942,2,1,""],einops_rearrange:[944,2,1,""],einops_reduce:[945,2,1,""],einops_repeat:[946,2,1,""],equal:[947,2,1,""],exists:[948,2,1,""],expand_dims:[949,2,1,""],flip:[950,2,1,""],floor:[951,2,1,""],floormod:[952,2,1,""],fourier_encode:[953,2,1,""],full:[954,2,1,""],gather:[955,2,1,""],gather_nd:[956,2,1,""],get_all_arrays_in_memory:[957,2,1,""],get_min_base:[958,2,1,""],get_min_denominator:[959,2,1,""],get_num_dims:[960,2,1,""],get_referrers_recursive:[961,2,1,""],has_nans:[962,2,1,""],identity:[963,2,1,""],indices_where:[964,2,1,""],inplace_arrays_supported:[965,2,1,""],inplace_decrement:[966,2,1,""],inplace_increment:[967,2,1,""],inplace_update:[968,2,1,""],inplace_variables_supported:[969,2,1,""],is_array:[970,2,1,""],isinf:[971,2,1,""],isnan:[972,2,1,""],linear_resample:[973,2,1,""],linspace:[974,2,1,""],logspace:[975,2,1,""],match_kwargs:[976,2,1,""],matmul:[977,2,1,""],maximum:[978,2,1,""],meshgrid:[979,2,1,""],minimum:[980,2,1,""],multiprocessing:[981,2,1,""],num_arrays_in_memory:[982,2,1,""],one_hot:[983,2,1,""],ones:[984,2,1,""],ones_like:[985,2,1,""],print_all_arrays_in_memory:[986,2,1,""],queue_timeout:[987,2,1,""],repeat:[988,2,1,""],reshape:[989,2,1,""],round:[990,2,1,""],scatter_flat:[991,2,1,""],scatter_nd:[992,2,1,""],set_min_base:[993,2,1,""],set_min_denominator:[994,2,1,""],set_queue_timeout:[995,2,1,""],set_tmp_dir:[996,2,1,""],shape:[997,2,1,""],shape_to_tuple:[998,2,1,""],split:[999,2,1,""],squeeze:[1000,2,1,""],stable_divide:[1001,2,1,""],stable_pow:[1002,2,1,""],stack:[1003,2,1,""],supports_inplace:[1004,2,1,""],swapaxes:[1005,2,1,""],tile:[1006,2,1,""],tmp_dir:[1007,2,1,""],to_list:[1008,2,1,""],to_numpy:[1009,2,1,""],to_scalar:[1010,2,1,""],transpose:[1011,2,1,""],try_else_none:[1012,2,1,""],unstack:[1013,2,1,""],value_is_nan:[1014,2,1,""],where:[1015,2,1,""],zero_pad:[1016,2,1,""],zeros:[1017,2,1,""],zeros_like:[1018,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1019,1,1,""],adam_step:[1021,2,1,""],adam_update:[1022,2,1,""],execute_with_gradients:[1023,2,1,""],gradient_descent_update:[1024,2,1,""],is_variable:[1025,2,1,""],lamb_update:[1026,2,1,""],lars_update:[1027,2,1,""],optimizer_update:[1028,2,1,""],set_with_grads:[1029,2,1,""],stop_gradient:[1030,2,1,""],unset_with_grads:[1031,2,1,""],variable:[1032,2,1,""],variable_data:[1033,2,1,""],with_grads:[1034,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1019,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1036,2,1,""],float_img_to_uint8_img:[1037,2,1,""],gradient_image:[1038,2,1,""],random_crop:[1039,2,1,""],stack_images:[1040,2,1,""],uint8_img_to_float_img:[1041,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1043,2,1,""],inv:[1044,2,1,""],matrix_norm:[1045,2,1,""],pinv:[1046,2,1,""],svd:[1047,2,1,""],vector_norm:[1048,2,1,""],vector_to_skew_symmetric_matrix:[1049,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1051,2,1,""],logical_not:[1052,2,1,""],logical_or:[1053,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1055,2,1,""],acosh:[1056,2,1,""],asin:[1057,2,1,""],asinh:[1058,2,1,""],atan2:[1060,2,1,""],atan:[1059,2,1,""],atanh:[1061,2,1,""],cos:[1062,2,1,""],cosh:[1063,2,1,""],divide:[1064,2,1,""],erf:[1065,2,1,""],exp:[1066,2,1,""],log:[1067,2,1,""],sin:[1068,2,1,""],sinh:[1069,2,1,""],tan:[1070,2,1,""],tanh:[1071,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1073,2,1,""],maml_step:[1074,2,1,""],reptile_step:[1075,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1076,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1121,2,1,""],copy_nest:[1122,2,1,""],index_nest:[1123,2,1,""],map:[1124,2,1,""],map_nest_at_index:[1125,2,1,""],map_nest_at_indices:[1126,2,1,""],multi_index_nest:[1127,2,1,""],nested_indices_where:[1128,2,1,""],nested_map:[1129,2,1,""],set_nest_at_index:[1130,2,1,""],set_nest_at_indices:[1131,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1133,2,1,""],randint:[1134,2,1,""],random_normal:[1135,2,1,""],random_uniform:[1136,2,1,""],seed:[1137,2,1,""],shuffle:[1138,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1140,2,1,""],reduce_max:[1141,2,1,""],reduce_mean:[1142,2,1,""],reduce_min:[1143,2,1,""],reduce_prod:[1144,2,1,""],reduce_std:[1145,2,1,""],reduce_sum:[1146,2,1,""],reduce_var:[1147,2,1,""]},"ivy.functional.ivy.nn":{activations:[1149,0,0,"-"],layers:[1157,0,0,"-"],losses:[1170,0,0,"-"],norms:[1174,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1150,2,1,""],leaky_relu:[1151,2,1,""],relu:[1152,2,1,""],sigmoid:[1153,2,1,""],softmax:[1154,2,1,""],softplus:[1155,2,1,""],tanh:[1156,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1158,2,1,""],conv1d_transpose:[1159,2,1,""],conv2d:[1160,2,1,""],conv2d_transpose:[1161,2,1,""],conv3d:[1162,2,1,""],conv3d_transpose:[1163,2,1,""],depthwise_conv2d:[1164,2,1,""],dropout:[1165,2,1,""],linear:[1166,2,1,""],lstm_update:[1167,2,1,""],multi_head_attention:[1168,2,1,""],scaled_dot_product_attention:[1169,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1171,2,1,""],cross_entropy:[1172,2,1,""],sparse_cross_entropy:[1173,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1175,2,1,""]},"ivy.graph_compiler":{compiler:[1176,0,0,"-"],globals:[1179,0,0,"-"],graph:[1182,0,0,"-"],helpers:[1184,0,0,"-"],op_logging:[1185,0,0,"-"],param:[1186,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1177,2,1,""],show_graph:[1178,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1180,2,1,""],log_global_inference_rel_times:[1181,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1182,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1182,3,1,""],add_fn_to_dict:[1182,3,1,""],add_param:[1182,3,1,""],compiled:[1182,3,1,""],connect:[1182,3,1,""],debug_info:[1182,3,1,""],get_param:[1182,3,1,""],get_param_recursive:[1182,3,1,""],include_generators:[1182,3,1,""],increment_param_count:[1182,3,1,""],log_all_ops:[1182,3,1,""],params_all_empty:[1182,3,1,""],save_debug_info:[1182,3,1,""],set_param:[1182,3,1,""],show:[1182,3,1,""],show_debug_info:[1182,3,1,""],update_inference_times:[1182,3,1,""],with_array_caching:[1182,3,1,""]},"ivy.graph_compiler.param":{Param:[1186,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1186,3,1,""],count:[1186,3,1,""],depth:[1186,3,1,""],get:[1186,3,1,""],is_var:[1186,3,1,""],ptype:[1186,3,1,""],set:[1186,3,1,""],set_count:[1186,3,1,""],shape:[1186,3,1,""]},"ivy.stateful":{activations:[1191,0,0,"-"],converters:[1194,0,0,"-"],initializers:[1196,0,0,"-"],layers:[1205,0,0,"-"],module:[1217,0,0,"-"],norms:[1219,0,0,"-"],optimizers:[1221,0,0,"-"],sequential:[1227,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1192,1,1,""],GELU:[1193,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1192,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1193,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1195,2,1,""]},"ivy.stateful.initializers":{Constant:[1196,1,1,""],FirstLayerSiren:[1198,1,1,""],GlorotUniform:[1199,1,1,""],KaimingNormal:[1196,1,1,""],Ones:[1201,1,1,""],Siren:[1202,1,1,""],Uniform:[1196,1,1,""],Zeros:[1204,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1196,3,1,""],create_variables:[1196,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1198,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1199,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1196,3,1,""],create_variables:[1196,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1201,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1202,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1196,3,1,""],create_variables:[1196,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1204,3,1,""]},"ivy.stateful.layers":{Conv1D:[1206,1,1,""],Conv1DTranspose:[1207,1,1,""],Conv2D:[1208,1,1,""],Conv2DTranspose:[1209,1,1,""],Conv3D:[1210,1,1,""],Conv3DTranspose:[1211,1,1,""],DepthwiseConv2D:[1212,1,1,""],Dropout:[1213,1,1,""],LSTM:[1214,1,1,""],Linear:[1215,1,1,""],MultiHeadAttention:[1216,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1206,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1207,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1208,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1209,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1210,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1211,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1212,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1213,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1214,3,1,""],get_initial_state:[1214,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1215,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1216,3,1,""]},"ivy.stateful.module":{Module:[1218,1,1,""]},"ivy.stateful.module.Module":{__init__:[1218,3,1,""],build:[1218,3,1,""],build_mode:[1218,3,1,""],built:[1218,3,1,""],check_submod_rets:[1218,3,1,""],compile_graph:[1218,3,1,""],compile_on_next_step:[1218,3,1,""],get_mod_key:[1218,3,1,""],mod_depth:[1218,3,1,""],mod_height:[1218,3,1,""],mod_with_top_mod_key_chain:[1218,3,1,""],save_weights:[1218,3,1,""],show_graph:[1218,3,1,""],show_mod_in_top_mod:[1218,3,1,""],show_structure:[1218,3,1,""],show_v_in_top_v:[1218,3,1,""],sub_mods:[1218,3,1,""],track_submod_call_order:[1218,3,1,""],track_submod_rets:[1218,3,1,""],v_with_top_v_key_chains:[1218,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1220,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1220,3,1,""]},"ivy.stateful.optimizers":{Adam:[1222,1,1,""],LAMB:[1223,1,1,""],LARS:[1224,1,1,""],Optimizer:[1225,1,1,""],SGD:[1226,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1222,3,1,""],set_state:[1222,3,1,""],state:[1222,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1223,3,1,""],set_state:[1223,3,1,""],state:[1223,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1224,3,1,""],set_state:[1224,3,1,""],state:[1224,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1225,3,1,""],compile_graph:[1225,3,1,""],compile_on_next_step:[1225,3,1,""],set_state:[1225,3,1,""],show_graph:[1225,3,1,""],step:[1225,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1226,3,1,""],set_state:[1226,3,1,""],state:[1226,3,1,""]},"ivy.stateful.sequential":{Sequential:[1228,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1228,3,1,""]},"ivy.verbosity":{cprint:[1233,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1232,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1221,1222,1223],"02886":1188,"100":[1076,1188,1230],"2021":1188,"2102":1188,"360":[1054,1062,1068,1070],"754":[784,785],"999":[1019,1021,1022,1026,1221,1222,1223],"abstract":[844,859,1188,1221,1225],"boolean":[40,41,844,879,891,894,908,917,918,920,926,927,962,964,965,969,970,971,972,1004,1014,1019,1025,1050,1051,1052,1053,1072,1073,1074,1076],"break":43,"case":[15,18,19,40,41,42,43,844,883,890,893,918,921,989,991,992,1042,1045,1048,1076,1120,1123,1127,1188,1205,1216,1217,1218,1221,1225,1234],"catch":[918,943],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,372,784,786,844,846,847,848,849,850,851,853,854,856,857,858,859,871,872,894,918,922,976,984,1019,1033,1076,1120,1122,1129,1170,1172,1173,1182,1186,1188,1191,1192,1193,1194,1195,1196,1198,1199,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1234],"default":[15,18,19,40,41,42,43,796,797,799,800,801,842,843,844,853,854,861,862,866,867,868,869,870,873,874,875,876,883,886,887,888,893,894,901,902,903,904,918,920,921,923,924,933,934,935,936,939,940,941,950,953,954,955,960,962,963,973,975,976,979,981,984,987,988,991,992,995,997,999,1001,1002,1011,1013,1014,1017,1019,1022,1024,1025,1026,1027,1028,1030,1034,1042,1045,1048,1072,1073,1074,1075,1076,1120,1121,1122,1124,1128,1129,1132,1133,1135,1136,1139,1141,1142,1143,1144,1145,1146,1147,1149,1150,1154,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1194,1195,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228],"final":[40,41,918,953,974,975,1076,1205,1216,1231],"float":[40,41,42,43,784,785,803,828,844,853,854,877,883,886,890,893,894,902,909,918,921,933,934,936,953,954,958,959,975,993,994,995,1001,1002,1019,1021,1022,1024,1026,1027,1028,1035,1037,1041,1054,1064,1072,1073,1074,1075,1076,1132,1135,1136,1149,1151,1157,1165,1168,1169,1170,1171,1172,1173,1174,1175,1205,1213,1216,1219,1220,1221,1222,1223,1224,1225,1226],"function":[15,40,41,43,374,375,378,785,786,789,797,800,801,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,846,847,848,849,850,851,853,854,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1188,1191,1192,1193,1221,1224,1225,1226,1230,1231,1234],"import":[43,1188,1231,1234],"int":[40,41,42,43,784,785,786,796,797,799,800,801,803,828,842,843,844,866,867,868,869,870,873,874,875,876,881,882,888,894,903,905,910,918,923,924,929,935,936,940,941,944,945,946,949,950,953,954,955,960,963,973,974,975,983,984,988,989,991,992,997,998,999,1000,1003,1005,1006,1011,1013,1016,1017,1019,1021,1022,1026,1035,1039,1040,1042,1045,1048,1072,1073,1074,1075,1076,1120,1129,1132,1133,1134,1136,1137,1139,1141,1142,1143,1144,1145,1146,1147,1149,1154,1157,1158,1159,1160,1161,1162,1163,1164,1168,1170,1172,1173,1174,1175,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1219,1220],"long":[1157,1167],"new":[40,41,43,894,898,918,919,929,944,945,946,949,953,954,955,956,984,989,991,992,993,994,1001,1002,1003,1017,1019,1022,1024,1026,1027,1028,1035,1037,1039,1041,1054,1056,1058,1061,1063,1069,1071,1076,1120,1130,1131,1132,1133,1174,1175,1188,1194,1195,1205,1215,1219,1220,1221,1222,1223,1224,1225,1226,1231,1234],"public":[918,937],"return":[15,16,17,18,19,40,41,42,43,784,785,786,788,789,796,797,799,800,801,803,828,842,843,844,853,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,879,880,882,883,887,888,889,890,891,893,894,898,899,900,901,902,903,904,905,906,907,908,909,910,917,918,919,920,921,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,988,989,990,991,992,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1030,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1120,1121,1122,1124,1128,1129,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1188,1194,1195,1205,1214,1215,1221,1225,1230,1231,1234],"short":[1157,1167,1188,1234],"static":[40,41,842,843],"super":1076,"true":[40,41,42,788,789,796,797,799,800,801,842,843,844,918,920,928,930,948,953,962,964,1014,1015,1019,1022,1024,1025,1026,1027,1028,1030,1042,1045,1048,1072,1073,1074,1075,1076,1120,1121,1128,1132,1133,1139,1141,1142,1143,1144,1145,1146,1147,1149,1150,1157,1165,1170,1171,1172,1173,1176,1177,1178,1182,1205,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226],"try":[40,41,918,1012,1076],"var":[40,41,1072,1073,1074,1234],"while":[40,41,42,1076],AND:[799,800,1050,1051],But:1234,For:[43,918,921,932,1003,1019,1025,1033,1054,1055,1188,1194,1195,1231,1234],Its:[1054,1059],NOT:[1050,1052],One:[40,41,918,945,989,1132,1134,1234],Ones:[1188,1196],Such:[918,937],That:1231,The:[15,16,17,18,19,40,41,42,43,788,789,796,797,799,800,801,803,828,842,843,844,853,854,860,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,883,886,887,888,889,890,893,894,898,899,900,905,906,907,908,917,918,921,925,926,929,930,933,934,935,936,938,939,942,943,947,950,953,955,956,963,966,967,968,970,973,975,977,979,981,984,985,988,989,991,992,993,994,995,998,999,1000,1001,1002,1003,1006,1014,1017,1018,1019,1021,1022,1024,1026,1027,1028,1030,1033,1035,1037,1039,1041,1042,1045,1047,1054,1055,1057,1059,1062,1064,1065,1066,1067,1068,1070,1072,1073,1074,1075,1076,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1188,1194,1195,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1231,1234],There:[43,1188,1231],These:[43,1188],Used:[1120,1121,1128,1217,1218],Using:[1188,1189,1234],With:[40,41,1042,1045,1048,1139,1141,1142,1143,1144,1145,1146,1147,1188,1230,1234],__array__:[918,925],__call__:[1205,1216,1217,1218],__del__:1076,__dict__:[1076,1231],__enter__:1076,__exit__:1076,__getitem__:1076,__getstate__:1076,__init__:[40,41,42,43,59,60,79,197,372,373,483,599,844,845,852,853,854,855,856,857,858,859,894,895,896,897,1019,1020,1076,1080,1087,1182,1183,1186,1187,1188,1191,1192,1193,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1234],__iter__:1076,__len__:1076,__next__:1076,__pow__:43,__repr__:1076,_assign_vari:1230,_axi:1076,_base:[1120,1121,1128],_compute_node_da_ratio:1076,_compute_node_strs_da:1076,_concat_unify_arrai:1076,_counter:1076,_cur_framework:[43,1076],_da_direct:1076,_da_directions_flip:1076,_da_step_tim:1076,_da_tim:1076,_da_tune_count:1076,_data:1076,_delta_da_dim_s:1076,_delta_sf:1076,_dict:1076,_dim_siz:1076,_first_da_tune_step:1076,_first_ns_tune_step:1076,_fn:1076,_forward:[1188,1230],_get_kalman_param:1234,_get_prior:1234,_get_some_model:1234,_handle_flat_arrays_in_out:43,_index:[1120,1121,1128],_input_queu:1076,_length:1076,_max_depth:1076,_max_node_dim_step_ratio:1076,_max_node_dim_step_s:1076,_max_split_factor_step_s:1076,_mean_unify_arrai:1076,_min_bas:[918,1002,1174,1175,1219,1220],_min_denomin:[918,1001],_min_node_dim_s:1076,_min_sf_tune_step:1076,_min_unit_node_tune_step:1076,_model:1234,_native_wrapp:43,_node_mapp:1076,_node_percent_mem:1076,_node_str:1076,_node_str_da_ratio:1076,_node_strs_da:1076,_node_strs_kei:1076,_node_strs_n:1076,_node_util:1076,_ns_step_tim:1076,_ns_time:1076,_ns_tune_count:1076,_num_nod:1076,_num_work:1076,_observed_config:1076,_output_queu:1076,_paramet:1230,_percent_mem_inc_per_sf:1076,_percent_mem_inc_per_unit_da_dim:1076,_percent_util_inc_per_unit_da_dim:1076,_ret_fn:1076,_safety_factor:1076,_save_dir:1076,_shift_da_split:1076,_shift_n:1076,_slice:1076,_step:[1221,1225],_sum_unify_arrai:1076,_timeout:1076,_tune:1076,_tune_da:1076,_tune_n:1076,_tune_step:1076,_unit_da_tune_count:1076,_unroll_step:1234,_with_node_mappig:1076,_worker:1076,_worker_class:1076,_worker_fn:1076,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,844,853,859,1076,1217,1218,1221,1225],abil:1188,abl:[40,41],about:[784,785,786],abov:[43,1132,1134],above_height:[40,41],abs:[270,518,635,918,1076],absolut:[40,41,918,919],abstractmethod:1076,accept:[15,43,1188],access:[40,41,1231],accord:[40,41,784,785,918,936,955,991,992,1011,1016],accordingli:[799,800,801],accur:[59,372,844,856,857,858,859,894,1019,1182,1186,1196,1198,1199,1201,1202,1204],aco:[728,1054],acosh:[728,1054],across:[40,41,844,853,854,863,864,866,867,868,869,870,876,886,887,918,923,924,926,927,1076,1120,1124],activ:[1150,1151,1152,1153,1154,1155,1156,1188,1192,1193],actual:1231,adam:[1019,1021,1022,1026,1188,1221,1223,1230],adam_step:1019,adam_upd:1019,adapt:[1019,1027,1221,1224],add:[40,41,43,1076,1170,1171,1172,1173,1174,1175,1188,1219,1220,1231],add_fn_to_dict:1182,add_param:1182,added:[43,918,1001,1002,1227,1228],adding:[918,929],addit:[40,41,43,918,944,945,946,1174,1175,1205,1215],adher:43,adjac:[918,921],adopt:[918,937],affect:[918,921],affin:[1219,1220],after:[918,973,1019,1022,1023,1024,1026,1027,1028,1035,1036,1174,1175,1221,1222,1223,1224,1225,1226,1234],after_1:[918,936,1016],after_n:[918,936,1016],again:43,against:[40,41,1042,1045,1048,1139,1141,1142,1143,1144,1145,1146,1147],agnost:[43,1188,1230,1231],aim:1234,algebra:1042,algorithm:[1157,1158,1159,1160,1161,1162,1163,1164,1205,1206,1207,1208,1209,1210,1211,1212,1234],align:[40,41,43,918,929],aliv:[844,878,880,884,918,957,982,986],all:[15,16,17,18,19,40,41,43,94,212,388,498,614,799,842,843,844,853,878,884,918,919,920,926,927,937,950,957,963,986,1000,1072,1073,1074,1075,1076,1120,1121,1122,1128,1129,1132,1133,1136,1139,1141,1142,1143,1144,1145,1146,1147,1157,1167,1188,1231,1234],all_depth:[40,41],all_equ:918,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1120,all_tru:[40,41],alloc:[844,1076],allow:[918,974,975,976,1217,1218],allow_dupl:[918,976],alon:[844,883,893,1076,1188],along:[40,41,43,796,797,799,800,801,844,867,868,869,870,873,874,875,876,888,918,935,940,941,950,955,973,974,975,988,999,1003,1006,1013,1042,1045,1048,1072,1073,1074,1075,1076,1132,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147],alongsid:[1230,1231],alpha:[1149,1151],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,844,1076],also:[40,41,43,918,921,1019,1022,1072,1073,1074,1075,1120,1121,1122,1128,1129,1157,1166,1205,1215,1230],altern:1230,alwai:[40,41,43,1019,1025,1030],among:[40,41],amount:[844,890,1076,1188],angl:[1054,1055,1060],ani:[15,16,17,18,19,40,41,43,94,212,388,498,614,799,842,843,844,846,849,853,854,856,865,866,869,870,875,918,920,921,925,943,944,945,946,947,948,962,970,976,1001,1002,1019,1023,1076,1120,1121,1124,1128,1129,1130,1131,1132,1136,1188,1194,1195,1217,1218,1230,1231,1234],anoth:[40,41,894,900,1188],another_backend:43,anyth:[43,1234],anywai:43,apart:43,api:[1188,1189],appear:[918,949],append:[40,41,1076],appli:[15,18,19,40,41,918,944,945,946,1019,1026,1027,1042,1047,1050,1051,1052,1053,1072,1073,1074,1120,1124,1127,1129,1149,1150,1151,1152,1153,1154,1155,1156,1157,1166,1168,1169,1174,1175,1188,1191,1192,1193,1219,1220],applic:[1120,1124,1129,1157,1168,1169,1188,1234],approxim:[43,803,828,1149,1150],arang:[114,270,403,518,635,918,974,975],arbitrari:[40,41,844,873,874,876,1076],arc:[1054,1060],arcco:[1054,1055],arctan:[1054,1059],area:1188,arg:[15,16,17,40,41,43,59,63,844,853,866,870,876,888,918,944,945,946,992,1076,1176,1177,1178,1182,1194,1195,1217,1218],arg_nam:918,arg_stateful_idx:[1176,1177,1178,1182,1217,1218],argmax:[114,403,518,635,918],argmin:[114,403,518,635,918],args_clon:1076,args_dist:1076,args_to_ivi:[15,1188],args_to_n:[15,1188],args_uni:1076,argsort:[91,209,385,495,611,796],argument:[15,16,17,18,19,40,41,42,43,59,63,842,843,844,853,854,866,870,876,918,921,922,930,943,976,992,1054,1055,1076,1120,1124,1194,1195,1217,1218],aris:[1188,1234],arithmet:[43,1139,1142,1145,1147],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,114,270,403,518,635,784,785,786,788,789,796,797,799,800,801,828,844,862,863,864,867,868,869,870,873,874,875,876,878,880,884,888,889,894,898,904,909,910,918,919,920,921,923,924,926,927,928,929,931,932,933,934,935,936,938,939,940,941,944,945,946,947,949,950,951,952,953,954,955,956,957,960,962,963,964,965,966,967,968,970,971,972,973,974,975,977,978,979,980,982,983,984,985,986,988,989,990,991,992,997,999,1000,1003,1004,1005,1006,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1021,1022,1025,1026,1030,1032,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1076,1120,1122,1129,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1188,1189,1205,1213,1214,1216,1221,1225,1230,1231],arrang:[918,944],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,372,374,375,377,378,784,785,786,788,789,796,797,799,800,801],array_builtin:[43,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841],array_equ:[270,635,918],array_lik:[918,925],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,918],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1188],arraywithgener:[22,1188],arraywithgradi:[24,1188],arraywithimag:[26,1188],arraywithlinalg:[28,1188],arraywithlog:[30,1188],arraywithmath:[32,1188],arraywithmeta:[34,1188],arraywithrandom:[36,1188],arraywithreduct:[38,1188],arriv:[40,41,42],articl:1188,arxiv:1188,as_arrai:[40,41,918,960,997],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[844,862,894,901,902,903,904],as_vari:[40,41],as_zero:[40,41],asarrai:918,asin:[728,1054],asinh:[728,1054],aspect:[1035,1040],assert:[40,41,918,928,1076],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:918,associ:[43,1042,1049],assum:[1231,1234],astyp:894,asynchron:[40,41,42],at_dev:[40,42,844,857,858],at_kei:[40,41],at_key_chain:[40,41],at_nod:1076,atan2:[728,1054],atan:[728,1054],atanh:[728,1054],attent:[1157,1168,1169,1205,1216],attribut:[0,6,40,41,784,785,786,918,985,1018],audienc:[1188,1231],author:1188,avail:[40,41,844,879,881,882,891,918,945,1076],averag:[1019,1021,1022,1026,1072,1073,1074,1139,1142],average_across_step:[1072,1073,1074],avoid:[844,1076,1231],axes:[40,41,43,799,800,801,844,888,918,923,924,936,949,950,1005,1011,1016,1042,1045,1048,1076,1139,1141,1142,1143,1144,1145,1146,1147],axes_length:[40,41,918,944,945,946],axi:[40,41,796,797,799,800,801,844,846,849,856,867,868,869,870,873,874,875,876,888,918,923,924,935,936,939,940,941,949,950,955,973,974,975,988,999,1000,1003,1005,1006,1013,1016,1042,1048,1076,1132,1138,1139,1141,1142,1143,1144,1145,1146,1147,1149,1154,1170,1172,1173],axis0:[40,41,918,1005],axis1:[40,41,918,1005],back:[1217,1218,1221,1225],backend:[15,17,19,40,41,372,374,375,377,378,844,879,882,891,894,900,908,917,918,965,969,1019,1022,1024,1026,1027,1028,1033,1076,1188,1189,1194,1195,1221,1222,1223,1224,1225,1226,1230,1231,1234],background:[1188,1231],backprop:1234,backward:[799,800,801,1230],band:[918,953],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,372,803,828,844,846,847,848,849,850,851,853,854,856,857,858,859,894,918,958,975,993,1002,1019,1076,1139,1140,1182,1186,1188,1191,1192,1193,1196,1198,1199,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1234],batch:[40,41,844,886,887,918,950,953,963,1035,1039,1042,1047,1072,1073,1074,1075,1076,1157,1166,1174,1175,1219,1220],batch_shap:[918,950,963,983,1035,1036,1037,1038,1039,1040,1041,1042,1049,1132,1133,1157,1167,1168,1169,1205,1214],batch_siz:[1076,1132,1133,1157,1158,1159,1160,1161,1162,1163,1164],bayesian:1234,becaus:[43,918,921],becom:[918,932,1054,1060,1234],been:[918,944,945,946,1132,1133],befor:[40,41,43,844,888,1072,1073,1074,1076,1120,1129,1139,1141,1142,1143,1144,1145,1146,1147,1157,1168,1169,1234],before_1:[918,936,1016],before_n:[918,936,1016],begin:[1120,1121,1128,1231],behaviour:[43,1234],behind:[1019,1022,1024,1026,1027,1028,1188],being:[40,41,43,918,921,987,995,1076],belong:[40,41],below:[43,1188,1231,1234],below_depth:[40,41],benefit:1188,bernoul:[1157,1165,1205,1213],best:[918,976,1188],beta1:[1019,1021,1022,1026,1221,1222,1223],beta2:[1019,1021,1022,1026,1221,1222,1223],beta:[1174,1175],between:[40,41,42,784,785,918,921,1120,1124,1132,1134,1170,1172,1173,1221,1223],bia:[1157,1166,1167,1205,1206,1207,1208,1209,1210,1211,1212,1215],bias_initi:[1205,1206,1207,1208,1209,1210,1211,1212,1215],bilinear:[1035,1036],bilinear_resampl:[153,329,445,565,713,1035],bilinearli:[1035,1036],binari:[1170,1171],binary_cross_entropi:1170,bit:[372,784,785,786,894,905,1035,1037,1041,1188],bitwise_oper:[0,7,8],block:[1188,1231],bool:[15,18,19,40,41,42,43,788,789,796,797,799,800,801,842,843,844,862,875,879,883,888,891,893,894,904,918,920,926,927,940,943,947,948,953,960,962,970,976,997,999,1013,1014,1015,1019,1022,1023,1024,1025,1026,1027,1028,1030,1042,1045,1048,1072,1073,1074,1075,1076,1120,1121,1122,1124,1128,1129,1132,1133,1139,1141,1142,1143,1144,1145,1146,1147,1149,1150,1157,1165,1194,1195,1205,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226],both:[43,918,939],bottom:1188,boundari:[40,41,1132,1136],branch:[842,843],brittl:43,broadcast:[40,41,43,799,800,801,803,828,918,929,947,978,979,980,988,1042,1045,1048,1054,1060,1064,1139,1141,1142,1143,1144,1145,1146,1147],broadcast_to:[270,635,918],build:[1076,1188,1205,1216,1217,1218],build_mod:[1205,1216,1217,1218],builder:1188,built:[844,918,921,1076,1205,1216,1217,1218],builtin:43,builtin_ab:[225,803],builtin_add:[225,803],builtin_and:[225,803],builtin_bool:[225,803],builtin_contain:[225,803],builtin_deepcopi:[225,803],builtin_dir:[225,803],builtin_eq:[225,803],builtin_float:[225,803],builtin_floordiv:[225,803],builtin_g:[225,803],builtin_getattr:[225,803],builtin_getattribut:[225,803],builtin_getitem:[225,803],builtin_gt:[225,803],builtin_int:[225,803],builtin_invert:[225,803],builtin_l:[225,803],builtin_lt:[225,803],builtin_mul:[225,803],builtin_n:[225,803],builtin_neg:[225,803],builtin_or:[225,803],builtin_po:[225,803],builtin_pow:[43,225,803],builtin_radd:[225,803],builtin_rand:[225,803],builtin_rfloordiv:[225,803],builtin_rmul:[225,803],builtin_ror:[225,803],builtin_rpow:[225,803],builtin_rsub:[225,803],builtin_rtruediv:[225,803],builtin_rxor:[225,803],builtin_setitem:[225,803],builtin_some_op:43,builtin_sub:[225,803],builtin_truediv:[225,803],builtin_xor:[225,803],bypass:1231,cach:[844,860,918,930],cache_fn:918,calcul:[40,41,42,43,803,828,1054,1064],call:[43,844,888,918,987,995,1012,1019,1023,1076,1120,1121,1124,1128,1205,1216,1217,1218,1221,1225,1231,1234],callabl:[40,41,842,843,844,853,854,888,918,930,943,945,976,1012,1072,1073,1074,1075,1076,1120,1124,1125,1126,1128,1129,1157,1168],can:[43,844,886,887,888,918,989,1035,1037,1076,1188,1230,1231,1234],cancel_join_thread:1076,captur:1188,cast:[40,41,114,270,403,518,635,894,918,935,1035,1037,1041],catch_except:[918,943],categori:43,ceil:[270,635,918,921],cell:[1157,1167,1205,1214],certain:[40,41,918,921,974,975],chain:[40,41,1072,1073,1074,1227,1228],chang:[844,918,989,1076,1120,1122,1129,1188,1230],channel:[918,953,1035,1037,1038,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215],check:[15,16,17,18,19,40,41,844,883,893,894,899,908,917,918,928,948,962,970,1004,1014,1019,1025,1076,1120,1121,1128,1188,1231],check_nest:[1120,1128],check_shap:[40,41],check_submod_ret:[1217,1218],check_typ:[40,41],choic:[1188,1231],choleski:[717,1042],choos:[918,1015,1054,1060,1188],choose_random_framework:59,chosen:[40,41,918,921,1015],chunk:[844,886,887,888,1076],chunk_siz:[844,888,1076],circl:[1054,1055,1057],clark:1188,clear:[844,860,1076],clear_framework_stack:59,clear_mem_on_dev:[627,844],click:1188,clip:[40,41,270,635,918,933,934,978,980,1188],clip_matrix_norm:918,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,918],clipped_delta:1076,clone:[40,41,844,863,864,865,866,1076],clone_arrai:1076,clone_it:1076,clone_nest:1076,clonedit:1076,cloneditem:1076,clonednest:1076,close:[43,1035,1040,1054,1057,1076,1234],closest:[894,899],closest_valid_dtyp:894,code:[40,41,42,43,1188,1189,1230,1231],codebas:[844,886,887,1076,1188,1231,1234],collect:[15,40,41,803,842,844,894,918,1019,1035,1042,1050,1054,1076,1120,1132,1139,1149,1157,1170,1174,1191,1205,1219,1221],color:[40,41,42,1232,1233],column:[918,963],combin:[40,41,42,1035,1040,1188,1234],combined_batch_s:1076,come:1231,command:1188,commit:1234,common:[40,41,1054,1060],common_key_chain:[40,41],commun:[1188,1231],compar:[40,41,918,920,926,927],comparison_oper:[0,9,10],compat:[43,799,800,801,803,828,918,947,989,1054,1064,1188,1234],compil:[270,403,635,1177,1178,1182,1188,1217,1218,1221,1222,1223,1224,1225,1226],compile_graph:[1176,1188,1217,1218,1221,1225],compile_on_next_step:[1217,1218,1221,1222,1223,1224,1225,1226],complet:[40,41,1076],complex:[1231,1234],compon:[918,939],composit:43,comput:[40,41,844,888,918,933,934,940,941,947,977,1019,1021,1022,1023,1024,1026,1027,1028,1030,1032,1035,1038,1042,1043,1044,1045,1046,1048,1050,1051,1052,1053,1054,1055,1057,1059,1060,1062,1065,1066,1067,1068,1070,1120,1124,1139,1140,1141,1142,1143,1144,1145,1146,1147,1157,1158,1159,1160,1161,1162,1163,1164,1166,1168,1170,1171,1172,1173],concat:[40,41,844,873,874,875,876,888,918,953,1076],concaten:[40,41,114,270,403,518,635,918,953,1076,1188],concatten:[40,41,844,873,874,875,876,888,1076],condit:[842,843,918,1015,1120,1128],conditon:[1120,1128],config:[40,41,1076],config_list:1076,configur:[40,41],conjunct:1231,connect:[1182,1205,1215,1216],consid:[40,41,1042,1048,1230,1234],consist:[40,41,844,876,1076,1139,1140,1217,1218,1231],constant:[844,853,854,918,936,1076,1120,1124,1170,1171,1172,1173,1174,1175,1196,1197,1201,1204,1217,1218,1219,1220,1231],constant_kwarg:1076,constant_pad:[270,518,635,918],constitu:[40,41],construct:[918,1006,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230],constructor:[40,41,42,918,922,1227,1228],consum:[844,1076],cont_feat_dim:[1157,1168],contaienr:[40,41],contain:[15,18,19,42,43,788,789,796,797,799,800,801,803,828,844,863,867,888,894,898,918,919,923,924,932,933,934,937,947,962,978,980,990,1001,1002,1019,1021,1022,1024,1026,1027,1028,1054,1064,1072,1073,1074,1075,1076,1132,1133,1139,1141,1142,1143,1145,1147,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[635,918],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[918,981,1157,1168,1205,1216],context_dim:[1205,1216],contextmanag:[59,60],continu:[43,1076,1231],contract:[40,41,1139,1140],contribut:[1188,1189],contributor:1188,control:1188,conv1d:[184,360,470,772,1157,1188,1205],conv1d_transpos:[184,360,470,772,1157],conv1dtranspos:[1188,1205],conv2d:[184,360,470,590,772,1157,1188,1205],conv2d_transpos:[184,360,470,772,1157],conv2dtranspos:[1188,1205],conv3d:[184,360,470,590,772,1157,1188,1205],conv3d_transpos:[184,360,470,772,1157],conv3dtranspos:[1188,1205],convent:[40,41,1139,1140],conver:[844,860,871,883,890,893,1076],convers:[16,17,18,19,40,41,1076,1188],convert:[15,16,17,18,19,40,41,43,844,871,872,894,900,906,907,918,998,1009,1010,1035,1037,1041,1042,1049,1076,1120,1122,1129,1188,1195],convert_dtyp:894,convolut:[1157,1158,1159,1160,1161,1162,1163,1164,1205,1206,1207,1208,1209,1210,1211,1212],cool:43,cooler:43,coordin:[918,979,1054,1055,1057,1060],copi:[40,41,918,938,1076,1120,1122],copy_arrai:[635,918],copy_nest:1120,core:[803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,846,847,848,849,850,851,853,854,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1188],correct:[43,1188,1231],correctli:[40,41,1042,1045,1048,1054,1060,1139,1141,1142,1143,1144,1145,1146,1147],correspond:[40,41,43,803,828,918,935,1132,1133],cos:[728,918,953,1054,1055,1070,1231],cosh:[728,1054],cosin:[1054,1055,1056,1062,1063],cost:[1019,1021,1022,1024,1026,1027,1028,1072,1073,1074,1075],cost_fn:[1072,1075],could:1234,count:[40,41,799,800,801,1076,1139,1144,1146,1186],cprint:1232,cpu:[40,41,43,844,881,883,889,890,893,918,921,925,955,956,963,974,975,983,984,985,991,992,1017,1018,1076,1132,1133,1134,1135,1136,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1227,1228,1230,1231],creat:[40,41,844,853,854,918,921,925,954,955,956,963,974,975,983,984,985,991,992,1008,1017,1018,1019,1032,1076,1132,1133,1134,1135,1136,1188,1194,1195,1196,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1234],create_if_abs:[40,41],create_vari:1196,creation:[40,41,42,43],crop:[1035,1039],crop_siz:[1035,1039],cross:[270,635,918,1170,1171,1172,1173],cross_entropi:1170,cuda:[40,41,844,853,872,889,918,921,925,955,956,963,974,975,983,984,985,991,992,1017,1018,1076,1132,1133,1134,1135,1136,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1227,1228],cumprod:[114,270,403,635,918],cumsum:[635,918],cumul:[918,940,941],current:[40,41,42,43,844,853,877,878,880,884,894,900,908,917,918,942,957,965,969,982,986,1076,1120,1121,1128,1188,1234],current_framework:59,current_framework_str:[635,918,1076],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1182,d_in:[1157,1158,1159,1160,1161,1162,1163],d_out:[1157,1158,1159,1160,1161,1162,1163],da_can_termin:1076,da_dim_s:[844,1076],da_direct:1076,da_tune_step:[844,1076],dai:1234,daniel:1188,data:[40,41,42,43,785,786,788,789,799,800,801,803,828,844,846,847,848,849,850,851,856,857,858,872,894,898,899,900,904,905,906,907,908,909,910,917,918,921,925,947,954,963,970,984,985,989,1000,1004,1017,1018,1019,1025,1033,1054,1064,1076,1157,1166,1188],data_format:[1157,1158,1159,1160,1161,1162,1163,1164,1205,1206,1207,1208,1209,1210,1211,1212],data_type_funct:[372,374,375,784,785,786],dataset:[40,41],datatyp:[40,41,894,899,909,910],dcdw:[1019,1021,1022,1024,1026,1027],debug_info:1182,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1019,1026,1027,1221,1223,1224],decay_lambda:[1019,1026,1027,1221,1223,1224],decid:[40,41,1234],decompos:[1042,1043],decomposit:[1042,1043,1047],decor:43,decrement:[918,966],dedic:[1019,1033,1194,1195],deep:[40,41,1188],deep_copi:[40,41],deeper:[844,866,870,876,1076,1120,1129,1188],deepli:[1120,1122],def:[43,60,79,197,373,483,599,845,852,855,895,896,897,1020,1076,1080,1087,1183,1187,1188,1197,1200,1203,1230,1231,1234],default_dev:43,default_devic:844,default_dtyp:[43,894],default_float_dtyp:894,default_int_dtyp:894,default_key_color:[40,41,42],default_nod:1076,default_v:[918,943],defaultdevic:[844,845],defaultdtyp:[894,895],defaultfloatdtyp:[894,896],defaultintdtyp:[894,897],defer:43,defin:[43,918,939,983,985,1018,1132,1134],degre:[1054,1062,1068,1070],del:1076,delta:[1019,1021,1076,1182],delta_dim_s:1076,delta_percent_mem:1076,delta_sf:1076,delta_util:1076,demo:1188,denomin:[918,952,959,994,1001,1002,1174,1175,1219,1220],dens:[1205,1215],depend:[43,803,828,918,1015,1042,1047,1188],depth:[40,41,844,866,870,876,918,961,983,1076,1120,1129,1182,1186,1217,1218],depth_cutoff:[40,41],depthwis:[1157,1164,1205,1212],depthwise_conv2d:[184,360,470,590,772,1157],depthwiseconv2d:[1188,1205],deriv:[1019,1021,1022,1024,1026,1027,1028,1120,1122,1129,1188,1217,1221,1225,1227],descend:[796,797,1042,1047],descent:[1019,1024,1221,1226],describ:[40,41,1139,1140],design:[1188,1189],desir:[40,41,844,889,894,898,918,921,925,963,964,984,985,1017,1018,1035,1040,1076,1139,1141,1142,1143,1145,1147],desired_aspect_ratio:[1035,1040],desired_percent_increas:1076,detail:1234,detect:[40,41,1120,1121,1128],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,788,789,799,800,801,803,828,844,879,881,882,891,894,898,899,905,908,909,910,917,918,920,921,925,926,927,962,965,969,970,1004,1014,1019,1025,1054,1064,1072,1073,1074,1075,1076,1157,1168],dev:[40,41,42,43,107,264,511,627,844,847,848,850,851,853,854,857,858,860,861,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,880,883,884,885,886,887,888,889,890,893,918,921,925,955,956,963,974,975,983,984,985,991,992,1017,1018,1019,1034,1132,1133,1134,1135,1136,1194,1195,1196,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1227,1228],dev_clon:[40,41,844],dev_clone_arrai:844,dev_clone_it:844,dev_clone_nest:844,dev_dist:[40,41,844],dev_dist_arrai:844,dev_dist_it:844,dev_dist_nest:844,dev_from_str:[43,107,264,511,627,844],dev_mapp:844,dev_str:[40,41],dev_to_str:[107,264,511,627,844],dev_unifi:844,dev_unify_arrai:844,dev_unify_it:844,dev_unify_nest:844,dev_util:844,devclonedit:844,devcloneditem:844,devclonednest:844,devdistit:844,devdistitem:844,devdistnest:844,develop:[1188,1231,1234],deviat:[40,41,1132,1135,1139,1145,1174,1175,1219,1220],devic:[21,40,41,43,846,847,848,849,850,851,853,854,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,918,921,925,954,955,956,963,974,975,983,984,985,991,992,1017,1018,1019,1034,1132,1133,1134,1135,1136,1188,1194,1195,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1227,1228],devmanag:[844,852],devmapp:[844,854],devmappermultiproc:844,diag:[1042,1047],diagon:[918,963],dict:[15,16,17,18,19,40,41,42,844,846,849,853,854,856,866,867,868,869,870,918,944,945,946,976,1072,1073,1074,1076,1120,1122,1123,1124,1127,1129,1194,1195],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,784,785,844,863,864,867,868,1076,1157,1166,1188,1231,1234],differenti:[1188,1231],dilat:[1157,1158,1159,1160,1161,1162,1163,1164,1205,1206,1207,1208,1209,1210,1211,1212],dim:[40,41,43,918,983,1035,1036,1040,1042,1047,1076,1205,1216],dim_siz:[40,41,844,1076],dimens:[40,41,42,799,800,801,844,875,918,929,935,939,944,945,946,949,953,960,973,983,988,989,999,1000,1003,1011,1013,1035,1039,1042,1045,1047,1048,1072,1073,1074,1075,1076,1132,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1154,1157,1158,1159,1160,1161,1162,1163,1164,1167,1170,1172,1173,1205,1206,1207,1208,1209,1210,1211,1212,1215,1216],dimension:[40,41,799,800,801,918,999,1000,1042,1047],direct:1076,directli:[43,1120,1129,1231,1234],directori:[918,996,1007],discret:[1170,1172],disk:[40,41,1035,1037],distanc:[918,921],distribut:[40,41,844,863,867,868,869,870,1076,1132,1133,1134,1135,1136,1157,1165,1205,1213,1217,1218],distribute_nest:1076,distributedarrai:[40,41],distrubt:[1170,1172],dive:[1188,1231],divid:[40,41,918,999,1001,1054],dividend:[1054,1064],divis:[918,952,959,994,1001,1002,1019,1021,1022,1026,1054,1064,1221,1222,1223],divisor:[1019,1021,1022,1026,1054,1064,1221,1222,1223],doc:1188,docstr:43,doe:[40,41,43,918,921,999,1230],doesn:1188,doing:43,domain:[1054,1055],don:1188,door:1234,dot:[1042,1044,1157,1168,1169,1205,1216],down:1230,downscal:[918,933,934],drag:[1188,1234],draw:[1132,1133,1135,1136],drawn:[1132,1133,1134,1135,1136],drop:[1188,1234],dropout:[1157,1188,1205,1216],dropout_r:[1205,1216],ds_tune_step:844,dtype:[40,41,43,114,270,372,374,375,403,518,635,784,785,786,898,899,900,901,902,903,905,906,907,908,909,910,911,912,913,914,915,916,917,918,921,925,954,963,983,984,985,1017,1018],dtype_bit:[114,270,403,518,635,894],dtype_from_str:[43,114,270,403,518,635,894],dtype_in:[894,900,905,906,907,908,909,910,917],dtype_to_str:[114,270,403,518,635,894],duplic:[40,41],dure:[40,41,43,842,843,918,1012,1019,1021,1022,1026,1072,1073,1074,1075,1217,1218,1221,1222,1223,1225],dynam:[842,843],each:[40,41,42,43,788,789,796,797,803,828,844,853,854,863,864,865,866,867,868,869,875,887,888,918,919,920,936,947,988,999,1003,1006,1016,1019,1022,1024,1026,1027,1028,1035,1038,1042,1047,1054,1057,1064,1066,1067,1076,1120,1124,1132,1133,1139,1140,1157,1158,1159,1160,1161,1162,1163,1164,1165,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1231],eager:1231,easi:1234,easili:1188,econom:1234,ecosystem:1188,edg:[918,932,936,1016],effect:[1019,1028],effective_grad:[1019,1028],effici:1234,einop:[40,41,918,944,945,946],einops_rearrang:[40,41,918],einops_reduc:[40,41,918],einops_repeat:[40,41,918],einstein:[40,41,1139,1140],einsum:[40,41,170,348,458,580,752,1139],either:[40,41,918,943,976,979,981,1072,1073,1074,1075,1076,1205,1216,1217,1218,1231],eleg:1076,element:[40,41,43,788,789,796,797,799,800,801,803,828,844,865,869,875,894,898,918,919,921,923,924,926,927,931,932,933,934,940,941,947,950,951,952,963,964,978,980,988,990,999,1010,1015,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1076,1139,1140,1142,1144,1146,1149,1150,1151,1152,1153,1154,1155,1156,1157,1165,1205,1213],elementwis:[40,41],elementwise_affin:[1219,1220],elementwise_funct:[377,378,788,789],elemtn:[1132,1133],elif:1076,els:[918,928,943,948,1076],elsewher:[918,1015],emphas:1188,empti:[40,41,1076],enabl:[40,41,42,1188],encapsul:[784,786],encod:[918,953,1035,1037],end:[918,921,1188,1231],ensur:43,entir:[40,41,799,800,801,844,888,1076,1188,1205,1214],entri:[40,41,918,950,974,975,999,1000],entropi:[1170,1171,1172,1173],enumer:1076,environ:1188,eps:[372,784,785],epsilon:[1019,1021,1022,1026,1170,1171,1172,1173,1174,1175,1219,1220,1221,1222,1223],equal:[40,41,518,635,788,789,918,920,926,927,936,999,1016,1054,1062,1068,1070,1132,1136],equality_matrix:[918,920],equat:[40,41,1139,1140],equival:[918,921,1054,1070],erf:[454,728,1054],error:[40,41,844,918,1000,1054,1065,1076,1149,1150,1217,1218,1221,1225],essenti:43,etc:[40,41,43,844,889,918,921,925,955,956,963,974,975,983,984,985,991,992,1017,1018,1076,1132,1133,1134,1135,1136,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1227,1228,1234],evalu:[40,41,799,800,801,918,979,1120,1121,1128],even:1234,evenli:[40,41,918,921,974,975,999],everi:[918,920,1234],exact:[40,41],exampl:[43,842,843,918,932,1003,1188,1230,1231,1234],example_input:[842,843],exc_tb:1076,exc_typ:1076,exc_val:1076,exce:[918,980],except:[40,41,44,47,799,800,801,918,921,928,935,943,1012,1076],excess_s:1076,excit:[1188,1231],exclud:[59,61,918,921,1132,1136],exclus:[40,41,918,940,970,1019,1025,1132,1134],execut:[43,918,1012,1231],execute_with_gradi:[150,324,440,560,707,1019,1188,1230],exist:[40,41,918,943,1076,1188,1221,1225,1234],exp:[728,1054],expand:[40,41,918,949,953],expand_dim:[40,41,270,635,918,1076],expect:[918,922],explain:1231,explicitli:[1205,1214,1216,1217,1218,1231],expon:[43,803,828,918,1002],exponenti:[43,803,828,1054,1065,1066],expos:[918,925,937],express:[918,979],exsit:[40,41],extend:43,extra:[40,41,42,1019,1023],eye:[1042,1044],fabian:1188,fabio:1188,factor:[844,853,886,887,888,1019,1021,1022,1026,1027,1042,1047,1076,1157,1158,1159,1160,1161,1162,1163,1164,1205,1206,1207,1208,1209,1210,1211,1212,1221,1222,1223,1224],falck:1188,fall:[1217,1218,1221,1225],fallback_to_non_compil:[1217,1218,1221,1225],fals:[15,18,19,40,41,42,59,66,67,68,69,70,788,789,796,797,799,800,801,844,862,875,883,888,893,894,901,902,903,904,918,920,940,943,948,953,960,970,976,997,999,1013,1015,1019,1022,1023,1024,1025,1026,1027,1028,1042,1045,1048,1072,1073,1074,1075,1076,1120,1121,1122,1124,1128,1129,1139,1141,1142,1143,1144,1145,1146,1147,1176,1177,1178,1182,1186,1194,1195,1217,1218,1221,1222,1223,1224,1225,1226],fan_in:1196,fan_mod:1196,fan_out:1196,far:[1120,1121,1128,1230],faster:[842,843],favourit:[1188,1230],feasibl:1234,feat_dim:[1157,1168,1169],fed:[844,888,1076],feed:[844,888,1076],field:1234,file:[40,41,43,918,996,1007,1217,1218],filepath:[40,41],fill:[40,41,918,954,984,1017,1132,1134],fill_valu:[918,954],filter:[1157,1158,1159,1160,1161,1162,1163,1164,1205,1206,1207,1208,1209,1210,1211,1212,1234],filter_s:[1205,1206,1207],filter_shap:[1205,1208,1209,1210,1211,1212],find:[40,41,1234],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[78,79,196,197,372,373,482,483,598,599,784],finish:[1188,1234],finit:[788,789],first:[40,41,842,843,844,875,918,926,935,939,947,974,975,1003,1005,1019,1023,1042,1047,1072,1073,1074,1075,1076,1120,1121,1128,1132,1138,1139,1144,1146,1205,1216,1217,1218,1221,1225,1231,1234],firstlayersiren:[1188,1196],firstli:[1231,1234],fist:[844,888,1076],fit:[40,41,918,988,1035,1040],fkt:1234,flag:[40,41,1019,1025],flat:[40,41,43,918,988,991],flat_list:[40,41],flatten:[40,41,918,953,988,1042,1048,1139,1141,1142,1143,1145,1147],flatten_key_chain:[40,41,1217,1218],flexibl:[1188,1231],flip:[40,41,114,270,403,518,635,918],float32:[43,894,898,906,907,918,921,925,963,984,985,1017,1018],float_dtyp:[894,902,912],float_img_to_uint8_img:1035,floor:[270,635,918,952,1076],floormod:[270,635,918],fluid:1234,fname:[1176,1178,1182,1217,1218],folder:[43,1188],follow:[40,41,43,784,786,844,888,918,966,967,968,1001,1002,1019,1022,1024,1026,1027,1028,1076,1120,1124,1129,1157,1168,1169,1188,1205,1215,1221,1225],followng:[784,785],fomaml_step:1072,forget:[1019,1021,1022,1026,1221,1222,1223],fork:[918,981],forkserv:[918,981,1076],form:[15,16,17,18,19,40,41,918,925,1019,1022,1024,1026,1027,1028,1120,1122,1129,1157],format:[40,41,43,844,862,894,898,900,904,918,921,925,963,984,985,1017,1018,1076,1139,1140,1188,1230,1231],format_fn:[40,41],format_key_chain:[40,41],forward:[1217,1218,1221,1225,1230],found:[40,41,42],fourier:[918,953],fourier_encod:918,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,92,95,96,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,154,155,156,158,159,160,164,165,166,167,168,169,171,172,173,174,175,176,177,180,182,183,185,186,187,188,189,190,191,197,198,199,202,210,213,214,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,330,331,332,334,335,336,337,339,340,341,344,345,346,347,349,350,351,352,353,354,355,356,359,361,362,363,364,365,366,367,373,374,375,378,386,389,390,402,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,441,442,443,444,446,447,448,450,451,452,455,457,459,460,461,462,463,464,465,468,469,471,472,473,474,475,476,477,483,484,485,488,496,499,500,512,513,514,515,516,517,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,561,562,563,564,566,567,568,570,571,572,576,577,578,579,581,582,583,584,585,586,587,591,592,593,599,600,601,604,612,615,616,628,629,630,631,632,633,634,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,708,709,710,711,712,714,715,716,718,719,720,721,722,723,725,726,727,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,746,747,748,749,750,751,753,754,755,756,757,758,759,762,763,764,765,766,767,768,770,771,773,774,775,776,777,778,779,785,786,789,796,797,800,801,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1043,1044,1045,1046,1047,1048,1049,1051,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1171,1172,1173,1175,1177,1178,1180,1181,1183,1187,1188,1192,1193,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1233,1234],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1076,framewrk:[918,981],freeli:43,frequenc:[918,953],from:[40,41,42,43,796,797,799,800,801,844,853,854,888,894,900,918,943,950,955,956,963,989,1000,1008,1015,1019,1022,1026,1035,1039,1072,1073,1074,1075,1076,1120,1122,1129,1132,1133,1134,1135,1136,1139,1144,1146,1157,1165,1168,1188,1194,1195,1205,1213,1216,1221,1225,1230,1231],from_cal:[1217,1218],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[114,270,403,518,635,784,785,918,1188],full_matric:[1042,1047],fulli:[43,1188,1205,1215,1216,1230],func:[40,41,842,843,844,888,918,930,1019,1023,1076],further:1234,furthermor:1234,futur:1234,gain:1196,gamma:[1174,1175],gather:[40,41,114,270,403,518,635,918,956],gather_nd:[40,41,114,270,403,518,635,918],gauss:[1054,1065],gaussian:[1149,1150],geglu:[1188,1191],gelu:[358,467,761,1149,1188,1191],gener:[23,40,41,43,842,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1025,1132,1134,1136,1137,1188,1221,1225],geometr:[918,953],get:[40,41,784,785,786,844,853,854,862,877,878,883,887,890,893,894,904,905,918,922,957,958,959,987,1076,1186,1188,1205,1214,1234],get_all_arrays_in_memori:918,get_all_arrays_on_dev:844,get_framework:59,get_initial_st:[1205,1214],get_min_bas:918,get_min_denomin:918,get_mod_kei:[1217,1218],get_num_dim:[635,918],get_param:1182,get_param_recurs:1182,get_referrers_recurs:918,getfullargspec:1076,gist:1188,give:[796,797,918,989,1231],given:[40,41,43,796,797,844,877,883,886,887,888,890,893,894,898,918,921,925,932,940,941,950,956,974,975,984,985,988,991,992,999,1006,1011,1013,1017,1018,1019,1021,1022,1024,1026,1027,1028,1042,1044,1049,1054,1055,1076,1120,1125,1126,1132,1135,1136,1138,1139,1142,1144,1145,1146,1147,1157,1158,1159,1160,1161,1162,1163,1164,1194,1195,1234],global:[40,41,42,844,853,854,861,886,887,888,894,901,902,903,918,942,958,959,987,993,994,995,1001,1002,1019,1034,1076,1174,1175,1180,1181,1188,1219,1220],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1188,1196,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215],got:1188,gpu0:43,gpu2:43,gpu:[844,879,882,1076],gpu_is_avail:[844,1076],grad:[1188,1221,1225,1230],gradient:[25,40,41,844,888,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1038,1072,1073,1074,1075,1188,1221,1222,1223,1224,1225,1226,1230,1234],gradient_descent_upd:[1019,1072,1073,1074,1075],gradient_imag:[153,329,445,565,713,1035],gradienttrack:[1019,1020],graph:[1019,1022,1024,1026,1027,1028,1176,1177,1178,1183,1188,1217,1218],graph_compil:[1176,1177,1178,1179,1180,1181,1182,1186],greater:[40,41,918,921,951,1000,1132,1136],green:[40,41,42,1232,1233],grid:[918,979],group:[1035,1040],guid:[1188,1189,1234],gym:1188,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1234,half:[918,921,1076,1132,1136],hand:1188,handl:[40,41,42,43,842,843,844,860,862,871,872,883,890,893,1019,1022,1024,1026,1027,1028,1076,1221,1222,1223,1224,1225,1226],has:[40,41,43,918,1003,1054,1059],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,918],hasattr:1076,have:[40,41,43,784,785,788,789,799,800,801,803,828,918,935,939,944,945,946,947,954,1003,1019,1025,1033,1042,1047,1054,1064,1076,1188,1230,1231],hdf5:[40,41,1217,1218],head:[1157,1168,1205,1216],head_dim:[1205,1216],height:[1035,1040],height_cutoff:[40,41],help:[59,372,844,856,857,858,859,894,1019,1182,1186,1188,1196,1198,1199,1201,1202,1204],helper:1188,here:[43,1188],hidden:[1157,1167,1205,1214],hierarch:[918,937],hierarchi:[40,41],high:[40,41,1132,1134,1136],higher:[1019,1022,1024,1026,1027,1028,1042,1047],highest:[1132,1134],highest_util:1076,highest_util_nod:1076,highli:1188,highlight:1234,highlight_subgraph:[1176,1178,1182],hint:43,hkt:1234,hold:[894,898,918,921,925,991,992],host:1188,hot:[918,983],how:[1188,1205,1216,1217,1218,1231,1234],howev:[43,1231],http:1234,hyperbol:[1054,1056,1058,1061,1063,1069,1071,1149,1156],hypothet:1234,icon:1188,idea:1188,ident:[40,41,43,114,270,403,518,635,918],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[784,785],if_exist:[40,41],ignor:[40,41,1221,1225],ignore_key_error:[40,41],ignore_miss:[1221,1225],ignore_non:[40,41],iinfo:[78,196,372,482,598,784],imag:[27,918,973,1036,1037,1038,1039,1040,1041,1157,1158,1159,1160,1161,1163,1164,1188,1234],image_dim:[1035,1039],imkkhk:1234,immedi:[1188,1231,1234],implement:[43,803,828,1188,1231,1234],in_featur:[1157,1166],includ:[40,41,43,799,800,801,918,921,962,1001,1002,1014,1120,1121,1132,1136,1205,1215,1216,1219,1220,1230],include_deriv:[1120,1122,1129],include_empti:[40,41],include_gener:[1176,1177,1178,1182,1217,1218],include_inf:[40,41,918,962,1014],include_nest:[1120,1121],include_self:[40,41],inclus:[1132,1134],incom:[1157,1166],increas:[844,866,870,876,918,936,949,1016,1076,1120,1129],increasingli:1234,increment:[918,967,1076],increment_param_count:1182,inde:1188,indent:[40,41,42],independ:[1132,1133],index:[40,41,918,923,924,955,956,979,1000,1003,1120,1123,1125,1126,1127,1130],index_nest:1120,indic:[40,41,796,797,918,923,924,955,956,964,983,991,992,1120,1121,1123,1125,1126,1127,1128,1130,1131,1132,1133,1149,1154,1157,1158,1159,1160,1161,1162,1163,1164,1174,1175,1205,1206,1207,1208,1209,1210,1211,1212,1217,1218],indices_wher:[114,270,403,635,918],inevit:1234,inf:[40,41,918,962,971,1014,1054,1059],infer:[796,797,842,843,918,950,960,963,989,997,1035,1039,1231,1234],infin:[788,789,918,971],inform:[784,785,786,1019,1030],init_c:[1157,1167],init_h:[1157,1167],init_on_first_step:[1221,1225],initi:[40,41,42,59,372,844,856,857,858,859,894,1019,1076,1157,1167,1182,1186,1188,1198,1199,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1221,1225],initialz:[1217,1218],inner:[1072,1073,1074,1075],inner_batch_fn:[1072,1073,1074],inner_batch_shap:[1157,1166],inner_cost_fn:[1072,1073,1074],inner_grad_step:[1072,1073,1074,1075],inner_learning_r:[1072,1073,1074,1075],inner_optimization_step:[1072,1073,1074,1075],inner_v:[1072,1073,1074],inp:1076,inplac:[40,41,918,928,965,969,1004,1019,1022,1024,1026,1027,1028,1194,1195,1221,1222,1223,1224,1225,1226],inplace_arrays_support:918,inplace_decr:[114,270,403,518,635,918],inplace_incr:[114,270,403,518,635,918],inplace_oper:[0,11,12],inplace_upd:[40,41,114,270,403,518,635,918,1194,1195],inplace_variables_support:918,input:[15,18,19,40,41,42,43,788,789,796,797,799,800,801,842,843,844,853,854,861,862,863,866,867,870,876,888,889,894,898,899,901,902,903,904,905,909,910,918,919,920,923,924,926,927,928,929,931,932,933,934,935,936,938,940,941,943,944,945,946,947,948,949,950,951,952,953,960,962,963,964,966,967,968,970,971,972,973,977,978,979,980,988,990,997,998,1000,1003,1004,1005,1006,1008,1009,1010,1011,1013,1014,1016,1019,1023,1025,1030,1034,1035,1036,1037,1038,1039,1041,1042,1045,1047,1048,1050,1051,1052,1053,1054,1056,1058,1059,1061,1062,1063,1064,1068,1069,1070,1071,1072,1073,1074,1075,1076,1132,1133,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1174,1175,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1219,1220,1231],input_ax:[844,888,1076],input_channel:[1205,1206,1207,1208,1209,1210,1211,1214,1215],input_queu:1076,inputs_split:1076,insert:[918,949],insid:43,inspect:1076,inspir:1234,instal:1188,instanc:[15,16,17,18,19,40,41,43,803,828,844,853,1076,1194,1195,1227,1228],instead:[40,41,1139,1141,1142,1143,1144,1145,1146,1147,1234],int32:43,int64:[894,898,918,921,925,963,984,985,1017,1018],int_dtyp:[894,903,913],integ:[40,41,784,786,799,800,801,894,910,918,921,931,951,990,999,1042,1048,1132,1134,1137],integr:1188,intend:43,inter:1188,interchang:[40,41,918,1005],interest:1188,interfac:[918,925,1231],intermedi:[40,41],intern:[40,41,844,1019,1033,1076,1120,1121,1128,1129,1196,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1227,1228],interpol:[918,973],intersect:[1054,1055],interv:[40,41,799,800,801,918,921,932,974,975,1054,1057,1132,1136],introduc:1234,inv:[717,1042,1234],invalid:[799,800,801],invalid_dtyp:894,invers:[1042,1044,1046,1054,1055,1056,1057,1058,1059,1061,1234],invert:[1042,1044,1046],invest:1234,invoc:[842,843],irrespect:1188,is_al:1076,is_arrai:[114,270,403,518,635,918,1076],is_float_dtyp:894,is_int_dtyp:894,is_mean:1076,is_sum:1076,is_var:[1182,1186],is_vari:[150,324,440,560,707,1019],isfinit:[83,201,377,487,603,788],isinf:[270,518,635,918],isinst:1076,isnan:[270,518,635,918],isnumer:1076,item:[15,19,40,41,803,815,816,844,853,854,856,863,865,867,869,875,894,901,918,937,961,1001,1002,1076,1120,1124,1125,1126,1129,1130,1131,1188,1217,1218,1230],iter:[15,16,17,18,19,40,41,42,842,843,844,847,848,850,851,853,854,857,858,865,867,868,869,870,875,888,918,920,929,935,936,950,963,979,984,988,989,992,997,999,1003,1006,1011,1016,1017,1076,1120,1121,1122,1124,1128,1129],iterbal:[844,865,869,875,1076],its:[796,797,844,888,918,963,989,1005,1011,1076,1188],itself:[43,1120,1129],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,372,374,375,377,378,784,785,786,788,789,796,797,799,800,801,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,846,847,848,849,850,851,853,854,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1186,1188,1189,1191,1192,1193,1194,1195,1196,1198,1199,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1232,1233],ivy_backend:[40,41],ivy_bay:1234,ivyfcmodel:1230,ivyh:[40,41,42],ivymodul:[181,769],jame:1188,jax:[1019,1025,1188,1234],jax_concat:1188,jnp:1188,join:[40,41,918,935,1003,1076],journal:1188,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1188,1205,1214,1234],kaimingnorm:[1196,1200],kalman:1234,kalman_filt:1234,kalman_filter_step:1234,kalman_filter_upd:1234,keep:[40,41,844,889,918,1013,1076,1188,1234],keep_inner_v:[1072,1073,1074],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1072,1073,1074],keepdim:[40,41,799,800,801,918,1013,1042,1045,1048,1139,1141,1142,1143,1144,1145,1146,1147],kei:[15,16,17,40,41,42,803,808,844,856,918,937,1072,1073,1074,1076,1120,1123,1127,1157,1168,1169,1188,1194,1195,1205,1216,1221,1225],kept:[40,41,42,1072,1073,1074],kera:1234,kernel:[1157,1167],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,844,853,854,866,870,876,918,922,944,945,946,976,1076,1120,1124,1217,1218],keyword_color_dict:[40,41,42],kind:[784,785,786,1234],kwarg:[15,16,17,40,41,42,59,63,844,853,866,870,876,918,976,1076,1176,1177,1178,1182,1194,1195,1217,1218],kwarg_stateful_idx:[1176,1177,1178,1182,1217,1218],kwargs_clon:1076,kwargs_dist:1076,kwargs_uni:1076,label:[1170,1171,1172,1173],lamb:[1019,1026,1188,1221],lamb_upd:1019,lambda:[1076,1221,1224,1226,1230],lar:[1019,1026,1027,1188,1221],larger:[784,785,918,932],largest:[40,41,784,785,786,918,923,951],lars_upd:1019,last:[40,41,799,800,801,918,921,939,973,999,1003,1042,1045,1047,1139,1144,1146,1149,1154,1157,1167,1205,1215],later:[40,41,918,930],latest:[1205,1214],layer:[1019,1022,1024,1026,1028,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1174,1175,1188,1196,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1227,1228,1234],layer_norm:1174,layernorm:[1188,1219],layerwis:[1019,1027,1221,1224],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1120,1121,1128],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1149,1150,1151],leaky_relu:[761,1149],learn:[796,797,1019,1022,1024,1026,1027,1028,1072,1073,1074,1075,1132,1138,1188,1221,1222,1223,1224,1225,1226,1231,1234],learnabl:[1174,1175,1219,1220],leav:[15,18,19,40,41,1120,1121,1122,1128,1129],left:[40,41,1042,1045,1048,1139,1141,1142,1143,1144,1145,1146,1147,1188],leftmost:[40,41],len:1076,length:[40,41,42,918,921,989,1000,1011],lenton2021ivi:1188,lenton:1188,less:[40,41,43,918,931,1076,1132,1136],less_util_node_str:1076,let:[1231,1234],level:1188,librari:[1188,1230,1234],lightweight:1188,like:[43,1019,1025,1132,1136,1188,1230,1231,1234],limit:[40,41,42,784,785,786,918,932,933,934],linalg:[29,1043,1044,1045,1046,1047,1048,1049,1188],linear0:[1188,1230],linear1:1188,linear2:1230,linear:[918,953,973,1042,1149,1150,1151,1152,1157,1165,1188,1205,1206,1207,1208,1209,1210,1211,1212,1230],linear_resampl:[114,270,403,518,635,918],linearli:[918,953],link:1188,linspac:[114,270,403,518,635,918,921],list:[15,18,19,40,41,43,799,800,801,844,853,854,863,864,866,867,868,870,873,874,888,918,921,925,927,979,998,999,1008,1013,1072,1073,1074,1076,1120,1121,1122,1124,1128,1129,1157,1158,1159,1160,1161,1162,1163,1164,1188,1194,1195,1205,1206,1207,1208,1209,1210,1211,1212],list_join:[40,41,42],list_stack:[40,41],littl:1231,load:[40,41],loaded_kwarg:1076,loader:1188,local_set:[918,961],locat:[43,918,971,972,1132,1133],log:[728,918,975,1054,1076,1170,1171,1172,1173,1188],log_all_op:1182,log_global_inference_abs_tim:[1179,1188],log_global_inference_rel_tim:[1179,1188],logarithm:[1054,1067],logic:[31,799,800,801,1051,1052,1053,1188],logical_and:[338,724,1050],logical_not:[338,724,1050],logical_or:[338,724,1050],logit:[1170,1173],logspac:[114,270,403,518,635,918],look:[43,1231,1234],loop:[1072,1073,1074,1075],loss:[1171,1172,1173,1188,1230],loss_fn:[1188,1230],lot:1231,low:[40,41,1132,1134,1136],lower:[40,41,918,978,1132,1136],lower_depth:[1217,1218],lowest:[15,18,19,40,41,1120,1129,1132,1134],lstm:[1157,1167,1188,1205],lstm_updat:[43,1157],machin:[784,785,786,796,797,1132,1138,1188,1231,1234],mai:[918,921,943,947,1188,1231,1234],main:[918,963,1188],mainli:1188,make:[43,844,1076,1188,1231],maml:[1072,1073,1074],maml_step:1072,manag:[844,1076],mani:[40,41,43,918,999,1188],manner:[15,18,19,40,41,43,1120,1129],manual:[1120,1121,1128,1234],map:[40,41,42,844,853,918,971,972,1076,1120,1125,1126,1129,1205,1216,1230],map_cont:[40,41],map_nest_at_index:1120,map_nest_at_indic:1120,map_sequ:[40,41],mapper:[844,853,854,1076],mask:[1157,1168,1169],match:[40,41,918,976],match_kwarg:918,math:[33,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1076,1188],mathbb:[1042,1049],mathbf:[1042,1049],matmul:[43,270,518,635,918,1234],matplotlib:1231,matric:[1157,1166],matrix:[40,41,918,920,933,977,1042,1043,1044,1045,1046,1049,1157,1166,1205,1215],matrix_norm:[40,41,157,333,449,569,717,1042],matter:1188,max:[40,41,372,784,785,786,918,933,934,945,978,991,992,1076,1139,1141,1221,1223],max_batch_s:[40,41],max_chunk_s:[844,888,1076],max_depth:[40,41,844,848,851,858,866,870,876,918,961,1076,1120,1129],max_dev_dim_step_ratio:844,max_freq:[918,953],max_length:[40,41],max_node_dim_step_ratio:1076,max_norm:[40,41,918,933,934],max_split_factor_step_s:[844,1076],max_trust_ratio:[1019,1026,1221,1223],maxim:[1188,1231,1234],maximis:1188,maximum:[40,41,42,635,844,866,870,876,888,918,923,932,933,934,953,1019,1026,1076,1120,1129,1139,1141],mayb:[15,18,19],mdi:1076,mean:[40,41,844,873,874,875,876,888,918,945,1072,1073,1074,1075,1076,1120,1124,1132,1135,1139,1142,1145,1147,1196,1230,1234],measur:[1157,1168,1205,1216],mech:1188,mechan:[1188,1234],medic:1234,memori:[844,860,883,888,890,893,1076,1157,1167,1188],meshgrid:[270,635,918],messag:[1232,1233],meta:[35,1073,1074,1075,1188],method:[40,41,42,43,918,925,937,979,991,992,1019,1026,1027,1076,1120,1121,1128,1129,1188,1205,1216,1217,1218,1231],might:[918,943,1234],min:[40,41,372,784,785,786,918,945,980,991,992,1001,1076,1139,1143],min_bas:[918,1002],min_denomin:[918,1001],min_dev_dim_s:844,min_node_dim_s:1076,min_sf_tune_step:[844,1076],min_unit_dev_tune_step:844,min_unit_node_tune_step:1076,mind:1188,mini:[1174,1175,1219,1220],minimum:[40,41,635,844,894,898,918,921,924,925,932,958,959,993,994,1001,1002,1076,1139,1143],miss:[1221,1225],ml_framework:[796,797,918,921],mod:[918,952],mod_depth:[1217,1218],mod_height:[1217,1218],mod_with_top_mod_key_chain:[1217,1218],mode:[40,41,842,843,844,873,874,875,876,888,1042,1047,1076,1231],model:[1188,1230],modul:[40,41,42,59,918,981,1076,1188,1189,1191,1192,1193,1194,1195,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1219,1220,1227,1228,1234],moment:[1019,1021,1022,1026,1221,1222,1223],more:[43,918,1003,1076,1188,1231,1234],more_util_node_str:1076,most:[40,41,43,1188,1234],move:[40,41,43,844,889,1076],much:[1188,1234],multi:[918,981,1157,1168,1205,1216],multi_head_attent:1157,multi_index_nest:1120,multi_map:[40,41],multi_nod:1076,multidev:[844,855,856,857,876],multidevcontain:[40,41],multidevic:[844,853],multidevit:[844,847,850,853,854,858],multidevitem:[844,846,849],multidevnest:[844,848,851],multiheadattent:[1188,1205],multinod:[1076,1080],multinodecontain:1076,multinodeit:1076,multinodeitem:1076,multinodenest:1076,multinomi:[163,343,456,575,745,1132],multipl:[40,41,799,800,801,918,976,999,1042,1044,1139,1141,1142,1143,1144,1145,1147,1174,1175,1205,1215,1231],multipli:[40,41,918,940,1139,1144],multiprocess:[40,41,42,635,844,853,918,1076],must:[40,41,42,43,788,789,799,800,801,803,828,844,873,874,875,876,888,918,921,935,937,939,947,978,980,992,1003,1054,1060,1064,1076,1132,1137,1221,1225],mutabl:[1120,1122,1129],mutlidevic:[844,853],mutlinod:1076,mw_tm1:[1019,1022,1026],mx_concat:1188,mxnet:[43,1188,1234],my_func:43,mymodel:1188,name:[842,843,1176,1177,1178,1182,1230],namespac:[43,1231],nan:[40,41,788,789,918,962,972,1014],nativ:[15,17,18,19,40,41,43,844,860,862,871,872,883,890,893,894,899,906,907,1076,1188,1189,1194,1195],native_modul:[1194,1195],native_module_class:[1194,1195],nativearrai:[15,18,19,43,784,785,786,788,789,796,797,799,800,801,803,828,844,862,888,889,894,898,904,909,910,918,919,920,921,923,924,925,926,927,929,931,932,933,934,935,936,938,939,940,941,944,945,946,947,949,950,951,952,953,955,956,960,962,963,964,971,972,973,974,975,977,978,979,980,983,984,985,988,989,990,991,992,997,999,1000,1003,1005,1006,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1076,1120,1122,1129],natur:[1054,1067,1234],ncdhw:[1157,1162,1163,1205,1210,1211],nchw:[1157,1160,1161,1164,1205,1208,1209,1212],ncw:[1157,1158,1159,1205,1206,1207],ndarrai:[43,372,374,375,377,378,918,1009],ndhwc:[1157,1162,1163,1205,1210,1211],nearest:[918,990],need:[43,918,933,934,1157,1159,1161,1163,1188,1205,1207,1209,1211,1234],neg:[40,41,788,789,799,800,801,1139,1144,1146,1149,1151],negative_slop:1196,neither:1076,nest:[15,16,17,18,19,40,41,42,844,866,870,876,918,925,1008,1072,1073,1074,1076,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1217,1218,1221,1222,1223,1224,1225,1226],nested_indices_wher:1120,nested_map:[1076,1120],network:[1157,1166,1188,1189,1191,1205,1217,1218,1234],neural:[1157,1188,1191,1205,1230],new_node_percent_mem:1076,new_node_util:1076,new_node_utils_kei:1076,new_std:[1174,1175,1219,1220],newli:[842,843,918,929,930],newlin:[40,41,42],newshap:[918,929,989],next:[784,785,1076,1217,1218,1221,1222,1223,1224,1225,1226],nhwc:[1157,1160,1161,1164,1205,1208,1209,1212],node:[40,41,1120,1121,1128],node_clon:1076,node_dist:1076,node_dist_arrai:1076,node_dist_it:1076,node_in:1076,node_mapp:1076,node_str:1076,node_to_str:1076,node_util:1076,nodedistit:1076,nodedistitem:1076,nodedistnest:1076,nodemanag:[1076,1087],nodemapp:1076,nodemappermultiproc:1076,noinspect:[43,845,895,896,897,1020,1076,1183],non:[40,41,799,800,801,842,843,894,908,1217,1218,1221,1225,1231],none:[40,41,42,43,59,61,64,784,785,786,796,797,799,800,801,842,843,844,853,854,860,861,886,887,888,889,894,901,902,903,918,921,925,942,943,948,950,954,955,956,961,963,965,966,967,968,969,974,975,981,983,984,985,988,991,992,993,994,999,1000,1001,1002,1011,1012,1017,1018,1019,1022,1024,1026,1027,1028,1034,1035,1039,1042,1045,1048,1072,1073,1074,1075,1076,1120,1121,1124,1128,1129,1132,1133,1134,1135,1136,1139,1141,1142,1143,1144,1145,1146,1147,1157,1159,1161,1163,1166,1167,1168,1169,1174,1175,1176,1177,1178,1182,1186,1194,1195,1196,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228],norm:[40,41,918,933,934,1042,1045,1048,1175,1188,1220,1221,1223],normal:[1132,1135,1174,1175,1219,1220],normalized_idx:[1174,1175],normalized_shap:[1219,1220],notat:[40,41,1139,1140],note:43,noth:[40,41,1231],notimplementederror:1076,now:[40,41,844,889,918,919,1076,1188,1205,1216,1217,1218,1230,1231,1234],np_concat:1188,np_finfo:372,ns_tune_step:1076,num:[918,974,975],num_arrai:[40,41],num_arrays_in_memori:918,num_arrays_on_dev:844,num_band:[918,953],num_channel:[1205,1212],num_chunk:1076,num_chunks_floor:1076,num_class:[1132,1133],num_cpu_cor:844,num_gpu:[107,844,1076],num_head:[1157,1168,1205,1216],num_kei:[1157,1168,1169],num_lay:[1205,1214],num_or_size_split:[40,41,918,999],num_output:1076,num_queri:[1157,1168,1169],num_sampl:[918,973,1035,1036,1132,1133],num_task:[1072,1073,1074,1075],number:[40,41,42,784,785,786,799,800,801,842,843,844,880,881,882,894,905,909,910,918,921,932,936,949,953,960,963,972,973,974,975,978,982,988,999,1006,1010,1014,1016,1042,1047,1072,1073,1074,1075,1076,1132,1133,1137,1139,1141,1142,1143,1145,1147,1157,1168,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1231,1234],numer:[43,788,789,803,828,918,958,959,993,994,1001,1002,1054,1064,1196],numhead:[1157,1168],numpi:[40,41,372,374,375,377,378,918,1009,1042,1047,1139,1140,1188,1230,1231,1234],nwc:[1157,1158,1159,1205,1206,1207],obj:[40,41],object:[40,41,42,59,372,784,785,786,844,894,898,918,921,925,1019,1120,1123,1125,1126,1127,1130,1131,1132,1138,1182,1186,1196,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1217,1218],object_in:[918,925],observ:1076,occupi:[784,785,786,918,991,992],off:[918,921],offer:1188,offset:[1174,1175],often:1231,old:[40,41],on_init:[1205,1216,1217,1218],onc:[844,888,1076,1132,1133,1188],one:[40,41,43,844,873,874,875,876,888,894,900,918,963,976,983,991,992,1000,1003,1042,1045,1048,1076,1139,1140,1141,1142,1143,1144,1145,1146,1147,1188,1231,1234],one_hot:[114,403,518,635,918],onearrai:[918,949],ones:[40,41,114,270,403,518,635,918,963,983,985,1188],ones_lik:[114,270,403,518,635,918],ongo:43,onli:[40,41,43,844,1076,1120,1121,1122,1128,1221,1222,1223,1224,1225,1226,1230,1231],onlin:1188,onto:[844,873,874,889,1076,1120,1124,1129],oom:[844,1076],open:[918,921,1132,1136,1188,1234],opencv:1231,oper:[40,41,918,928,944,945,946,974,975,1004,1019,1022,1024,1026,1027,1028,1050,1051,1052,1053,1157,1158,1159,1160,1161,1162,1163,1164,1166,1188,1189],operand:[40,41,1139,1140],oppos:[918,953],optim:[844,1019,1022,1024,1026,1027,1028,1072,1073,1074,1075,1076,1188,1222,1223,1224,1226,1230,1234],optimizer_upd:1019,option:[15,18,19,40,41,42,43,796,797,799,800,801,842,843,844,853,854,862,866,867,868,869,870,873,874,875,876,883,886,887,888,889,893,894,899,904,908,917,918,920,921,923,924,925,933,934,935,940,942,943,950,953,954,955,956,960,962,963,970,973,974,975,976,979,981,983,984,985,988,991,992,995,997,999,1000,1001,1002,1003,1011,1013,1014,1017,1018,1019,1022,1024,1025,1026,1027,1028,1030,1035,1039,1042,1045,1048,1072,1073,1074,1075,1076,1120,1121,1122,1124,1128,1129,1132,1133,1139,1141,1142,1143,1144,1145,1146,1147,1149,1150,1154,1157,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1194,1195,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1231],ord:[918,950,1042,1047],order:[40,41,42,43,796,797,1019,1022,1024,1026,1027,1028,1042,1045,1048,1072,1073,1074,1227,1228],ordered_node_util_kei:1076,org:1234,organ:43,origin:[40,41,42,918,985,989,1018,1042,1045,1048],other:[40,41,43,803,805,806,811,813,814,818,820,821,822,823,824,826,828,829,830,831,832,833,835,836,837,839,840,841,842,843,918,920,921,963,1019,1023,1132,1136,1188,1230,1231,1234],other_i:[43,803,828],otherwis:[15,16,17,18,19,40,41,788,789,799,800,801,844,861,894,901,902,903,918,928,1011,1012,1015,1019,1025,1030,1034,1072,1073,1074,1076,1139,1141,1142,1143,1145,1147],our:[1188,1234],out:[918,921,1054,1059,1157,1165,1167,1188,1205,1213],out_feat_dim:[1157,1168],out_featur:[1157,1165,1166],out_i:[788,789],outdat:1234,outer:[1072,1073,1074,1075],outer_batch_fn:[1072,1073,1074],outer_batch_shap:[1157,1166],outer_cost_fn:[1072,1073,1074],outer_v:[1072,1073,1074],outlin:1231,output:[40,41,43,844,853,854,888,918,921,930,954,963,988,1006,1019,1023,1054,1060,1076,1132,1134,1135,1136,1157,1159,1161,1163,1165,1167,1168,1169,1188,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1216],output_ax:[844,888,1076],output_axi:1076,output_channel:[1205,1206,1207,1208,1209,1210,1211,1214,1215],output_connected_onli:[1176,1178,1182,1217,1218],output_queu:1076,output_shap:[1157,1159,1161,1163,1205,1207,1209,1211],outsid:[918,932],over:[40,41,799,800,801,918,950,1042,1045,1048,1132,1136,1139,1141,1142,1143,1145,1147,1174,1175,1219,1220],overal:1231,overflow:[918,921],overhead:1231,overrid:[918,983,985,1018],overriden:[1221,1225],overwrit:[40,41,844,888,1076],overwrite_at_key_chain:[40,41],own:[1188,1231,1234],packag:[43,1231],pad:[918,936,953,1016,1157,1158,1159,1160,1161,1162,1163,1164,1205,1206,1207,1208,1209,1210,1211,1212],pad_width:[918,936,1016],page:1188,pair:[1157,1169],parallel:[844,853,854,1076],parallelis:[844,853,854,1076],param:[40,41,42,43,799,801,844,888,918,919,955,956,983,984,1017,1076,1187,1188,1217,1218,1230],paramet:[15,16,17,18,19,40,41,42,784,785,786,788,789,796,797,799,800,803,828,842,843,844,853,854,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,883,886,887,888,889,890,893,894,898,899,900,904,905,906,907,908,909,910,917,918,920,921,923,924,925,926,927,928,929,930,931,932,933,934,935,936,938,939,940,941,943,944,945,946,947,948,949,950,951,952,953,954,955,956,960,962,963,964,966,967,968,970,971,972,973,974,975,976,977,978,979,980,981,984,985,988,989,990,991,992,993,994,995,997,998,999,1000,1001,1002,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1030,1032,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1194,1195,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230],parameter:[1132,1135,1136],params_all_empti:1182,pardo:1188,pars:[918,937],part:[1019,1022,1024,1026,1027,1028,1054,1059,1188,1217,1218,1231],partial:[40,41,1217,1218],particl:1234,particular:1234,pass:[40,41,42,844,853,888,894,899,918,930,1019,1033,1072,1073,1074,1076,1194,1195,1217,1218,1221,1225,1227,1228],pattern:[40,41,918,944,945,946],per:[844,1076,1157,1158,1159,1160,1161,1162,1163,1164,1205,1206,1207,1208,1209,1210,1211,1212],percent_used_mem_on_dev:844,percent_used_mem_on_nod:1076,percentag:[844,883,1076],perf_count:1076,perform:[40,41,43,796,797,799,800,801,844,918,923,924,940,944,945,946,966,967,968,973,974,975,1019,1022,1024,1026,1027,1028,1035,1036,1072,1073,1074,1075,1076,1120,1125,1126,1139,1141,1142,1143,1144,1145,1146,1147,1149,1154,1157,1165,1167],permissable_step:1076,permit:43,permut:[918,1005,1011],perpendicular:[918,939],person:1188,physci:1234,pickl:[40,41,1076],pickle_filepath:[40,41],pid:1182,pinv:[333,717,1042],pip:1188,pipelin:1230,pkk:1234,pkkm1:1234,pkm1km1:1234,place:[40,41,43,844,889,918,949,954,966,967,968,1076,1221,1222,1223,1224,1225,1226],placehold:[1120,1129],point:[784,785,894,909,918,921,1054,1064],popul:[40,41,1132,1133],popular:1234,population_s:[1132,1133],portabl:[1188,1189],posit:[15,16,17,784,785,788,789,844,866,870,876,918,919,921,949,953,1076,1132,1137,1194,1195],possibi:[40,41],possibl:[918,976,1008,1035,1040,1234],post:[1174,1175],post_shap:[40,41],power:[43,803,828,834,918,958,993,1002,1196],practic:1188,pre:[844,1076,1188],pre_shap:[40,41],precis:[784,785],pred:[1170,1171,1172,1173],predict:[1170,1171,1172,1173,1234],preprint:1188,present:[40,41],preserv:[40,41,42,918,950,1019,1030],preserve_typ:[40,41,1019,1030],press:1188,prevent:[43,1019,1021,1022,1026,1076,1221,1222,1223],previou:[1019,1022,1026],previous:[918,930],prime:1188,print:[40,41,42,844,884,918,986,1188,1230],print_all_arrays_in_memori:918,print_all_arrays_on_dev:844,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1221,1225],prob:[1132,1133,1157,1165,1205,1213],probabl:[1132,1133,1157,1165,1205,1213],problem:[43,1234],process:[43,844,853,854,883,893,918,981,1076],process_specif:[844,883,893,1076],prod:[40,41,918,945],produc:[844,853,854,1076],product:[40,41,918,939,940,977,1139,1140,1157,1168,1169,1205,1216],profil:[107,264,401,511,627,844,1076],project:[1188,1230,1231,1234],promot:[43,803,828,1054,1064],prompt:1188,properli:43,properti:[40,41,372,844,856,1076,1182,1186,1217,1218,1221,1222,1223,1224,1226],provid:[40,41,43,799,800,801,842,843,844,861,894,901,902,903,908,917,918,943,983,985,992,1018,1019,1022,1024,1026,1027,1028,1034,1076,1188,1205,1214,1221,1222,1223,1224,1225,1226,1231],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1042,1046],ptype:[1182,1186],pure:[40,41,1188,1234],purpos:1234,put:1076,pybroadexcept:1076,pyprotectedmemb:[1076,1183],pyshadowingbuiltin:43,pyshadowingnam:[845,895,896,897,1020,1076],python:[40,41,844,883,893,918,921,1076,1188],pytorch:[1019,1022,1024,1026,1027,1028,1188,1221,1222,1223,1224,1225,1226,1230,1231,1234],pyunresolvedrefer:1076,quadrant:[1054,1060],queri:[40,41,803,817,838,844,877,887,1076,1157,1168,1169,1205,1216],query_dim:[1205,1216],query_kei:[40,41],queue:[40,41,42,844,853,854,918,987,995,1076],queue_class:[844,853,854,1076],queue_load_s:[40,41,42],queue_timeout:[40,41,42,918,1076],quick:1188,quickli:1230,radian:[1054,1055,1057,1060,1062,1068,1070],rai:[1054,1055],rais:[40,41,43,799,800,801,803,828,918,928,958,993,1000,1002,1012,1076,1217,1218,1221,1225],ram:[844,883,890,893,1076],randint:[163,343,575,745,1132],random:[37,40,41,1133,1134,1135,1136,1137,1138,1188],random_crop:1035,random_norm:[163,343,575,745,1132],random_uniform:[163,343,575,745,1132],randomli:[1035,1039,1157,1165,1205,1213],randomness_factor:[1176,1178,1182,1217,1218],rang:[918,921,974,975,1054,1060,1076,1188,1230,1234],rank:[799,800,801,918,936,1013,1016],rate:[1019,1022,1024,1026,1027,1028,1072,1073,1074,1075,1205,1216,1221,1222,1223,1224,1225,1226],rather:[40,41,844,888,918,921,970,1019,1025,1076],ratio:[844,1019,1026,1035,1040,1076,1221,1223],raw:[40,41],raw_delta:1076,reach:[844,866,870,876,1076,1120,1129],read:[40,41],readi:[1076,1230],real:[1054,1055,1059],realiti:1231,rearrang:[40,41,918,944,946],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1072,1074],receiv:[844,853,854,918,922,976,1076,1205,1215],receivess:[844,1076],receiving_fn:1182,receivng:[1072,1075],recev:[1072,1073,1074],recognit:1234,recommend:1188,rectifi:[1149,1151,1152],recurr:[1157,1167],recurrent_bia:[1157,1167],recurrent_kernel:[1157,1167],recurs:[40,41,1120,1121,1122,1128,1129],redefin:43,reduc:[40,41,799,800,801,844,888,918,945,1076,1139,1141,1142,1143,1144,1145,1146,1147],reduce_max:[40,41,170,348,458,580,752,1139],reduce_mean:[40,41,170,348,458,580,752,1139,1188,1230],reduce_min:[40,41,170,348,458,580,752,1139],reduce_prod:[40,41,170,348,458,580,752,1139],reduce_std:[40,41,348,1139],reduce_sum:[40,41,170,348,458,580,752,1076,1139],reduce_var:[40,41,170,348,458,580,752,1139],reduct:[39,40,41,799,800,801,918,945,991,992,1140,1141,1142,1143,1144,1145,1146,1147,1188],refactor:43,refer:[799,800,801,1019,1021,1022,1042,1049,1205,1215,1234],reflected_oper:[0,13,14],regard:[844,1076],regardless:[40,41,842,843],register_paramet:1230,reimplement:1234,rel:[1019,1022,1024,1026,1027,1028],rel_slice_obj:1076,relev:[1221,1222,1223,1224,1225,1226],relu:[761,1149,1150,1151,1188,1230],remain:[43,918,989,1120,1124],remaind:[40,41,918,952,999],remov:[40,41,918,1000,1072,1073,1074],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,918,950],rep:[918,1006],repeat:[40,41,270,635,918,946,1006,1076,1231],repeated_config_check:[844,1076],repeatedli:[1120,1127],repetit:[40,41,918,988,1006],replac:[40,41,43,918,932,991,992,1132,1133],repo:1188,repres:[43,894,900,905,1157,1166],represent:[40,41,42,43,784,785,786,844,871,872,894,900,906,907,918,998,1008,1076],reptil:[1072,1075],reptile_step:1072,requir:[43,842,843,894,898,918,921,925,1194,1195],resampl:[918,973],reshap:[40,41,43,635,918],reshape_lik:[40,41],respect:[918,947,1019,1021,1022,1023,1024,1026,1027,1028,1054,1064,1072,1073,1074,1075],respons:1076,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,788,789,799,800,801,803,828,844,853,918,921,947,991,992,1003,1042,1045,1048,1050,1051,1052,1053,1054,1064,1076,1139,1141,1142,1143,1144,1145,1146,1147,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1188],ret:1076,ret_dict:1076,ret_fn:[844,853,854,1076],retain:[1019,1023],retain_grad:[1019,1023],retreiv:1076,retrn:[918,998],return_cont:[40,41],return_dict:[40,41],return_graph:[1176,1177,1178],return_inner_v:[1072,1073,1074,1075],return_sequ:[1205,1214],return_st:[1205,1214],rev:[918,943],revers:[40,41,918,943,950,1011],right:[40,41],rk_e:1234,robot:1188,ronald:1188,round:[270,635,918,921,1076],row:[918,963,1132,1133],rule:[43,803,828,918,921,1054,1064],run:[844,853,1019,1021,1022,1026,1072,1073,1074,1075,1076,1188,1189,1205,1216,1217,1218],safe:[844,853,1076],safety_factor:[844,1076],same:[15,16,17,40,41,43,844,853,854,888,889,894,898,918,919,931,935,951,952,955,956,983,985,990,991,992,1003,1018,1019,1025,1030,1042,1047,1054,1059,1072,1073,1074,1076,1139,1140,1157,1158,1159,1160,1161,1162,1163,1164,1188,1205,1206,1207,1208,1209,1210,1211,1212,1230,1234],same_arrai:[40,41],sampl:[918,973,1035,1036,1132,1133,1135,1136,1157,1165,1188,1205,1213],satisfi:[918,925,1042,1044,1049],save:[40,41,918,996,1007,1035,1037,1217,1218],save_debug_info:1182,save_dir:[844,859,1076],save_to_disk:[1176,1178,1182,1217,1218],save_weight:[1217,1218],scalar:[918,932,983,1010,1014],scale:[844,886,887,1019,1027,1076,1157,1165,1168,1169,1174,1175,1205,1213,1216,1221,1224],scaled_dot_product_attent:1157,scatter:[918,983,991,992],scatter_flat:[114,270,403,518,635,918],scatter_nd:[114,270,403,518,635,918],scene:[1019,1022,1024,1026,1027,1028],schemat:1188,screen:[40,41],search:[15,18,19,40,41],second:[40,41,844,875,918,926,939,947,987,995,1005,1019,1021,1022,1026,1072,1074,1076,1221,1222,1223],secondli:1234,see:[43,59,372,799,800,801,803,828,844,856,857,858,859,894,918,921,974,975,1019,1054,1064,1182,1186,1188,1196,1198,1199,1201,1202,1204],seed:[40,41,163,745,1132],seed_valu:[40,41,1132,1137],seem:1188,seen_set:[918,961],select:[918,925,1000,1231,1234],self:[40,41,43,59,372,803,828,844,856,857,858,859,894,1019,1076,1182,1186,1188,1196,1198,1199,1201,1202,1204,1221,1225,1230,1234],sent:1076,seper:[918,953],seq:[40,41,42,1139,1140,1217,1218],sequenc:[15,16,17,40,41,42,43,842,843,844,853,854,863,864,865,866,867,868,869,870,873,874,888,894,898,918,921,925,927,929,935,936,950,963,976,979,984,988,989,992,999,1003,1006,1011,1016,1017,1019,1023,1035,1039,1040,1042,1045,1048,1076,1120,1131,1132,1134,1136,1139,1141,1142,1143,1144,1145,1146,1147,1157,1158,1159,1160,1161,1162,1163,1164,1174,1175,1194,1195,1205,1206,1207,1208,1209,1210,1211,1212,1214,1217,1218,1219,1220,1221,1225,1227,1228],sequenti:1188,set:[15,18,19,40,41,844,873,874,886,887,888,918,920,942,963,993,994,995,996,1019,1022,1024,1025,1026,1027,1028,1042,1045,1048,1076,1120,1121,1128,1130,1131,1132,1133,1137,1139,1141,1142,1143,1144,1145,1146,1147,1186,1188,1205,1214,1221,1222,1223,1224,1225,1226,1231,1234],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1186,set_debug_mod:44,set_default_devic:844,set_default_dtyp:894,set_default_float_dtyp:894,set_default_int_dtyp:894,set_default_nod:1076,set_exception_debug_mod:44,set_framework:[40,41,59,1076,1188,1230,1231,1234],set_ivy_backend:[40,41],set_min_bas:918,set_min_denomin:918,set_nest_at_index:1120,set_nest_at_indic:1120,set_param:1182,set_queue_timeout:918,set_split_factor:[844,1076],set_stat:[1221,1222,1223,1224,1225,1226],set_tmp_dir:918,set_with_grad:1019,setter:1076,sever:1234,sgd:[1188,1221],shape0:1076,shape:[40,41,43,635,844,856,894,898,918,919,929,931,935,936,949,950,951,952,954,956,960,963,983,984,985,988,989,990,991,992,998,1000,1003,1016,1017,1018,1035,1039,1042,1044,1054,1059,1060,1076,1132,1134,1135,1136,1139,1140,1157,1159,1161,1163,1182,1186,1205,1207,1208,1209,1210,1211,1212,1219,1220],shape_slic:[40,41],shape_to_tupl:918,share:[40,41,1188,1231],shift:1076,should:[40,41,42,43,788,789,803,828,842,843,844,918,929,930,937,983,989,1019,1022,1024,1026,1027,1028,1054,1064,1076,1139,1140,1188],show:[40,41,1182,1188,1234],show_debug_info:1182,show_graph:[1176,1188,1217,1218,1221,1225],show_mod_in_top_mod:[1217,1218],show_structur:[1217,1218],show_sub_contain:[40,41],show_v:[1217,1218],show_v_in_top_v:[1217,1218],shown:[40,41],shp:1076,shuffl:[40,41,163,745,1132],shuffle_h5_fil:[40,41],sigmoid:[761,1149,1188,1230],signatur:[43,59,372,844,856,857,858,859,894,1019,1182,1186,1196,1198,1199,1201,1202,1204],signific:1234,similar:[43,1157,1168,1205,1216],simpl:[43,918,948,1188,1231,1234],simplest:1231,simpli:[40,41,43,1188,1231,1234],simultan:1188,sin:[728,918,953,1054,1070,1231],sinco:1231,sine:[1054,1057,1058,1068,1069],singl:[40,41,842,843,844,853,854,873,874,875,876,918,1000,1010,1014,1035,1040,1076,1132,1135,1136,1139,1141,1142,1143,1144,1145,1146,1147,1188,1231,1234],singleton:[799,800,801],singular:[1042,1047],sinh:[728,1054],siren:[1188,1196],size:[40,41,42,844,867,868,869,870,886,887,888,918,921,929,974,975,991,999,1035,1039,1042,1045,1047,1048,1076,1132,1133,1135,1136,1139,1141,1142,1143,1144,1145,1146,1147,1205,1206,1207],size_ordered_arrai:[40,41],skew:[1042,1049],skinv:1234,skip:[40,41],slice:[40,41,796,797,918,955,956,1076,1120,1127],slice_kei:[40,41],slice_obj:[40,41,1076],slice_via_kei:[40,41],slide:[1157,1158,1159,1160,1161,1162,1163,1164,1205,1206,1207,1208,1209,1210,1211,1212],slope:[1149,1151],small:[1170,1171,1172,1173,1174,1175,1188,1219,1220,1231],smaller:[918,932],smallest:[40,41,784,785,786,918,924,931],smallest_norm:[372,784,785],softmax:[179,467,761,1149,1157,1168,1169],softplu:[761,1149],solv:1234,some:[40,41,43,918,921,1019,1021,1022,1024,1026,1027,1028,1033,1157,1165,1188,1205,1213,1231,1234],some_backend:43,some_namespac:43,someth:[43,1234],something_cool:43,somewher:[40,41],sort:[40,41,42,797,1042,1047,1076],sort_by_kei:[40,41],sorting_funct:[796,797],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,372,374,375,377,378,784,785,786,788,789,796,797,799,800,801,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,846,847,848,849,850,851,853,854,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1186,1191,1192,1193,1194,1195,1196,1198,1199,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1232,1233,1234],space:[918,921,953,974,975],spars:[1170,1173],sparse_cross_entropi:1170,spawn:[918,981],specif:[40,41,43,844,886,918,937,944,945,946,981,1072,1073,1074,1075,1076,1132,1138,1188,1217,1218,1230,1231],specifc:[1132,1133],specifi:[40,41,43,799,800,801,844,863,864,865,866,867,868,869,870,873,874,878,880,884,887,888,889,894,898,900,918,921,923,924,925,932,935,936,954,955,956,962,974,975,1003,1013,1016,1042,1045,1048,1076,1120,1125,1126,1130,1131,1139,1140,1141,1142,1143,1144,1145,1146,1147],split:[40,41,114,270,403,518,635,844,853,867,868,869,870,886,887,888,918,976,1076],split_arg:1076,split_factor:[844,853,1076],split_func_cal:[844,1076],split_siz:1076,spread:[844,876,1076],squar:[918,963,1042,1044],squeez:[114,270,403,518,635,918],stabil:[796,797,918,1001,1002],stabl:[796,797,918,958,959,993,994,1001,1002],stable_divid:918,stable_pow:918,stack:[40,41,270,635,918,1035,1040,1120,1121,1128,1205,1214],stack_imag:[153,329,445,565,713,1035],stacked_dim_s:1076,stage:43,standard:[40,41,43,784,785,1132,1135,1139,1145,1174,1175,1219,1220],start:[40,41,844,859,918,921,974,975,1076,1188,1231],starting_index:[40,41],starting_split_factor:[844,1076],state:[1076,1157,1167,1176,1177,1178,1182,1188,1191,1192,1193,1194,1195,1196,1198,1199,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230],statement:1231,static_argnam:[842,843],static_argnum:[842,843],std:[1132,1135],step:[40,41,844,918,921,974,975,1019,1021,1022,1024,1026,1027,1028,1072,1073,1074,1075,1076,1188,1221,1222,1223,1224,1225,1226,1230,1234],stephen:1188,stick:1188,still:[40,41],stochast:[1221,1226],stop:[40,41,844,859,888,918,921,974,975,1019,1022,1024,1026,1027,1028,1030,1072,1073,1074,1075,1076,1221,1222,1223,1224,1225,1226],stop_gradi:[40,41,324,440,560,707,844,888,1019,1022,1024,1026,1027,1028,1072,1073,1074,1075,1076,1221,1222,1223,1224,1225,1226],stopiter:1076,store:[40,41,918,953,999,1019,1033,1217,1218],store_var:[1217,1218],str:[15,16,17,40,41,42,43,372,374,375,784,785,786,842,843,844,853,854,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,888,894,899,900,905,906,907,908,909,910,917,918,925,942,944,945,946,979,981,984,991,992,1042,1045,1048,1072,1073,1074,1075,1076,1120,1124,1139,1140,1194,1195,1205,1216,1217,1218],str_to_nod:1076,straight:1231,strength:[1188,1234],stride:[1157,1158,1159,1160,1161,1162,1163,1164,1205,1206,1207,1208,1209,1210,1211,1212],string:[40,41,43,844,860,862,871,872,877,883,889,890,893,894,898,904,906,907,908,917,918,921,925,942,963,984,985,1017,1018,1076,1157,1158,1159,1160,1161,1162,1163,1164,1205,1206,1207,1208,1209,1210,1211,1212,1217,1218],structur:[40,41,42,43,918,937],structural_diff:[40,41],sub:[40,41,844,867,868,873,874,875,876,918,999,1072,1073,1074,1075,1076],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1076,sub_mod:[1217,1218],sub_modul:[1227,1228],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1188,1189,1219,1220,1227,1228],subsequ:43,subset:43,substr:[40,41],suggest:1188,suitabl:[1035,1040],sum:[40,41,844,873,874,875,876,888,918,941,945,991,992,1076,1139,1140,1146],summat:[40,41,1139,1140],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,92,95,96,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,154,155,156,158,159,160,164,165,166,167,168,169,171,172,173,174,175,176,177,180,182,183,185,186,187,188,189,190,191,197,198,199,202,210,213,214,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,330,331,332,334,335,336,337,339,340,341,344,345,346,347,349,350,351,352,353,354,355,356,359,361,362,363,364,365,366,367,373,374,375,378,386,389,390,402,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,441,442,443,444,446,447,448,450,451,452,455,457,459,460,461,462,463,464,465,468,469,471,472,473,474,475,476,477,483,484,485,488,496,499,500,512,513,514,515,516,517,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,561,562,563,564,566,567,568,570,571,572,576,577,578,579,581,582,583,584,585,586,587,591,592,593,599,600,601,604,612,615,616,628,629,630,631,632,633,634,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,708,709,710,711,712,714,715,716,718,719,720,721,722,723,725,726,727,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,746,747,748,749,750,751,753,754,755,756,757,758,759,762,763,764,765,766,767,768,770,771,773,774,775,776,777,778,779,785,786,789,797,800,801,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1043,1044,1045,1046,1047,1048,1049,1051,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1171,1172,1173,1175,1177,1178,1180,1181,1183,1187,1188,1192,1193,1195,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1233,1234],supports_inplac:918,suppos:1234,svd:[157,333,449,569,717,1042],swap:[40,41,918,1005],swapax:[40,41,518,635,918,1234],symmetr:[1042,1049],tab:1188,take:[918,973],taken:[1139,1141,1142,1143,1145,1147],tan:[728,1054,1059],tangent:[1054,1059,1060,1061,1070,1071,1149,1156],tanh:[728,761,1054,1149],target:[40,41,844,860,863,864,865,866,867,868,869,870,873,874,875,876,889,1076,1188],target_dict:[40,41],task:[1072,1073,1074,1075],team:1234,templat:1188,temporari:[918,996,1007],tensor:[40,41,43,796,797,844,862,894,904,918,921,923,924,929,974,975,978,980,983,984,985,989,991,992,999,1017,1018,1076,1132,1133,1134,1157,1165,1167,1188,1205,1213,1215,1221,1222,1223,1224,1225,1226,1230,1231],tensorflow:[1157,1159,1161,1163,1188,1205,1207,1209,1211,1231,1234],term:[40,41,1157,1167,1188,1205,1215],termcolor:[40,41,42],termin:[40,41,42,1076],test:[788,789,799,800,801,894,909,910],tf_concat:1188,than:[40,41,784,785,844,888,918,921,931,932,951,970,978,1000,1003,1019,1025,1076,1132,1136,1188,1231],thei:[40,41,43,1054,1060,1072,1073,1074,1132,1133,1188,1227,1228,1231],them:[1188,1234],themselv:[1120,1121],therefor:43,thi:[40,41,42,43,844,866,870,876,883,888,893,918,921,953,987,989,995,1019,1022,1024,1025,1026,1027,1028,1033,1042,1045,1048,1076,1120,1124,1129,1139,1141,1142,1143,1144,1145,1146,1147,1157,1166,1188,1217,1218,1221,1222,1223,1224,1225,1226,1230,1231,1234],thing:[43,1188],those:[40,41,918,932,1019,1033,1042,1047,1076],though:43,threshold:[918,978,980],through:[40,41],tile:[270,518,635,918],time:[918,1006,1019,1022,1026,1072,1073,1074,1075,1076,1132,1133,1157,1167,1205,1216,1217,1218,1234],time_chronolog:[1176,1177,1182],time_infer:[1176,1177],timeout:[40,41,42,844,853,854,918,987,995,1076],timestep:[1157,1167,1205,1214],timing_fnam:[1176,1177],titl:1188,tmp_dir:918,tmp_dr:[918,996],to_appli:[40,41],to_clon:[844,1076],to_dev:[40,41,107,264,511,627,844],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[844,1076],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1188],to_ivy_modul:[181,769,1188,1194],to_json:[40,41],to_kv_fn:[1157,1168],to_kv_v:[1157,1168],to_list:[40,41,635,918],to_multi_dev:[40,41],to_mut:[1120,1122,1129],to_n:[15,40,41,1188],to_nod:1076,to_numpi:[40,41,635,918,1188,1230],to_out_fn:[1157,1168],to_out_v:[1157,1168],to_q_fn:[1157,1168],to_q_v:[1157,1168],to_raw:[40,41],to_scalar:[635,918],todo:1076,togeth:[40,41,1227,1228],tool:[1188,1231],top_mod:[1217,1218],topic:1234,torch:[43,842,843,1188,1230,1231,1234],torch_concat:1188,torchfcmodel:1230,total:[40,41,42,844,890,1076],total_mem_on_dev:844,total_mem_on_nod:1076,tpu:[844,891,1076],tpu_is_avail:[511,627,844,1076],tpye:[894,905],trace:[40,41,918,970],track:[844,1076,1120,1129,1217,1218],track_submod_call_ord:[1217,1218],track_submod_ret:[1217,1218],trail:[1219,1220],train:[1019,1021,1022,1026,1188,1189],trainabl:[1019,1025,1188,1189,1194,1195,1217,1218,1227],trainer:1188,tran:1234,transform:[1157,1165,1166],transpos:[40,41,114,270,403,635,844,875,918,1076,1157,1159,1161,1163,1205,1207,1209,1211],travers:[15,18,19,40,41,1120,1129],treat:[40,41,842,843],tree_depth:1186,tree_height:1182,tri:[40,41],trigonometr:[1054,1055,1059,1062,1068],trim_kei:[40,41],trust:[1019,1026,1221,1223],truth:[918,947,1050,1051,1052,1053],try_else_non:918,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[844,1076],tune_dev_alloc:844,tune_dev_split:844,tune_node_alloc:1076,tune_node_split:1076,tune_step:[844,1076],tupl:[15,16,17,18,19,40,41,43,799,800,801,842,843,918,936,953,954,998,1016,1076,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1134,1139,1141,1142,1143,1144,1145,1146,1147],two:[40,41,918,921,926,939,977,1005,1042,1045,1047],type:[15,18,40,41,42,43,59,374,375,785,786,788,789,799,800,801,803,828,844,856,857,858,859,871,872,876,888,894,898,899,900,904,905,906,907,908,909,910,917,918,919,921,925,931,935,937,947,951,952,954,963,970,983,984,985,990,1004,1014,1017,1018,1019,1025,1030,1054,1064,1076,1182,1186,1188,1196,1198,1199,1201,1202,1204,1217,1218,1231],types_to_iteratively_nest:[40,41,42],uint8:[1035,1037,1041],uint8_img_to_float_img:1035,unchang:[15,16,17,18,19],unif:1076,unifi:[40,41,844,873,874,875,876,888,1076,1188],uniform:[40,41,1132,1133,1135,1136,1196,1198,1199,1202,1203],uniformli:[1132,1134,1136],unify_arrai:1076,unify_it:1076,unify_nest:1076,union:[15,18,19,40,41,43,372,374,375,784,785,786,788,789,796,797,799,800,801,803,828,842,843,844,862,867,868,869,870,888,889,894,898,899,900,904,905,906,907,908,909,910,917,918,919,920,921,923,924,925,926,927,929,931,932,933,934,935,936,938,939,940,941,944,945,946,947,949,950,951,952,953,954,955,956,960,962,963,964,971,972,973,974,975,977,978,979,980,983,984,985,988,989,990,991,992,997,998,999,1000,1003,1005,1006,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1076,1120,1121,1122,1128,1129],uniqu:[844,853,854,1072,1073,1074,1075,1076,1120,1124],unique_kwarg:1076,unit:[844,1054,1055,1057,1076,1149,1150,1151,1152],unitari:[1042,1047],unless:[918,983,985,1018],unlik:[844,1076],unnorm:[1132,1133],unpack:[918,1013],unrol:[1157,1167],unset:1231,unset_debug_mod:44,unset_default_devic:844,unset_default_dtyp:894,unset_default_float_dtyp:894,unset_default_int_dtyp:894,unset_framework:[59,1231],unset_with_grad:1019,unstack:[40,41,114,270,403,518,635,918],unus:[842,843],updat:[40,41,844,853,918,968,991,992,1019,1021,1022,1024,1026,1027,1028,1072,1073,1074,1076,1120,1125,1126,1130,1131,1157,1167,1194,1195,1221,1222,1223,1224,1225,1226,1231,1234],update_backend:[40,41],update_config:[40,41],update_inference_tim:1182,upper:[40,41,1132,1136],upper_depth:[1217,1218],usabl:[1188,1234],usag:[844,888,1076],use:[40,41,42,43,844,853,854,879,891,918,988,1001,1002,1076,1157,1168,1174,1175,1188,1219,1220,1231,1234],used:[40,41,43,844,853,883,886,887,893,894,905,918,958,959,976,985,991,992,993,994,1018,1019,1026,1027,1042,1045,1072,1073,1074,1075,1076,1120,1129,1205,1216,1221,1223,1224,1230,1231],used_dev:[844,853],used_mem_on_dev:844,used_mem_on_nod:1076,used_node_str:1076,used_node_strs_dict:1076,useful:[40,41,844,888,1076,1157,1166,1188,1231],user:[1188,1205,1216,1217,1218,1231,1234],uses:1188,using:[40,41,1019,1021,1022,1120,1123,1127,1139,1140,1157,1165,1169,1188,1205,1213,1230,1231,1234],util:[844,877,1076],utility_funct:[799,800,801],v_with_top_v_key_chain:[1217,1218],val:[40,41,803,838,918,966,967,968,993,994,1186],valid:[799,800,801,894,899,918,1001,1002,1157,1158,1159,1160,1161,1162,1163,1164,1205,1206,1207,1208,1209,1210,1211,1212],valid_dtyp:894,valu:[40,41,796,797,844,856,887,888,918,919,921,923,924,932,933,934,936,937,943,947,953,954,955,956,971,972,974,975,978,980,987,988,989,990,991,992,993,994,995,1011,1014,1015,1016,1019,1023,1026,1035,1041,1042,1047,1050,1051,1052,1053,1054,1065,1066,1067,1072,1073,1074,1076,1120,1124,1125,1126,1130,1131,1132,1135,1136,1139,1141,1143,1157,1168,1169,1174,1175,1182,1205,1216,1219,1220,1221,1223],value_is_nan:918,vanilla:[1072,1074],var_shap:1196,variabl:[15,16,17,18,19,40,41,324,440,560,707,918,928,966,967,968,969,970,1004,1019,1022,1023,1024,1025,1026,1027,1028,1030,1033,1072,1073,1074,1075,1157,1168,1174,1175,1194,1195,1196,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228],variable_data:[707,1019],varianc:[40,41,1139,1147,1234],varieti:1231,variou:[43,1188],vector:[40,41,918,934,939,1042,1047,1048,1049,1157,1166,1205,1215],vector_norm:[40,41,1042],vector_to_skew_symmetric_matrix:[157,333,449,569,717,1042],verbos:1233,veri:[43,1188],version:43,via:[1120,1121,1128,1231],view:[1035,1040],vision:1188,visual:1231,volum:[1157,1162],vw_tm1:[1019,1022,1026],wai:[1231,1234],wait:[40,41,42],want:[1188,1231,1234],warn:[59,66,67,68,69,70],warp:[1035,1036],watch:1230,weight:[1019,1021,1022,1024,1026,1027,1028,1157,1166,1167,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1217,1218,1221,1223,1224],weight_initi:[1205,1206,1207,1208,1209,1210,1211,1212,1214,1215],weights_path:[1217,1218],well:[40,41,918,962],were:[40,41,1076],what:1188,when:[40,41,42,43,844,918,930,1002,1015,1042,1047,1076,1188,1217,1218,1231,1234],where:[40,41,43,270,635,799,800,801,803,828,918,921,929,932,936,949,964,971,972,983,1016,1042,1047,1120,1121,1128,1132,1133],wherea:43,wherebi:[1120,1129],whether:[15,18,19,40,41,42,799,800,801,842,843,844,862,875,879,883,888,891,893,894,904,908,909,910,917,918,920,926,927,940,943,948,953,960,962,965,969,970,976,997,1004,1013,1014,1019,1022,1023,1024,1025,1026,1027,1028,1030,1072,1073,1074,1075,1076,1120,1121,1122,1124,1128,1129,1132,1133,1149,1150,1157,1165,1188,1194,1195,1205,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226],which:[40,41,42,43,784,785,786,799,800,801,842,843,844,853,854,862,867,868,869,870,873,874,875,876,878,880,884,886,887,888,894,899,904,908,917,918,921,925,935,937,939,940,941,943,950,954,955,956,957,963,964,973,974,975,982,983,984,985,986,988,991,992,999,1003,1013,1015,1017,1018,1019,1022,1023,1024,1026,1027,1028,1030,1032,1033,1035,1037,1042,1045,1048,1054,1060,1076,1120,1124,1125,1126,1130,1131,1132,1133,1134,1135,1136,1139,1141,1142,1143,1144,1145,1146,1147,1149,1154,1157,1168,1169,1188,1194,1195,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1227,1228,1230,1231],whitespac:[40,41,42],whose:[43,803,828,918,925,930,1139,1140,1141,1142,1143,1145,1147],why:[1188,1189],width:[1035,1040],wiki:1234,wikipedia:1234,window:[1035,1040,1157,1158,1159,1160,1161,1162,1163,1164,1205,1206,1207,1208,1209,1210,1211,1212],wise:[40,41,43,803,828,918,931,932,947,951,952,978,980,990,1019,1022,1024,1026,1028,1050,1051,1052,1053,1054,1055,1057,1059,1060,1062,1064,1065,1066,1067,1068,1070,1149,1150,1151,1152,1153,1154,1155,1156],wish:1231,with_arg_label:[1176,1178,1182,1217,1218],with_array_cach:[1176,1177,1178,1182],with_bia:[1205,1215],with_cal:[918,943],with_default_key_color:[40,41],with_edge_label:[1176,1178,1182,1217,1218],with_entries_as_list:[40,41],with_grad:[1019,1029,1217,1218],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1076,with_output_label:[1176,1178,1182,1217,1218],with_partial_v:[1217,1218],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,918,999,1076],with_to_kv_fn:[1205,1216],with_to_out_fn:[1205,1216],with_to_q_fn:[1205,1216],within:[15,18,19,918,921,1042,1047,1132,1136],without:[40,41,43,918,987,989,995,1120,1122,1231],wonder:1188,word:[15,16,17,918,921,1132,1136,1194,1195],work:[43,1230],worker:[844,853,854,1076],worker_class:[844,853,854,1076],worker_kwarg:1076,would:[43,796,797,1149,1154,1188,1231,1234],wrap:[15,40,41,42,43,918,930,1019,1033,1188],wrapper:43,write:[40,41,43,1188,1189,1234],written:[43,1188,1234],ws_new:[1019,1022,1024,1026,1027,1028],x1_i:[918,947,1054,1064],x2_i:[918,947,1054,1064],x_feat_dim:[1157,1168],x_i:[788,789],x_in:[1188,1230],x_inv:[1042,1044],x_max:[918,932],x_min:[918,932],x_sub:1076,xkk:1234,xkkm1:1234,xkm1km1:1234,xs0:1076,xs_t:1076,year:[1188,1234],yet:[1120,1129,1234],yield:[918,1015],you:[1188,1230,1231,1234],your:[1188,1230,1231,1234],your_awesome_project:1231,yourself:1188,zero:[40,41,114,270,403,518,635,799,800,801,918,936,983,985,991,992,1016,1018,1019,1021,1022,1026,1027,1157,1165,1188,1196,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1221,1222,1223,1224],zero_pad:[270,518,635,918],zeros_lik:[114,270,403,518,635,918],zip:1076,zk_e:1234},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":943,"function":[77,78,83,85,87,88,89,90,91,93,94,195,196,201,203,205,206,207,208,209,211,212,371,372,377,379,381,382,383,384,385,387,388,481,482,487,489,491,492,493,494,495,497,498,597,598,603,605,607,608,609,610,611,613,614,783,784,788,790,792,793,794,795,796,798,799],Ones:1201,Using:1231,abs:[271,519,636,919],aco:[729,1055],acosh:[730,1056],activ:[179,358,467,589,761,1149,1191],adam:1222,adam_step:1021,adam_upd:1022,algebra:[86,87,204,205,380,381,490,491,606,607,791,792],all:[95,213,389,499,615,800],all_equ:920,all_nested_indic:1121,ani:[96,214,390,500,616,801],api:[0,43,75,98,193,216,369,392,479,502,595,618,781],arang:[115,272,404,520,637,921],arg_nam:922,argmax:[116,405,521,638,923],argmin:[117,406,522,639,924],args_to_ivi:16,args_to_n:17,argsort:[92,210,386,496,612,797],arithmet:[1,99,217,393,503,619],arrai:[0,3,43,75,97,98,100,118,193,215,216,218,225,273,369,391,392,394,407,479,501,502,504,523,595,617,618,620,640,781,803,925],array_equ:[274,641,926],arrays_equ:927,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[731,1057],asinh:[732,1058],assert_supports_inplac:928,atan2:[734,1060],atan:[733,1059],atanh:[735,1061],attribut:[5,101,219,395,505,621],backend:[43,73],bilinear_resampl:[154,330,446,566,714,1036],binary_cross_entropi:1171,bitwis:[7,102,220,396,506,622],broadcast_to:[275,642,929],builder:51,builtin:[97,215,225,391,501,617,803],builtin_ab:[226,804],builtin_add:[227,805],builtin_and:[228,806],builtin_bool:[229,807],builtin_contain:[230,808],builtin_deepcopi:[231,809],builtin_dir:[232,810],builtin_eq:[233,811],builtin_float:[234,812],builtin_floordiv:[235,813],builtin_g:[236,814],builtin_getattr:[237,815],builtin_getattribut:[238,816],builtin_getitem:[239,817],builtin_gt:[240,818],builtin_int:[241,819],builtin_invert:[242,820],builtin_l:[243,821],builtin_lt:[244,822],builtin_mul:[245,823],builtin_n:[246,824],builtin_neg:[247,825],builtin_or:[248,826],builtin_po:[249,827],builtin_pow:[250,828],builtin_radd:[251,829],builtin_rand:[252,830],builtin_rfloordiv:[253,831],builtin_rmul:[254,832],builtin_ror:[255,833],builtin_rpow:[256,834],builtin_rsub:[257,835],builtin_rtruediv:[258,836],builtin_rxor:[259,837],builtin_setitem:[260,838],builtin_sub:[261,839],builtin_truediv:[262,840],builtin_xor:[263,841],cache_fn:930,cast:[119,276,408,524,643,898],ceil:[277,644,931],choleski:[718,1043],choose_random_framework:61,citat:1188,clear_framework_stack:62,clear_mem_on_dev:[629,860],clip:[278,645,932],clip_matrix_norm:933,clip_vector_norm:934,clone:1091,clone_arrai:1092,clone_it:1093,clone_nest:1094,clonedit:1078,cloneditem:1077,clonednest:1079,closest_valid_dtyp:899,code:1234,comparison:[9,103,221,397,507,623],compil:[279,409,646,842,843,1176],compile_graph:1177,concaten:[120,280,410,525,647,935],constant:[76,194,370,480,596,782],constant_pad:[281,526,648,936],contain:[40,41],container_typ:[649,937],content:1188,contribut:43,conv1d:[185,361,471,773,1158,1206],conv1d_transpos:[186,362,472,774,1159],conv1dtranspos:1207,conv2d:[187,363,473,591,775,1160,1208],conv2d_transpos:[188,364,474,776,1161],conv2dtranspos:1209,conv3d:[189,365,475,592,777,1162,1210],conv3d_transpos:[190,366,476,778,1163],conv3dtranspos:1211,convers:15,convert:[181,769,1194],convert_dtyp:900,copy_arrai:[650,938],copy_nest:1122,core:[106,224,400,510,626,802],cos:[736,1062],cosh:[737,1063],cprint:1233,creation:[77,195,371,481,597,783],cross:[282,651,939],cross_entropi:1172,cumprod:[121,283,411,652,940],cumsum:[653,941],current_framework:63,current_framework_str:[654,942],data:[78,82,196,200,372,376,482,486,598,602,784,787],debug_mod:45,debugg:44,default_devic:861,default_dtyp:901,default_float_dtyp:902,default_int_dtyp:903,default_nod:1095,depthwise_conv2d:[191,367,477,593,779,1164],depthwiseconv2d:1212,design:43,dev:[109,266,513,630,862],dev_clon:863,dev_clone_arrai:864,dev_clone_it:865,dev_clone_nest:866,dev_dist:867,dev_dist_arrai:868,dev_dist_it:869,dev_dist_nest:870,dev_from_str:[110,267,514,631,871],dev_to_str:[111,268,515,632,872],dev_unifi:873,dev_unify_arrai:874,dev_unify_it:875,dev_unify_nest:876,dev_util:877,devclonedit:847,devcloneditem:846,devclonednest:848,devdistit:850,devdistitem:849,devdistnest:851,devic:[20,107,264,401,511,627,844],devmapp:853,devmappermultiproc:854,distribute_nest:1096,divid:1064,document:1188,dropout:[1165,1213],dtype:[122,284,412,527,655,894,904],dtype_bit:[123,285,413,528,656,905],dtype_from_str:[124,286,414,529,657,906],dtype_to_str:[125,287,415,530,658,907],ecosystem:52,einops_rearrang:944,einops_reduc:945,einops_repeat:946,einsum:[171,349,459,581,753,1140],elementwis:[83,201,377,487,603,788],equal:[531,659,947],erf:[455,738,1065],execute_with_gradi:[151,325,441,561,708,1023],exist:948,exp:[739,1066],expand_dim:[288,660,949],extens:[86,204,380,490,606,791],finfo:[80,198,374,484,600,785],firstlayersiren:1198,flip:[126,289,416,532,661,950],float_img_to_uint8_img:1037,floor:[290,662,951],floormod:[291,663,952],fomaml_step:1073,fourier_encod:953,framework:59,full:[127,292,417,533,664,954],func:72,gather:[128,293,418,534,665,955],gather_nd:[129,294,419,535,666,956],geglu:1192,gelu:[359,468,762,1150,1193],gener:[22,114,270,403,518,635,918],get_all_arrays_in_memori:957,get_all_arrays_on_dev:878,get_framework:64,get_min_bas:958,get_min_denomin:959,get_num_dim:[667,960],get_referrers_recurs:961,global:1179,glorotuniform:1199,gpu_is_avail:[879,1097],gradient:[24,150,324,440,560,707,1019],gradient_descent_upd:1024,gradient_imag:[155,331,447,567,715,1038],graph:1182,gym:53,handler:59,has_nan:962,helper:1184,ident:[130,295,420,536,668,963],iinfo:[81,199,375,485,601,786],imag:[26,153,329,445,565,713,1035],index_nest:1123,indices_wher:[131,296,421,669,964],initi:1196,inplac:[11,104,222,398,508,624],inplace_arrays_support:965,inplace_decr:[132,297,422,537,670,966],inplace_incr:[133,298,423,538,671,967],inplace_upd:[134,299,424,539,672,968],inplace_variables_support:969,inv:[719,1044],invalid_dtyp:908,is_arrai:[135,300,425,540,673,970],is_float_dtyp:909,is_int_dtyp:910,is_vari:[152,326,442,562,709,1025],isfinit:[84,202,378,488,604,789],isinf:[301,541,674,971],isnan:[302,542,675,972],ivi:[43,50,51,52,53,54,55,56,57,58,780,1230,1231,1234],ivymodul:[182,770],jax:74,lamb:1223,lamb_upd:1026,lar:1224,lars_upd:1027,layer:[184,360,470,590,772,1157,1205],layer_norm:1175,layernorm:1220,leaky_relu:[763,1151],linalg:[28,157,333,449,569,717,1042],linear:[86,87,204,205,380,381,490,491,606,607,791,792,1166,1215],linear_resampl:[136,303,426,543,676,973],linspac:[137,304,427,544,677,974],log:[740,1067,1185],log_global_inference_abs_tim:1180,log_global_inference_rel_tim:1181,logic:[30,161,338,453,573,724,1050],logical_and:[339,725,1051],logical_not:[340,726,1052],logical_or:[341,727,1053],logspac:[138,305,428,545,678,975],loss:1170,lstm:1214,lstm_updat:1167,maml_step:1074,manipul:[88,206,382,492,608,793],map:1124,map_nest_at_index:1125,map_nest_at_indic:1126,match_kwarg:976,math:[32,162,342,454,574,728,1054],matmul:[306,546,679,977],matrix_norm:[158,334,450,570,720,1045],maximum:[680,978],mech:54,memori:55,meshgrid:[307,681,979],meta:[34,1072],method:[85,203,379,489,605,790],minimum:[682,980],model:56,modul:[1217,1218,1230],multi:1076,multi_head_attent:1168,multi_index_nest:1127,multidevcontain:42,multidevit:857,multidevitem:856,multidevnest:858,multiheadattent:1216,multinodeit:1082,multinodeitem:1081,multinodenest:1083,multinomi:[164,344,457,576,746,1133],multiprocess:[683,981],mxnet:192,nativ:1230,nest:1120,nested_indices_wher:1128,nested_map:1129,network:1230,next:1188,node:[1076,1098],node_dist:1099,node_dist_arrai:1100,node_dist_it:1101,node_str:1102,node_to_str:1103,node_util:1104,nodedistit:1085,nodedistitem:1084,nodedistnest:1086,nodemapp:1088,nodemappermultiproc:1089,norm:[1174,1219],num_arrays_in_memori:982,num_arrays_on_dev:880,num_cpu_cor:881,num_gpu:[112,882,1105],numpi:368,nutshel:1188,one_hot:[139,429,547,684,983],ones:[140,308,430,548,685,984],ones_lik:[141,309,431,549,686,985],oper:[1,3,7,9,11,13,43,99,100,102,103,104,105,217,218,220,221,222,223,393,394,396,397,398,399,503,504,506,507,508,509,619,620,622,623,624,625],optim:[1221,1225],optimizer_upd:1028,overview:1188,param:1186,percent_used_mem_on_dev:883,percent_used_mem_on_nod:1106,pinv:[335,721,1046],portabl:1234,print_all_arrays_in_memori:986,print_all_arrays_on_dev:884,profil:[108,265,402,512,628,859,1090],queue_timeout:987,randint:[165,345,577,747,1134],random:[36,163,343,456,575,745,1132],random_crop:1039,random_norm:[166,346,578,748,1135],random_uniform:[167,347,579,749,1136],reduce_max:[172,350,460,582,754,1141],reduce_mean:[173,351,461,583,755,1142],reduce_min:[174,352,462,584,756,1143],reduce_prod:[175,353,463,585,757,1144],reduce_std:[354,1145],reduce_sum:[176,355,464,586,758,1146],reduce_var:[177,356,465,587,759,1147],reduct:[38,170,348,458,580,752,1139],reflect:[13,105,223,399,509,625],relu:[764,1152],repeat:[310,687,988],reptile_step:1075,reshap:[688,989],robot:57,round:[311,689,990],run:1231,scaled_dot_product_attent:1169,scatter_flat:[142,312,432,550,690,991],scatter_nd:[143,313,433,551,691,992],search:[89,207,383,493,609,794],seed:[168,750,1137],sequenti:[1227,1228],set:[90,208,384,494,610,795],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:885,set_default_dtyp:911,set_default_float_dtyp:912,set_default_int_dtyp:913,set_default_nod:1107,set_exception_debug_mod:48,set_framework:65,set_min_bas:993,set_min_denomin:994,set_nest_at_index:1130,set_nest_at_indic:1131,set_queue_timeout:995,set_split_factor:[886,1108],set_tmp_dir:996,set_with_grad:1029,sgd:1226,shape:[692,997],shape_to_tupl:998,show_graph:1178,shuffl:[169,751,1138],sigmoid:[765,1153],signatur:[85,203,379,489,605,790],sin:[741,1068],sinh:[742,1069],siren:1202,softmax:[180,469,766,1154],softplu:[767,1155],sort:[91,209,385,495,611,796],sparse_cross_entropi:1173,split:[144,314,434,552,693,999],split_factor:[887,1109],split_func_cal:[888,1110],squeez:[145,315,435,553,694,1000],stable_divid:1001,stable_pow:1002,stack:[316,695,1003],stack_imag:[156,332,448,568,716,1040],statist:[93,211,387,497,613,798],stop_gradi:[327,443,563,710,1030],str_to_nod:1111,submodul:43,supports_inplac:1004,svd:[159,336,451,571,722,1047],swapax:[554,696,1005],tan:[743,1070],tanh:[744,768,1071,1156],tensorflow:478,tile:[317,555,697,1006],tmp_dir:1007,to_dev:[113,269,516,633,889],to_ivi:18,to_ivy_modul:[183,771,1195],to_list:[698,1008],to_n:19,to_nod:1112,to_numpi:[699,1009],to_scalar:[700,1010],torch:594,total_mem_on_dev:890,total_mem_on_nod:1113,tpu_is_avail:[517,634,891,1114],train:1230,trainabl:1230,transpos:[146,318,436,701,1011],tree:1188,try_else_non:1012,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,82,196,200,372,376,482,486,598,602,784,787],uint8_img_to_float_img:1041,unifi:1115,unify_arrai:1116,unify_it:1117,unify_nest:1118,unset_debug_mod:49,unset_default_devic:892,unset_default_dtyp:914,unset_default_float_dtyp:915,unset_default_int_dtyp:916,unset_framework:71,unset_with_grad:1031,unstack:[147,319,437,556,702,1013],used_mem_on_dev:893,used_mem_on_nod:1119,util:[94,212,388,498,614,799],valid_dtyp:917,value_is_nan:1014,variabl:[328,444,564,711,1032],variable_data:[712,1033],vector_norm:1048,vector_to_skew_symmetric_matrix:[160,337,452,572,723,1049],verbos:1232,vision:58,where:[320,703,1015,1188],why:1234,with_grad:1034,wrapper:72,write:1231,zero:[148,322,438,558,705,1017,1204],zero_pad:[321,557,704,1016],zeros_lik:[149,323,439,559,706,1018]}})